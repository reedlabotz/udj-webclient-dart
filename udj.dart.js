// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.HashMapImplementation = {"": ["_keys", "_values", "_loadLimit", "_numberOfEntries", "_numberOfDeleted"],
 "super": "Object",
 _probeForAdding$1: function(key) {
  if (key == null)
    throw $.$$throw($.CTC);
  var t1 = $.get$hashCode(key);
  if (t1 !== (t1 | 0))
    return this._probeForAdding$1$bailout(1, key, t1);
  var hash = (t1 & this._keys.length - 1) >>> 0;
  for (var numberOfProbes = 1, insertionIndex = -1; true;) {
    t1 = this._keys;
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    var existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && $.CTC9 === existingKey)
      insertionIndex = hash;
    var numberOfProbes0 = numberOfProbes + 1;
    hash = $.HashMapImplementation__nextProbe(hash, numberOfProbes, this._keys.length);
    numberOfProbes = numberOfProbes0;
  }
},
 _probeForAdding$1$bailout: function(state0, key, t1) {
  var hash = $.and(t1, this._keys.length - 1);
  for (var numberOfProbes = 1, insertionIndex = -1; true;) {
    t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    var existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && $.CTC9 === existingKey)
      insertionIndex = hash;
    var numberOfProbes0 = numberOfProbes + 1;
    hash = $.HashMapImplementation__nextProbe(hash, numberOfProbes, this._keys.length);
    numberOfProbes = numberOfProbes0;
  }
},
 _probeForLookup$1: function(key) {
  if (key == null)
    throw $.$$throw($.CTC);
  var hash = $.and($.get$hashCode(key), this._keys.length - 1);
  if (hash !== (hash | 0))
    return this._probeForLookup$1$bailout(1, key, hash);
  for (var numberOfProbes = 1; true;) {
    var t1 = this._keys;
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    var existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    var numberOfProbes0 = numberOfProbes + 1;
    hash = $.HashMapImplementation__nextProbe(hash, numberOfProbes, this._keys.length);
    numberOfProbes = numberOfProbes0;
  }
},
 _probeForLookup$1$bailout: function(state0, key, hash) {
  for (var numberOfProbes = 1; true;) {
    var t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    var existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    var numberOfProbes0 = numberOfProbes + 1;
    hash = $.HashMapImplementation__nextProbe(hash, numberOfProbes, this._keys.length);
    numberOfProbes = numberOfProbes0;
  }
},
 _ensureCapacity$0: function() {
  var newNumberOfEntries = this._numberOfEntries + 1;
  if ($.geB(newNumberOfEntries, this._loadLimit)) {
    this._grow$1(this._keys.length * 2);
    return;
  }
  var capacity = this._keys.length;
  var numberOfFreeOrDeleted = capacity - newNumberOfEntries;
  var t1 = this._numberOfDeleted;
  if (t1 > numberOfFreeOrDeleted - t1)
    this._grow$1(capacity);
},
 _grow$1: function(newCapacity) {
  var capacity = this._keys.length;
  this._loadLimit = $.tdiv(newCapacity * 3, 4);
  var oldKeys = this._keys;
  var oldValues = this._values;
  this._keys = $.ListImplementation_List(newCapacity);
  this._values = $.ListImplementation_List(newCapacity);
  for (var t1 = oldKeys.length, t2 = oldValues.length, i = 0; i < capacity; ++i) {
    if (i >= t1)
      throw $.ioore(i);
    var key = oldKeys[i];
    if (key == null || key === $.CTC9)
      continue;
    if (i >= t2)
      throw $.ioore(i);
    var value = oldValues[i];
    var newIndex = this._probeForAdding$1(key);
    var t3 = this._keys;
    if (newIndex !== (newIndex | 0))
      throw $.iae(newIndex);
    if (newIndex < 0 || newIndex >= t3.length)
      throw $.ioore(newIndex);
    t3[newIndex] = key;
    t3 = this._values;
    if (newIndex >= t3.length)
      throw $.ioore(newIndex);
    t3[newIndex] = value;
  }
  this._numberOfDeleted = 0;
},
 clear$0: function() {
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  var t1 = this._keys;
  var length$ = t1.length;
  for (var t2 = this._values, t3 = t2.length, i = 0; i < length$; ++i) {
    t1[i] = null;
    if (i >= t3)
      throw $.ioore(i);
    t2[i] = null;
  }
},
 operator$indexSet$2: function(key, value) {
  this._ensureCapacity$0();
  var index = this._probeForAdding$1(key);
  var t1 = this._keys;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  t1 = t1[index];
  if (t1 == null || t1 === $.CTC9)
    this._numberOfEntries = this._numberOfEntries + 1;
  t1 = this._keys;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = key;
  t1 = this._values;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = value;
},
 operator$index$1: function(key) {
  var index = this._probeForLookup$1(key);
  if ($.ltB(index, 0))
    return;
  var t1 = this._values;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 remove$1: function(key) {
  var index = this._probeForLookup$1(key);
  if (typeof index !== 'number')
    return this.remove$1$bailout(1, index);
  if (index >= 0) {
    this._numberOfEntries = this._numberOfEntries - 1;
    var t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    var value = t1[index];
    t1[index] = null;
    t1 = this._keys;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = $.CTC9;
    this._numberOfDeleted = this._numberOfDeleted + 1;
    return value;
  }
  return;
},
 remove$1$bailout: function(state0, index) {
  if ($.geB(index, 0)) {
    this._numberOfEntries = this._numberOfEntries - 1;
    var t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    var value = t1[index];
    t1[index] = null;
    t1 = this._keys;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = $.CTC9;
    this._numberOfDeleted = this._numberOfDeleted + 1;
    return value;
  }
  return;
},
 get$isEmpty: function() {
  return this._numberOfEntries === 0;
},
 get$length: function() {
  return this._numberOfEntries;
},
 forEach$1: function(f) {
  var length$ = this._keys.length;
  for (var i = 0; i < length$; ++i) {
    var t1 = this._keys;
    if (i >= t1.length)
      throw $.ioore(i);
    var key = t1[i];
    if (!(key == null) && !(key === $.CTC9)) {
      t1 = this._values;
      if (i >= t1.length)
        throw $.ioore(i);
      f.call$2(key, t1[i]);
    }
  }
},
 get$keys: function() {
  var t1 = {};
  var list = $.ListImplementation_List($.get$length(this));
  t1.i_10 = 0;
  this.forEach$1(new $.HashMapImplementation_keys__(t1, list));
  return list;
},
 get$values: function() {
  var t1 = {};
  var list = $.ListImplementation_List($.get$length(this));
  t1.i_1 = 0;
  this.forEach$1(new $.HashMapImplementation_values__(list, t1));
  return list;
},
 containsKey$1: function(key) {
  return !$.eqB(this._probeForLookup$1(key), -1);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 HashMapImplementation$0: function() {
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  this._loadLimit = $.HashMapImplementation__computeLoadLimit(8);
  this._keys = $.ListImplementation_List(8);
  this._values = $.ListImplementation_List(8);
},
 is$Map: function() { return true; }
};

$$.HashSetImplementation = {"": ["_backingMap"],
 "super": "Object",
 clear$0: function() {
  this._backingMap.clear$0();
},
 add$1: function(value) {
  this._backingMap.operator$indexSet$2(value, value);
},
 contains$1: function(value) {
  return this._backingMap.containsKey$1(value);
},
 remove$1: function(value) {
  if (this._backingMap.containsKey$1(value) !== true)
    return false;
  this._backingMap.remove$1(value);
  return true;
},
 addAll$1: function(collection) {
  $.forEach(collection, new $.HashSetImplementation_addAll__(this));
},
 forEach$1: function(f) {
  this._backingMap.forEach$1(new $.HashSetImplementation_forEach__(f));
},
 map$1: function(f) {
  var result = $.Set_Set();
  this._backingMap.forEach$1(new $.HashSetImplementation_map__(result, f));
  return result;
},
 filter$1: function(f) {
  var result = $.Set_Set();
  this._backingMap.forEach$1(new $.HashSetImplementation_filter__(result, f));
  return result;
},
 some$1: function(f) {
  return $.some(this._backingMap.get$keys(), f);
},
 get$isEmpty: function() {
  return $.get$isEmpty(this._backingMap);
},
 get$length: function() {
  return $.get$length(this._backingMap);
},
 iterator$0: function() {
  return $.HashSetIterator$(this);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 HashSetImplementation$0: function() {
  this._backingMap = $.HashMapImplementation$();
},
 is$Collection: function() { return true; }
};

$$.HashSetIterator = {"": ["_entries", "_nextValidIndex"],
 "super": "Object",
 get$hasNext: function() {
  var t1 = this._nextValidIndex;
  var t2 = this._entries;
  var t3 = t2.length;
  if (t1 >= t3)
    return false;
  if (t1 < 0)
    throw $.ioore(t1);
  if (t2[t1] === $.CTC9)
    this._advance$0();
  return this._nextValidIndex < t3;
},
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  var t1 = this._entries;
  var t2 = this._nextValidIndex;
  if (t2 < 0 || t2 >= t1.length)
    throw $.ioore(t2);
  var res = t1[t2];
  this._advance$0();
  return res;
},
 _advance$0: function() {
  var t1 = this._entries;
  var length$ = t1.length;
  var entry = null;
  do {
    var t2 = this._nextValidIndex + 1;
    this._nextValidIndex = t2;
    if (t2 >= length$)
      break;
    t2 = this._nextValidIndex;
    if (t2 < 0 || t2 >= length$)
      throw $.ioore(t2);
    entry = t1[t2];
  } while (entry == null || entry === $.CTC9);
},
 HashSetIterator$1: function(set_) {
  this._advance$0();
}
};

$$._DeletedKeySentinel = {"": [],
 "super": "Object"
};

$$.KeyValuePair = {"": ["key?", "value="],
 "super": "Object"
};

$$.LinkedHashMapImplementation = {"": ["_lib0_list", "_map"],
 "super": "Object",
 operator$indexSet$2: function(key, value) {
  if (this._map.containsKey$1(key) === true)
    this._map.operator$index$1(key).get$element().set$value(value);
  else {
    this._lib0_list.addLast$1($.KeyValuePair$(key, value));
    this._map.operator$indexSet$2(key, this._lib0_list.lastEntry$0());
  }
},
 operator$index$1: function(key) {
  var entry = this._map.operator$index$1(key);
  if (entry == null)
    return;
  return entry.get$element().get$value();
},
 remove$1: function(key) {
  var entry = this._map.remove$1(key);
  if (entry == null)
    return;
  entry.remove$0();
  return entry.get$element().get$value();
},
 get$keys: function() {
  var t1 = {};
  var list = $.ListImplementation_List($.get$length(this));
  t1.index_10 = 0;
  this._lib0_list.forEach$1(new $.LinkedHashMapImplementation_keys__(t1, list));
  return list;
},
 get$values: function() {
  var t1 = {};
  var list = $.ListImplementation_List($.get$length(this));
  t1.index_1 = 0;
  this._lib0_list.forEach$1(new $.LinkedHashMapImplementation_values__(t1, list));
  return list;
},
 forEach$1: function(f) {
  this._lib0_list.forEach$1(new $.LinkedHashMapImplementation_forEach__(f));
},
 containsKey$1: function(key) {
  return this._map.containsKey$1(key);
},
 get$length: function() {
  return $.get$length(this._map);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 clear$0: function() {
  this._map.clear$0();
  this._lib0_list.clear$0();
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 LinkedHashMapImplementation$0: function() {
  this._map = $.HashMapImplementation$();
  this._lib0_list = $.DoubleLinkedQueue$();
},
 is$Map: function() { return true; }
};

$$.DoubleLinkedQueueEntry = {"": ["_previous!", "_next=", "_lib0_element?"],
 "super": "Object",
 _link$2: function(p, n) {
  this._next = n;
  this._previous = p;
  p.set$_next(this);
  n.set$_previous(this);
},
 prepend$1: function(e) {
  $.DoubleLinkedQueueEntry$(e)._link$2(this._previous, this);
},
 remove$0: function() {
  var t1 = this._next;
  this._previous.set$_next(t1);
  t1 = this._previous;
  this._next.set$_previous(t1);
  this._next = null;
  this._previous = null;
  return this._lib0_element;
},
 _asNonSentinelEntry$0: function() {
  return this;
},
 previousEntry$0: function() {
  return this._previous._asNonSentinelEntry$0();
},
 nextEntry$0: function() {
  return this._next._asNonSentinelEntry$0();
},
 get$element: function() {
  return this._lib0_element;
},
 DoubleLinkedQueueEntry$1: function(e) {
  this._lib0_element = e;
}
};

$$._DoubleLinkedQueueEntrySentinel = {"": ["_previous", "_next", "_lib0_element"],
 "super": "DoubleLinkedQueueEntry",
 remove$0: function() {
  throw $.$$throw($.StateError$('Empty queue'));
},
 _asNonSentinelEntry$0: function() {
  return;
},
 get$element: function() {
  throw $.$$throw($.StateError$('Empty queue'));
},
 _DoubleLinkedQueueEntrySentinel$0: function() {
  this._link$2(this, this);
}
};

$$.DoubleLinkedQueue = {"": ["_sentinel"],
 "super": "Object",
 addLast$1: function(value) {
  this._sentinel.prepend$1(value);
},
 add$1: function(value) {
  this.addLast$1(value);
},
 addAll$1: function(collection) {
  for (var t1 = $.iterator(collection); t1.get$hasNext() === true;)
    this.add$1(t1.next$0());
},
 removeLast$0: function() {
  return this._sentinel._previous.remove$0();
},
 removeFirst$0: function() {
  return this._sentinel._next.remove$0();
},
 get$first: function() {
  return this._sentinel._next.get$element();
},
 get$last: function() {
  return this._sentinel._previous.get$element();
},
 lastEntry$0: function() {
  return this._sentinel.previousEntry$0();
},
 firstEntry$0: function() {
  return this._sentinel.nextEntry$0();
},
 get$length: function() {
  var t1 = {};
  t1.counter_1 = 0;
  this.forEach$1(new $.DoubleLinkedQueue_length__(t1));
  return t1.counter_1;
},
 get$isEmpty: function() {
  var t1 = this._sentinel;
  return t1._next === t1;
},
 clear$0: function() {
  var t1 = this._sentinel;
  t1._next = t1;
  t1 = this._sentinel;
  t1._previous = t1;
},
 forEach$1: function(f) {
  var entry = this._sentinel._next;
  for (; !(entry === this._sentinel);) {
    var nextEntry = entry.get$_next();
    f.call$1(entry.get$_lib0_element());
    entry = nextEntry;
  }
},
 some$1: function(f) {
  var entry = this._sentinel._next;
  for (; !(entry === this._sentinel);) {
    var nextEntry = entry.get$_next();
    if (f.call$1(entry.get$_lib0_element()) === true)
      return true;
    entry = nextEntry;
  }
  return false;
},
 map$1: function(f) {
  var other = $.Queue_Queue();
  var entry = this._sentinel._next;
  for (; !(entry === this._sentinel);) {
    var nextEntry = entry.get$_next();
    $.addLast(other, f.call$1(entry.get$_lib0_element()));
    entry = nextEntry;
  }
  return other;
},
 filter$1: function(f) {
  var other = $.Queue_Queue();
  var entry = this._sentinel._next;
  for (; !(entry === this._sentinel);) {
    var nextEntry = entry.get$_next();
    if (f.call$1(entry.get$_lib0_element()) === true)
      $.addLast(other, entry.get$_lib0_element());
    entry = nextEntry;
  }
  return other;
},
 iterator$0: function() {
  return $._DoubleLinkedQueueIterator$(this._sentinel);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 DoubleLinkedQueue$0: function() {
  this._sentinel = $._DoubleLinkedQueueEntrySentinel$();
},
 is$Collection: function() { return true; }
};

$$._DoubleLinkedQueueIterator = {"": ["_sentinel", "_currentEntry"],
 "super": "Object",
 get$hasNext: function() {
  return !(this._currentEntry.get$_next() === this._sentinel);
},
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  this._currentEntry = this._currentEntry.get$_next();
  return this._currentEntry.get$element();
},
 _DoubleLinkedQueueIterator$1: function(_sentinel) {
  this._currentEntry = this._sentinel;
}
};

$$.JSSyntaxRegExp = {"": ["_lib0_pattern", "_multiLine", "_ignoreCase"],
 "super": "Object",
 firstMatch$1: function(str) {
  var m = $.regExpExec(this, $.checkString(str));
  if (m == null)
    return;
  var matchStart = $.regExpMatchStart(m);
  var t1 = $.get$length($.index(m, 0));
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  var matchEnd = matchStart + t1;
  return $._MatchImplementation$(this.get$pattern(), str, matchStart, matchEnd, m);
},
 allMatches$1: function(str) {
  $.checkString(str);
  return $._AllMatchesIterable$(this, str);
},
 hasMatch$1: function(str) {
  return $.regExpTest(this, $.checkString(str));
},
 get$pattern: function() {
  return this._lib0_pattern;
},
 get$multiLine: function() {
  return this._multiLine;
},
 get$ignoreCase: function() {
  return this._ignoreCase;
},
 is$JSSyntaxRegExp: true,
 is$RegExp: true
};

$$._MatchImplementation = {"": ["pattern?", "str", "start?", "end?", "_groups"],
 "super": "Object",
 start$5: function(arg0, arg1, arg2, arg3, arg4) { return this.start.call$5(arg0, arg1, arg2, arg3, arg4); },
 group$1: function(index) {
  return $.index(this._groups, index);
},
 operator$index$1: function(index) {
  return this.group$1(index);
}
};

$$._AllMatchesIterable = {"": ["_re", "_str"],
 "super": "Object",
 iterator$0: function() {
  return $._AllMatchesIterator$(this._re, this._str);
}
};

$$._AllMatchesIterator = {"": ["_re", "_str", "_next=", "_done"],
 "super": "Object",
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  var next = this._next;
  this._next = null;
  return next;
},
 get$hasNext: function() {
  if (this._done)
    return false;
  else if (!(this._next == null))
    return true;
  this._next = this._re.firstMatch$1(this._str);
  if (this._next == null) {
    this._done = true;
    return false;
  } else
    return true;
}
};

$$._DateImpl = {"": ["millisecondsSinceEpoch?", "isUtc"],
 "super": "Object",
 operator$eq$1: function(other) {
  if (!(typeof other === 'object' && other !== null && !!other.is$Date))
    return false;
  return $.eq(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$lt$1: function(other) {
  return $.lt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$le$1: function(other) {
  return $.le(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$gt$1: function(other) {
  return $.gt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$ge$1: function(other) {
  return $.ge(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 compareTo$1: function(other) {
  return $.compareTo(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 get$hashCode: function() {
  return this.millisecondsSinceEpoch;
},
 toString$0: function() {
  var t1 = new $._DateImpl_toString_fourDigits();
  var t2 = new $._DateImpl_toString_threeDigits();
  var t3 = new $._DateImpl_toString_twoDigits();
  var y = t1.call$1(this.get$year());
  var m = t3.call$1(this.get$month());
  var d = t3.call$1(this.get$day());
  var h = t3.call$1(this.get$hour());
  var min = t3.call$1(this.get$minute());
  var sec = t3.call$1(this.get$second());
  var ms = t2.call$1(this.get$millisecond());
  if (this.isUtc === true)
    return $.S(y) + '-' + $.S(m) + '-' + $.S(d) + ' ' + $.S(h) + ':' + $.S(min) + ':' + $.S(sec) + '.' + $.S(ms) + 'Z';
  else
    return $.S(y) + '-' + $.S(m) + '-' + $.S(d) + ' ' + $.S(h) + ':' + $.S(min) + ':' + $.S(sec) + '.' + $.S(ms);
},
 add$1: function(duration) {
  return $.Date_Date$fromMillisecondsSinceEpoch($.add(this.millisecondsSinceEpoch, duration.get$inMilliseconds()), this.isUtc);
},
 get$year: function() {
  return $.Primitives_getYear(this);
},
 get$month: function() {
  return $.Primitives_getMonth(this);
},
 get$day: function() {
  return $.Primitives_getDay(this);
},
 get$hour: function() {
  return $.Primitives_getHours(this);
},
 get$minute: function() {
  return $.Primitives_getMinutes(this);
},
 get$second: function() {
  return $.Primitives_getSeconds(this);
},
 get$millisecond: function() {
  return $.Primitives_getMilliseconds(this);
},
 _DateImpl$fromMillisecondsSinceEpoch$2: function(millisecondsSinceEpoch, isUtc) {
  var t1 = this.millisecondsSinceEpoch;
  if ($.gtB($.abs(t1), 8640000000000000))
    throw $.$$throw($.ArgumentError$(t1));
  t1 = this.isUtc;
  if (t1 == null)
    throw $.$$throw($.ArgumentError$(t1));
},
 _DateImpl$now$0: function() {
  $.Primitives_lazyAsJsDate(this);
},
 is$Date: true
};

$$.ArgumentError = {"": ["message?"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.message;
  if (!(t1 == null))
    return 'Illegal argument(s): ' + $.S(t1);
  return 'Illegal argument(s)';
}
};

$$.NoSuchMethodError = {"": ["_receiver", "_functionName", "_arguments", "_existingArgumentNames"],
 "super": "Object",
 toString$0: function() {
  var sb = $.StringBuffer_StringBuffer('');
  var t1 = this._arguments;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(1, t1, sb);
  var i = 0;
  for (; i < t1.length; ++i) {
    if (i > 0)
      $.add$1(sb, ', ');
    if (i >= t1.length)
      throw $.ioore(i);
    $.add$1(sb, $.NoSuchMethodError_safeToString(t1[i]));
  }
  t1 = this._existingArgumentNames;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(2, sb, t1);
  var actualParameters = $.toString(sb);
  sb = $.StringBuffer_StringBuffer('');
  for (i = 0; i < t1.length; ++i) {
    if (i > 0)
      $.add$1(sb, ', ');
    if (i >= t1.length)
      throw $.ioore(i);
    $.add$1(sb, t1[i]);
  }
  var formalParameters = $.toString(sb);
  t1 = this._functionName;
  return 'NoSuchMethodError: incorrect number of arguments passed to method named \'' + $.S(t1) + '\'\n' + 'Receiver: ' + $.S($.NoSuchMethodError_safeToString(this._receiver)) + '\n' + 'Tried calling: ' + $.S(t1) + '(' + $.S(actualParameters) + ')\n' + 'Found: ' + $.S(t1) + '(' + $.S(formalParameters) + ')';
},
 toString$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      sb = env1;
      break;
    case 2:
      sb = env0;
      t1 = env1;
      break;
  }
  switch (state0) {
    case 0:
      var sb = $.StringBuffer_StringBuffer('');
      var t1 = this._arguments;
    case 1:
      state0 = 0;
      var i = 0;
      for (; $.ltB(i, $.get$length(t1)); ++i) {
        if (i > 0)
          $.add$1(sb, ', ');
        $.add$1(sb, $.NoSuchMethodError_safeToString($.index(t1, i)));
      }
      t1 = this._existingArgumentNames;
    case 2:
      state0 = 0;
      if (t1 == null)
        return 'NoSuchMethodError : method not found: \'' + $.S(this._functionName) + '\'\n' + 'Receiver: ' + $.S($.NoSuchMethodError_safeToString(this._receiver)) + '\n' + 'Arguments: [' + $.S(sb) + ']';
      else {
        var actualParameters = $.toString(sb);
        sb = $.StringBuffer_StringBuffer('');
        for (i = 0; $.ltB(i, $.get$length(t1)); ++i) {
          if (i > 0)
            $.add$1(sb, ', ');
          $.add$1(sb, $.index(t1, i));
        }
        var formalParameters = $.toString(sb);
        t1 = this._functionName;
        return 'NoSuchMethodError: incorrect number of arguments passed to method named \'' + $.S(t1) + '\'\n' + 'Receiver: ' + $.S($.NoSuchMethodError_safeToString(this._receiver)) + '\n' + 'Tried calling: ' + $.S(t1) + '(' + $.S(actualParameters) + ')\n' + 'Found: ' + $.S(t1) + '(' + $.S(formalParameters) + ')';
      }
  }
}
};

$$.UnsupportedError = {"": ["message?"],
 "super": "Object",
 toString$0: function() {
  return 'Unsupported operation: message';
}
};

$$.StateError = {"": ["message?"],
 "super": "Object",
 toString$0: function() {
  return 'Bad state: message';
}
};

$$.StackOverflowError = {"": [],
 "super": "Object",
 toString$0: function() {
  return 'Stack Overflow';
}
};

$$._ExceptionImplementation = {"": ["message?"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.message;
  return t1 == null ? 'Exception' : 'Exception: ' + $.S(t1);
},
 is$Exception: true
};

$$.IndexOutOfRangeException = {"": ["_value?"],
 "super": "Object",
 toString$0: function() {
  return 'IndexOutOfRangeException: ' + $.S(this._value);
},
 is$Exception: true
};

$$.FormatException = {"": ["message?"],
 "super": "Object",
 toString$0: function() {
  return 'FormatException: ' + $.S(this.message);
},
 is$Exception: true
};

$$.NullPointerException = {"": ["functionName", "arguments"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.functionName;
  if (t1 == null)
    return this.get$exceptionName();
  else
    return $.S(this.get$exceptionName()) + ' : method: \'' + $.S(t1) + '\'\n' + 'Receiver: null\n' + 'Arguments: ' + $.S(this.arguments);
},
 get$exceptionName: function() {
  return 'NullPointerException';
},
 is$Exception: true
};

$$.NotImplementedException = {"": ["_message"],
 "super": "Object",
 toString$0: function() {
  var t1 = this._message;
  return !(t1 == null) ? 'NotImplementedException: ' + $.S(t1) : 'NotImplementedException';
},
 is$Exception: true
};

$$.IllegalJSRegExpException = {"": ["_pattern", "_errmsg"],
 "super": "Object",
 toString$0: function() {
  return 'IllegalJSRegExpException: \'' + $.S(this._pattern) + '\' \'' + this._errmsg + '\'';
},
 is$Exception: true
};

$$.FutureNotCompleteException = {"": [],
 "super": "Object",
 toString$0: function() {
  return 'Exception: future has not been completed';
},
 is$Exception: true
};

$$.FutureAlreadyCompleteException = {"": [],
 "super": "Object",
 toString$0: function() {
  return 'Exception: future already completed';
},
 is$Exception: true
};

$$.FutureUnhandledException = {"": ["source", "stackTrace?"],
 "super": "Object",
 toString$0: function() {
  return 'FutureUnhandledException: exception while executing Future\n  ' + $.S($.replaceAll($.toString(this.source), '\n', '\n  ')) + '\n' + 'original stack trace:\n  ' + $.S($.replaceAll($.toString(this.stackTrace), '\n', '\n  '));
},
 is$Exception: true
};

$$._FutureImpl = {"": ["_isComplete", "_value?", "_exception", "_stackTrace", "_exceptionHandled", "_successListeners", "_exceptionHandlers", "_completionListeners"],
 "super": "Object",
 get$value: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  var t1 = this._exception;
  if (!(t1 == null))
    throw $.$$throw($.FutureUnhandledException$(t1, this.get$stackTrace()));
  return this._value;
},
 get$exception: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  return this._exception;
},
 get$stackTrace: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  return this._stackTrace;
},
 get$isComplete: function() {
  return this._isComplete;
},
 get$hasValue: function() {
  return this.get$isComplete() === true && this._exception == null;
},
 then$1: function(onSuccess) {
  if (this.get$hasValue() === true)
    onSuccess.call$1(this.get$value());
  else if (this.get$isComplete() !== true)
    this._successListeners.push(onSuccess);
  else if (this._exceptionHandled !== true)
    throw $.$$throw($.FutureUnhandledException$(this._exception, this.get$stackTrace()));
},
 handleException$1: function(onException) {
  if (this._exceptionHandled === true)
    return;
  if (this._isComplete) {
    var t1 = this._exception;
    if (!(t1 == null))
      this._exceptionHandled = onException.call$1(t1);
  } else
    this._exceptionHandlers.push(onException);
},
 _complete$0: function() {
  this._isComplete = true;
  try {
    if (!(this._exception == null))
      for (var t1 = $.iterator(this._exceptionHandlers); t1.get$hasNext() === true;) {
        var handler = t1.next$0();
        if ($.eqB(handler.call$1(this._exception), true)) {
          this._exceptionHandled = true;
          break;
        }
      }
    if (this.get$hasValue() === true)
      for (t1 = $.iterator(this._successListeners); t1.get$hasNext() === true;) {
        var listener = t1.next$0();
        listener.call$1(this.get$value());
      }
    else if (this._exceptionHandled !== true && this._successListeners.length > 0)
      throw $.$$throw($.FutureUnhandledException$(this._exception, this.get$stackTrace()));
  } finally {
    for (t1 = $.iterator(this._completionListeners); t1.get$hasNext() === true;) {
      var listener0 = t1.next$0();
      try {
        listener0.call$1(this);
      } catch (exception) {
        $.unwrapException(exception);
      }

    }
  }
},
 _setValue$1: function(value) {
  if (this._isComplete)
    throw $.$$throw($.FutureAlreadyCompleteException$());
  this._value = value;
  this._complete$0();
},
 _setException$2: function(exception, stackTrace) {
  if (exception == null)
    throw $.$$throw($.ArgumentError$(null));
  if (this._isComplete)
    throw $.$$throw($.FutureAlreadyCompleteException$());
  this._exception = exception;
  this._stackTrace = stackTrace;
  this._complete$0();
}
};

$$._CompleterImpl = {"": ["_futureImpl"],
 "super": "Object",
 get$future: function() {
  return this._futureImpl;
},
 complete$1: function(value) {
  this._futureImpl._setValue$1(value);
},
 completeException$2: function(exception, stackTrace) {
  this._futureImpl._setException$2(exception, stackTrace);
},
 completeException$1: function(exception) {
  return this.completeException$2(exception,null)
}
};

$$.Object = {"": [],
 "super": "",
 operator$eq$1: function(other) {
  return this === other;
},
 get$hashCode: function() {
  return $.Primitives_objectHashCode(this);
},
 toString$0: function() {
  return $.Primitives_objectToString(this);
}
};

$$._StringBufferImpl = {"": ["_buffer", "_length"],
 "super": "Object",
 get$length: function() {
  return this._length;
},
 get$isEmpty: function() {
  return this._length === 0;
},
 add$1: function(obj) {
  var str = $.toString(obj);
  if (str == null || $.get$isEmpty(str) === true)
    return this;
  $.add$1(this._buffer, str);
  this._length = $.add(this._length, $.get$length(str));
  return this;
},
 addAll$1: function(objects) {
  for (var t1 = $.iterator(objects); t1.get$hasNext() === true;)
    this.add$1(t1.next$0());
  return this;
},
 clear$0: function() {
  this._buffer = $.ListImplementation_List(null);
  this._length = 0;
  return this;
},
 toString$0: function() {
  if ($.get$length(this._buffer) === 0)
    return '';
  if ($.get$length(this._buffer) === 1)
    return $.index(this._buffer, 0);
  var result = $.StringImplementation_concatAll(this._buffer);
  $.clear(this._buffer);
  $.add$1(this._buffer, result);
  return result;
},
 _StringBufferImpl$1: function(content$) {
  this.clear$0();
  this.add$1(content$);
}
};

$$.ListIterator = {"": ["i", "list"],
 "super": "Object",
 get$hasNext: function() {
  return this.i < this.list.length;
},
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  var value = this.list[this.i];
  this.i = this.i + 1;
  return value;
}
};

$$.StackTrace = {"": ["stack"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.stack;
  return !(t1 == null) ? t1 : '';
}
};

$$.Closure = {"": [],
 "super": "Object",
 toString$0: function() {
  return 'Closure';
}
};

$$.CastErrorImplementation = {"": ["actualType", "expectedType"],
 "super": "Object",
 toString$0: function() {
  return 'CastError: Casting value of type ' + $.S(this.actualType) + ' to' + ' incompatible type ' + this.expectedType;
}
};

$$.ConstantMap = {"": ["length?", "_jsObject", "_lib1_keys"],
 "super": "Object",
 containsKey$1: function(key) {
  if ($.eqB(key, '__proto__'))
    return false;
  return $.jsHasOwnProperty(this._jsObject, key);
},
 operator$index$1: function(key) {
  if (this.containsKey$1(key) !== true)
    return;
  return this._jsObject[key];
},
 forEach$1: function(f) {
  $.forEach(this._lib1_keys, new $.ConstantMap_forEach_anon(this, f));
},
 get$keys: function() {
  return this._lib1_keys;
},
 get$values: function() {
  var result = [];
  $.forEach(this._lib1_keys, new $.ConstantMap_values_anon(this, result));
  return result;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _throwUnmodifiable$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot modify unmodifiable Map'));
},
 operator$indexSet$2: function(key, val) {
  return this._throwUnmodifiable$0();
},
 remove$1: function(key) {
  return this._throwUnmodifiable$0();
},
 clear$0: function() {
  return this._throwUnmodifiable$0();
},
 is$Map: function() { return true; }
};

$$.MetaInfo = {"": ["_tag?", "_tags", "_set?"],
 "super": "Object"
};

$$.StringMatch = {"": ["start?", "str", "pattern?"],
 "super": "Object",
 get$end: function() {
  return $.add(this.start, this.pattern.length);
},
 operator$index$1: function(g) {
  return this.group$1(g);
},
 group$1: function(group_) {
  if (!$.eqB(group_, 0))
    throw $.$$throw($.IndexOutOfRangeException$(group_));
  return this.pattern;
},
 start$5: function(arg0, arg1, arg2, arg3, arg4) { return this.start.call$5(arg0, arg1, arg2, arg3, arg4); }
};

$$._AbstractWorkerEventsImpl = {"": ["_ptr"],
 "super": "_EventsImpl"
};

$$._AudioContextEventsImpl = {"": ["_ptr"],
 "super": "_EventsImpl",
 get$complete: function() {
  return this.operator$index$1('complete');
},
 complete$1: function(arg0) { return this.get$complete().call$1(arg0); }
};

$$._BatteryManagerEventsImpl = {"": ["_ptr"],
 "super": "_EventsImpl"
};

$$._BodyElementEventsImpl = {"": ["_ptr"],
 "super": "_ElementEventsImpl",
 get$blur: function() {
  return this.operator$index$1('blur');
},
 get$focus: function() {
  return this.operator$index$1('focus');
},
 focus$0: function() { return this.get$focus().call$0(); },
 get$message: function() {
  return this.operator$index$1('message');
},
 get$resize: function() {
  return this.operator$index$1('resize');
}
};

$$._DOMApplicationCacheEventsImpl = {"": ["_ptr"],
 "super": "_EventsImpl",
 get$updateReady: function() {
  return this.operator$index$1('updateready');
}
};

$$._DedicatedWorkerContextEventsImpl = {"": ["_ptr"],
 "super": "_WorkerContextEventsImpl",
 get$message: function() {
  return this.operator$index$1('message');
}
};

$$._FilteredElementList = {"": ["_lib_node", "_childNodes"],
 "super": "Object",
 get$_filtered: function() {
  return $.ListImplementation_List$from($.filter(this._childNodes, new $._FilteredElementList__filtered_anon()));
},
 forEach$1: function(f) {
  $.forEach(this.get$_filtered(), f);
},
 operator$indexSet$2: function(index, value) {
  this.operator$index$1(index).replaceWith$1(value);
},
 set$length: function(newLength) {
  var len = $.get$length(this);
  if ($.geB(newLength, len))
    return;
  else if ($.ltB(newLength, 0))
    throw $.$$throw($.ArgumentError$('Invalid list length'));
  this.removeRange$2($.sub(newLength, 1), $.sub(len, newLength));
},
 add$1: function(value) {
  $.add$1(this._childNodes, value);
},
 get$add: function() { return new $.BoundClosure1(this, 'add$1'); },
 addAll$1: function(collection) {
  $.forEach(collection, this.get$add());
},
 addLast$1: function(value) {
  this.add$1(value);
},
 contains$1: function(element) {
  return typeof element === 'object' && element !== null && element.is$Element() && $.contains$1(this._childNodes, element) === true;
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('TODO(jacobr): should we impl?'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC15);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,0)
},
 removeRange$2: function(start, rangeLength) {
  $.forEach($.getRange(this.get$_filtered(), start, rangeLength), new $._FilteredElementList_removeRange_anon());
},
 clear$0: function() {
  $.clear(this._childNodes);
},
 removeLast$0: function() {
  var result = $.get$last(this);
  if (!(result == null))
    result.remove$0();
  return result;
},
 map$1: function(f) {
  return $.map(this.get$_filtered(), f);
},
 filter$1: function(f) {
  return $.filter(this.get$_filtered(), f);
},
 some$1: function(f) {
  return $.some(this.get$_filtered(), f);
},
 get$isEmpty: function() {
  return $.get$isEmpty(this.get$_filtered());
},
 get$length: function() {
  return $.get$length(this.get$_filtered());
},
 operator$index$1: function(index) {
  return $.index(this.get$_filtered(), index);
},
 iterator$0: function() {
  return $.iterator(this.get$_filtered());
},
 getRange$2: function(start, rangeLength) {
  return $.getRange(this.get$_filtered(), start, rangeLength);
},
 indexOf$2: function(element, start) {
  return $.indexOf$2(this.get$_filtered(), element, start);
},
 get$last: function() {
  return $.get$last(this.get$_filtered());
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.EmptyElementRect = {"": ["client?", "offset?", "scroll?", "bounding", "clientRects"],
 "super": "Object"
};

$$._FrozenCSSClassSet = {"": ["_element"],
 "super": "_CssClassSet",
 _write$1: function(s) {
  throw $.$$throw($.UnsupportedError$('frozen class set cannot be modified'));
},
 _read$0: function() {
  return $.Set_Set();
}
};

$$._DocumentEventsImpl = {"": ["_ptr"],
 "super": "_ElementEventsImpl",
 get$abort: function() {
  return this.operator$index$1('abort');
},
 abort$0: function() { return this.get$abort().call$0(); },
 get$blur: function() {
  return this.operator$index$1('blur');
},
 get$click: function() {
  return this.operator$index$1('click');
},
 get$focus: function() {
  return this.operator$index$1('focus');
},
 focus$0: function() { return this.get$focus().call$0(); },
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$mouseMove: function() {
  return this.operator$index$1('mousemove');
},
 get$mouseOut: function() {
  return this.operator$index$1('mouseout');
},
 get$mouseOver: function() {
  return this.operator$index$1('mouseover');
},
 get$mouseUp: function() {
  return this.operator$index$1('mouseup');
},
 get$mouseWheel: function() {
  return this.operator$index$1('mousewheel');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); },
 get$scroll: function() {
  return this.operator$index$1('scroll');
},
 get$submit: function() {
  return this.operator$index$1('submit');
},
 get$touchCancel: function() {
  return this.operator$index$1('touchcancel');
},
 get$touchEnd: function() {
  return this.operator$index$1('touchend');
},
 get$touchMove: function() {
  return this.operator$index$1('touchmove');
},
 get$touchStart: function() {
  return this.operator$index$1('touchstart');
}
};

$$._ChildrenElementList = {"": ["_element?", "_childElements"],
 "super": "Object",
 _toList$0: function() {
  var t1 = this._childElements;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._toList$0$bailout(1, t1);
  var t3 = t1.length;
  var output = $.ListImplementation_List(t3);
  for (var len = t1.length, i = 0; i < len; ++i) {
    var t2 = t1[i];
    if (i >= t3)
      throw $.ioore(i);
    output[i] = t2;
  }
  return output;
},
 _toList$0$bailout: function(state0, t1) {
  var output = $.ListImplementation_List($.get$length(t1));
  for (var len = $.get$length(t1), i = 0; $.ltB(i, len); ++i) {
    var t2 = $.index(t1, i);
    if (i >= output.length)
      throw $.ioore(i);
    output[i] = t2;
  }
  return output;
},
 contains$1: function(element) {
  return $.contains$1(this._childElements, element);
},
 forEach$1: function(f) {
  for (var t1 = $.iterator(this._childElements); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
},
 filter$1: function(f) {
  var output = [];
  this.forEach$1(new $._ChildrenElementList_filter_anon(output, f));
  return $._FrozenElementList$_wrap(output);
},
 some$1: function(f) {
  for (var t1 = $.iterator(this); t1.get$hasNext() === true;)
    if (f.call$1(t1.next$0()) === true)
      return true;
  return false;
},
 map$1: function(f) {
  var out = [];
  for (var t1 = $.iterator(this); t1.get$hasNext() === true;)
    out.push(f.call$1(t1.next$0()));
  return out;
},
 get$isEmpty: function() {
  return this._element.get$$$dom_firstElementChild() == null;
},
 get$length: function() {
  return $.get$length(this._childElements);
},
 operator$index$1: function(index) {
  return $.index(this._childElements, index);
},
 operator$indexSet$2: function(index, value) {
  this._element.$dom_replaceChild$2(value, $.index(this._childElements, index));
},
 set$length: function(newLength) {
  throw $.$$throw($.UnsupportedError$(''));
},
 add$1: function(value) {
  this._element.$dom_appendChild$1(value);
  return value;
},
 addLast$1: function(value) {
  return this.add$1(value);
},
 iterator$0: function() {
  return $.iterator(this._toList$0());
},
 addAll$1: function(collection) {
  for (var t1 = $.iterator(collection), t2 = this._element; t1.get$hasNext() === true;)
    t2.$dom_appendChild$1(t1.next$0());
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('TODO(jacobr): should we impl?'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.CTC15);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,0)
},
 getRange$2: function(start, rangeLength) {
  return $._FrozenElementList$_wrap($._Lists_getRange(this, start, rangeLength, []));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 clear$0: function() {
  this._element.set$text('');
},
 removeLast$0: function() {
  var result = $.get$last(this);
  if (!(result == null))
    this._element.$dom_removeChild$1(result);
  return result;
},
 get$last: function() {
  return this._element.get$$$dom_lastElementChild();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._FrozenElementList = {"": ["_nodeList"],
 "super": "Object",
 get$first: function() {
  return $.index(this._nodeList, 0);
},
 contains$1: function(element) {
  for (var t1 = $.iterator(this); t1.get$hasNext() === true;)
    if ($.eqB(t1.next$0(), element))
      return true;
  return false;
},
 forEach$1: function(f) {
  for (var t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
},
 map$1: function(f) {
  var out = [];
  for (var t1 = $.iterator(this); t1.get$hasNext() === true;)
    out.push(f.call$1(t1.next$0()));
  return out;
},
 filter$1: function(f) {
  var out = [];
  for (var t1 = $.iterator(this); t1.get$hasNext() === true;) {
    var t2 = t1.next$0();
    if (f.call$1(t2) === true)
      out.push(t2);
  }
  return out;
},
 some$1: function(f) {
  for (var t1 = $.iterator(this); t1.get$hasNext() === true;)
    if (f.call$1(t1.next$0()) === true)
      return true;
  return false;
},
 get$isEmpty: function() {
  return $.get$isEmpty(this._nodeList);
},
 get$length: function() {
  return $.get$length(this._nodeList);
},
 operator$index$1: function(index) {
  return $.index(this._nodeList, index);
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$(''));
},
 set$length: function(newLength) {
  $.set$length(this._nodeList, newLength);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$(''));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$(''));
},
 iterator$0: function() {
  return $._FrozenElementListIterator$(this);
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$(''));
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$(''));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$(''));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,0)
},
 getRange$2: function(start, rangeLength) {
  return $._FrozenElementList$_wrap($.getRange(this._nodeList, start, rangeLength));
},
 indexOf$2: function(element, start) {
  return $.indexOf$2(this._nodeList, element, start);
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$(''));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$(''));
},
 get$last: function() {
  return $.get$last(this._nodeList);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._FrozenElementListIterator = {"": ["_list", "_index"],
 "super": "Object",
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  var t1 = this._list;
  var t2 = this._index;
  this._index = t2 + 1;
  return t1.operator$index$1(t2);
},
 get$hasNext: function() {
  return $.lt(this._index, $.get$length(this._list));
}
};

$$._ElementAttributeMap = {"": ["_element?"],
 "super": "Object",
 containsKey$1: function(key) {
  return this._element.$dom_hasAttribute$1(key);
},
 operator$index$1: function(key) {
  return this._element.$dom_getAttribute$1(key);
},
 operator$indexSet$2: function(key, value) {
  this._element.$dom_setAttribute$2(key, $.S(value));
},
 remove$1: function(key) {
  var t1 = this._element;
  var value = t1.$dom_getAttribute$1(key);
  t1.$dom_removeAttribute$1(key);
  return value;
},
 clear$0: function() {
  var attributes = this._element.get$$$dom_attributes();
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.clear$0$bailout(1, attributes);
  for (var i = attributes.length - 1; i >= 0; --i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    this.remove$1(attributes[i].get$name());
  }
},
 clear$0$bailout: function(state0, attributes) {
  for (var i = $.sub($.get$length(attributes), 1); $.geB(i, 0); i = $.sub(i, 1))
    this.remove$1($.index(attributes, i).get$name());
},
 forEach$1: function(f) {
  var attributes = this._element.get$$$dom_attributes();
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.forEach$1$bailout(1, f, attributes);
  for (var len = attributes.length, i = 0; i < len; ++i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    var item = attributes[i];
    f.call$2(item.get$name(), item.get$value());
  }
},
 forEach$1$bailout: function(state0, f, attributes) {
  for (var len = $.get$length(attributes), i = 0; $.ltB(i, len); ++i) {
    var item = $.index(attributes, i);
    f.call$2(item.get$name(), item.get$value());
  }
},
 get$keys: function() {
  var attributes = this._element.get$$$dom_attributes();
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.get$keys$bailout(1, attributes);
  var t2 = attributes.length;
  var keys = $.ListImplementation_List(t2);
  for (var len = attributes.length, i = 0; i < len; ++i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    var t1 = attributes[i].get$name();
    if (i >= t2)
      throw $.ioore(i);
    keys[i] = t1;
  }
  return keys;
},
 get$keys$bailout: function(state0, attributes) {
  var keys = $.ListImplementation_List($.get$length(attributes));
  for (var len = $.get$length(attributes), i = 0; $.ltB(i, len); ++i) {
    var t1 = $.index(attributes, i).get$name();
    if (i >= keys.length)
      throw $.ioore(i);
    keys[i] = t1;
  }
  return keys;
},
 get$values: function() {
  var attributes = this._element.get$$$dom_attributes();
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.get$values$bailout(1, attributes);
  var t2 = attributes.length;
  var values = $.ListImplementation_List(t2);
  for (var len = attributes.length, i = 0; i < len; ++i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    var t1 = attributes[i].get$value();
    if (i >= t2)
      throw $.ioore(i);
    values[i] = t1;
  }
  return values;
},
 get$values$bailout: function(state0, attributes) {
  var values = $.ListImplementation_List($.get$length(attributes));
  for (var len = $.get$length(attributes), i = 0; $.ltB(i, len); ++i) {
    var t1 = $.index(attributes, i).get$value();
    if (i >= values.length)
      throw $.ioore(i);
    values[i] = t1;
  }
  return values;
},
 get$length: function() {
  return $.get$length(this._element.get$$$dom_attributes());
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 is$Map: function() { return true; }
};

$$._CssClassSet = {"": ["_element?"],
 "super": "Object",
 toString$0: function() {
  return this._formatSet$1(this._read$0());
},
 iterator$0: function() {
  return $.iterator(this._read$0());
},
 forEach$1: function(f) {
  $.forEach(this._read$0(), f);
},
 map$1: function(f) {
  return $.map(this._read$0(), f);
},
 filter$1: function(f) {
  return $.filter(this._read$0(), f);
},
 some$1: function(f) {
  return $.some(this._read$0(), f);
},
 get$isEmpty: function() {
  return $.get$isEmpty(this._read$0());
},
 get$length: function() {
  return $.get$length(this._read$0());
},
 contains$1: function(value) {
  return $.contains$1(this._read$0(), value);
},
 add$1: function(value) {
  this._modify$1(new $._CssClassSet_add_anon(value));
},
 remove$1: function(value) {
  var s = this._read$0();
  var result = s.remove$1(value);
  this._write$1(s);
  return result;
},
 addAll$1: function(collection) {
  this._modify$1(new $._CssClassSet_addAll_anon(collection));
},
 clear$0: function() {
  this._modify$1(new $._CssClassSet_clear_anon());
},
 _modify$1: function(f) {
  var s = this._read$0();
  f.call$1(s);
  this._write$1(s);
},
 _read$0: function() {
  var s = $.Set_Set();
  for (var t1 = $.iterator($.split(this._classname$0(), ' ')); t1.get$hasNext() === true;) {
    var trimmed = $.trim(t1.next$0());
    if ($.get$isEmpty(trimmed) !== true)
      $.add$1(s, trimmed);
  }
  return s;
},
 _classname$0: function() {
  return this._element.get$$$dom_className();
},
 _write$1: function(s) {
  var t1 = this._formatSet$1(s);
  this._element.set$$$dom_className(t1);
},
 _formatSet$1: function(s) {
  return $.Strings_join($.ListImplementation_List$from(s), ' ');
},
 is$Collection: function() { return true; }
};

$$._SimpleClientRect = {"": ["left?", "top?", "width?", "height?"],
 "super": "Object",
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(this.left, other.get$left()) && $.eqB(this.top, other.get$top()) && $.eqB(this.width, other.get$width()) && $.eqB(this.height, other.get$height());
},
 toString$0: function() {
  return '(' + $.S(this.left) + ', ' + $.S(this.top) + ', ' + $.S(this.width) + ', ' + $.S(this.height) + ')';
}
};

$$._ElementRectImpl = {"": ["client?", "offset?", "scroll?", "_boundingClientRect", "_clientRects"],
 "super": "Object"
};

$$._ElementEventsImpl = {"": ["_ptr"],
 "super": "_EventsImpl",
 get$abort: function() {
  return this.operator$index$1('abort');
},
 abort$0: function() { return this.get$abort().call$0(); },
 get$blur: function() {
  return this.operator$index$1('blur');
},
 get$click: function() {
  return this.operator$index$1('click');
},
 get$focus: function() {
  return this.operator$index$1('focus');
},
 focus$0: function() { return this.get$focus().call$0(); },
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$mouseMove: function() {
  return this.operator$index$1('mousemove');
},
 get$mouseOut: function() {
  return this.operator$index$1('mouseout');
},
 get$mouseOver: function() {
  return this.operator$index$1('mouseover');
},
 get$mouseUp: function() {
  return this.operator$index$1('mouseup');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); },
 get$scroll: function() {
  return this.operator$index$1('scroll');
},
 get$submit: function() {
  return this.operator$index$1('submit');
},
 get$touchCancel: function() {
  return this.operator$index$1('touchcancel');
},
 get$touchEnd: function() {
  return this.operator$index$1('touchend');
},
 get$touchLeave: function() {
  return this.operator$index$1('touchleave');
},
 get$touchMove: function() {
  return this.operator$index$1('touchmove');
},
 get$touchStart: function() {
  return this.operator$index$1('touchstart');
},
 get$mouseWheel: function() {
  var t1 = this._ptr;
  if (t1.onwheel !== undefined)
    return this.operator$index$1('wheel');
  else if (t1.onmousewheel !== undefined)
    return this.operator$index$1('mousewheel');
  else
    return this.operator$index$1('DOMMouseScroll');
}
};

$$._EventSourceEventsImpl = {"": ["_ptr"],
 "super": "_EventsImpl",
 get$message: function() {
  return this.operator$index$1('message');
},
 get$open: function() {
  return this.operator$index$1('open');
},
 open$3: function(arg0, arg1, arg2) { return this.get$open().call$3(arg0, arg1, arg2); }
};

$$._EventsImpl = {"": ["_ptr?"],
 "super": "Object",
 operator$index$1: function(type) {
  return $._EventListenerListImpl$(this._ptr, type);
}
};

$$._EventListenerListImpl = {"": ["_ptr?", "_type"],
 "super": "Object",
 add$2: function(listener, useCapture) {
  this._add$2(listener, useCapture);
  return this;
},
 add$1: function(listener) {
  return this.add$2(listener,false)
},
 remove$2: function(listener, useCapture) {
  this._remove$2(listener, useCapture);
  return this;
},
 remove$1: function(listener) {
  return this.remove$2(listener,false)
},
 dispatch$1: function(evt) {
  return this._ptr.$dom_dispatchEvent$1(evt);
},
 _add$2: function(listener, useCapture) {
  this._ptr.$dom_addEventListener$3(this._type, listener, useCapture);
},
 _remove$2: function(listener, useCapture) {
  this._ptr.$dom_removeEventListener$3(this._type, listener, useCapture);
}
};

$$._FileReaderEventsImpl = {"": ["_ptr"],
 "super": "_EventsImpl",
 get$abort: function() {
  return this.operator$index$1('abort');
},
 abort$0: function() { return this.get$abort().call$0(); },
 get$loadEnd: function() {
  return this.operator$index$1('loadend');
}
};

$$._FileWriterEventsImpl = {"": ["_ptr"],
 "super": "_EventsImpl",
 get$abort: function() {
  return this.operator$index$1('abort');
},
 abort$0: function() { return this.get$abort().call$0(); }
};

$$._FrameSetElementEventsImpl = {"": ["_ptr"],
 "super": "_ElementEventsImpl",
 get$blur: function() {
  return this.operator$index$1('blur');
},
 get$focus: function() {
  return this.operator$index$1('focus');
},
 focus$0: function() { return this.get$focus().call$0(); },
 get$message: function() {
  return this.operator$index$1('message');
},
 get$resize: function() {
  return this.operator$index$1('resize');
}
};

$$._HttpRequestEventsImpl = {"": ["_ptr"],
 "super": "_EventsImpl",
 get$abort: function() {
  return this.operator$index$1('abort');
},
 abort$0: function() { return this.get$abort().call$0(); },
 get$loadEnd: function() {
  return this.operator$index$1('loadend');
}
};

$$._HttpRequestUploadEventsImpl = {"": ["_ptr"],
 "super": "_EventsImpl",
 get$abort: function() {
  return this.operator$index$1('abort');
},
 abort$0: function() { return this.get$abort().call$0(); },
 get$loadEnd: function() {
  return this.operator$index$1('loadend');
}
};

$$._IDBDatabaseEventsImpl = {"": ["_ptr"],
 "super": "_EventsImpl",
 get$abort: function() {
  return this.operator$index$1('abort');
},
 abort$0: function() { return this.get$abort().call$0(); }
};

$$._IDBOpenDBRequestEventsImpl = {"": ["_ptr"],
 "super": "_IDBRequestEventsImpl"
};

$$._IDBRequestEventsImpl = {"": ["_ptr"],
 "super": "_EventsImpl"
};

$$._IDBTransactionEventsImpl = {"": ["_ptr"],
 "super": "_EventsImpl",
 get$abort: function() {
  return this.operator$index$1('abort');
},
 abort$0: function() { return this.get$abort().call$0(); },
 get$complete: function() {
  return this.operator$index$1('complete');
},
 complete$1: function(arg0) { return this.get$complete().call$1(arg0); }
};

$$._IDBVersionChangeRequestEventsImpl = {"": ["_ptr"],
 "super": "_IDBRequestEventsImpl"
};

$$._InputElementEventsImpl = {"": ["_ptr"],
 "super": "_ElementEventsImpl"
};

$$._JavaScriptAudioNodeEventsImpl = {"": ["_ptr"],
 "super": "_EventsImpl"
};

$$._LocalWindowEventsImpl = {"": ["_ptr"],
 "super": "_EventsImpl",
 get$abort: function() {
  return this.operator$index$1('abort');
},
 abort$0: function() { return this.get$abort().call$0(); },
 get$blur: function() {
  return this.operator$index$1('blur');
},
 get$click: function() {
  return this.operator$index$1('click');
},
 get$focus: function() {
  return this.operator$index$1('focus');
},
 focus$0: function() { return this.get$focus().call$0(); },
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$message: function() {
  return this.operator$index$1('message');
},
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$mouseMove: function() {
  return this.operator$index$1('mousemove');
},
 get$mouseOut: function() {
  return this.operator$index$1('mouseout');
},
 get$mouseOver: function() {
  return this.operator$index$1('mouseover');
},
 get$mouseUp: function() {
  return this.operator$index$1('mouseup');
},
 get$mouseWheel: function() {
  return this.operator$index$1('mousewheel');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); },
 get$resize: function() {
  return this.operator$index$1('resize');
},
 get$scroll: function() {
  return this.operator$index$1('scroll');
},
 get$submit: function() {
  return this.operator$index$1('submit');
},
 get$touchCancel: function() {
  return this.operator$index$1('touchcancel');
},
 get$touchEnd: function() {
  return this.operator$index$1('touchend');
},
 get$touchMove: function() {
  return this.operator$index$1('touchmove');
},
 get$touchStart: function() {
  return this.operator$index$1('touchstart');
}
};

$$._MediaElementEventsImpl = {"": ["_ptr"],
 "super": "_ElementEventsImpl"
};

$$._MediaStreamEventsImpl = {"": ["_ptr"],
 "super": "_EventsImpl"
};

$$._MediaStreamTrackEventsImpl = {"": ["_ptr"],
 "super": "_EventsImpl"
};

$$._MediaStreamTrackListEventsImpl = {"": ["_ptr"],
 "super": "_EventsImpl"
};

$$._MessagePortEventsImpl = {"": ["_ptr"],
 "super": "_EventsImpl",
 get$message: function() {
  return this.operator$index$1('message');
}
};

$$._ChildNodeListLazy = {"": ["_this"],
 "super": "Object",
 get$first: function() {
  return this._this.firstChild;
},
 get$last: function() {
  return this._this.lastChild;
},
 add$1: function(value) {
  this._this.$dom_appendChild$1(value);
},
 addLast$1: function(value) {
  this._this.$dom_appendChild$1(value);
},
 addAll$1: function(collection) {
  for (var t1 = $.iterator(collection), t2 = this._this; t1.get$hasNext() === true;)
    t2.$dom_appendChild$1(t1.next$0());
},
 removeLast$0: function() {
  var result = $.get$last(this);
  if (!(result == null))
    this._this.$dom_removeChild$1(result);
  return result;
},
 clear$0: function() {
  this._this.set$text('');
},
 operator$indexSet$2: function(index, value) {
  this._this.$dom_replaceChild$2(value, this.operator$index$1(index));
},
 iterator$0: function() {
  return $.iterator(this._this.get$$$dom_childNodes());
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._NodeListWrapper$($._Collections_filter(this, [], f));
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._NodeListWrapper$($._Lists_getRange(this, start, rangeLength, []));
},
 get$length: function() {
  return $.get$length(this._this.get$$$dom_childNodes());
},
 operator$index$1: function(index) {
  return $.index(this._this.get$$$dom_childNodes(), index);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._ListWrapper = {"": [],
 "super": "Object",
 iterator$0: function() {
  return $.iterator(this._list);
},
 contains$1: function(element) {
  return $.contains$1(this._list, element);
},
 forEach$1: function(f) {
  return $.forEach(this._list, f);
},
 map$1: function(f) {
  return $.map(this._list, f);
},
 filter$1: function(f) {
  return $.filter(this._list, f);
},
 some$1: function(f) {
  return $.some(this._list, f);
},
 get$isEmpty: function() {
  return $.get$isEmpty(this._list);
},
 get$length: function() {
  return $.get$length(this._list);
},
 operator$index$1: function(index) {
  return $.index(this._list, index);
},
 operator$indexSet$2: function(index, value) {
  $.indexSet(this._list, index, value);
},
 set$length: function(newLength) {
  $.set$length(this._list, newLength);
},
 add$1: function(value) {
  return $.add$1(this._list, value);
},
 addLast$1: function(value) {
  return $.addLast(this._list, value);
},
 addAll$1: function(collection) {
  return $.addAll(this._list, collection);
},
 sort$1: function(compare) {
  return $.sort$1(this._list, compare);
},
 indexOf$2: function(element, start) {
  return $.indexOf$2(this._list, element, start);
},
 clear$0: function() {
  return $.clear(this._list);
},
 removeLast$0: function() {
  return $.removeLast(this._list);
},
 get$last: function() {
  return $.get$last(this._list);
},
 getRange$2: function(start, rangeLength) {
  return $.getRange(this._list, start, rangeLength);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  return $.setRange$4(this._list, start, rangeLength, from, startFrom);
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,0)
},
 get$first: function() {
  return $.index(this._list, 0);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._NodeListWrapper = {"": ["_list"],
 "super": "_ListWrapper",
 filter$1: function(f) {
  return $._NodeListWrapper$($.filter(this._list, f));
},
 getRange$2: function(start, rangeLength) {
  return $._NodeListWrapper$($.getRange(this._list, start, rangeLength));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._NotificationEventsImpl = {"": ["_ptr"],
 "super": "_EventsImpl",
 get$click: function() {
  return this.operator$index$1('click');
},
 get$close: function() {
  return this.operator$index$1('close');
},
 close$0: function() { return this.get$close().call$0(); },
 get$display: function() {
  return this.operator$index$1('display');
}
};

$$._PeerConnection00EventsImpl = {"": ["_ptr"],
 "super": "_EventsImpl",
 get$open: function() {
  return this.operator$index$1('open');
},
 open$3: function(arg0, arg1, arg2) { return this.get$open().call$3(arg0, arg1, arg2); }
};

$$._RTCDataChannelEventsImpl = {"": ["_ptr"],
 "super": "_EventsImpl",
 get$close: function() {
  return this.operator$index$1('close');
},
 close$0: function() { return this.get$close().call$0(); },
 get$message: function() {
  return this.operator$index$1('message');
},
 get$open: function() {
  return this.operator$index$1('open');
},
 open$3: function(arg0, arg1, arg2) { return this.get$open().call$3(arg0, arg1, arg2); }
};

$$._RTCPeerConnectionEventsImpl = {"": ["_ptr"],
 "super": "_EventsImpl",
 get$open: function() {
  return this.operator$index$1('open');
},
 open$3: function(arg0, arg1, arg2) { return this.get$open().call$3(arg0, arg1, arg2); }
};

$$._AttributeClassSet = {"": ["_element"],
 "super": "_CssClassSet",
 $dom_className$0: function() {
  return $.index(this._element.get$attributes(), 'class');
},
 get$$$dom_className: function() { return new $.BoundClosure2(this, '$dom_className$0'); },
 _write$1: function(s) {
  $.indexSet(this._element.get$attributes(), 'class', this._formatSet$1(s));
}
};

$$._SVGElementInstanceEventsImpl = {"": ["_ptr"],
 "super": "_EventsImpl",
 get$abort: function() {
  return this.operator$index$1('abort');
},
 abort$0: function() { return this.get$abort().call$0(); },
 get$blur: function() {
  return this.operator$index$1('blur');
},
 get$click: function() {
  return this.operator$index$1('click');
},
 get$focus: function() {
  return this.operator$index$1('focus');
},
 focus$0: function() { return this.get$focus().call$0(); },
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$mouseMove: function() {
  return this.operator$index$1('mousemove');
},
 get$mouseOut: function() {
  return this.operator$index$1('mouseout');
},
 get$mouseOver: function() {
  return this.operator$index$1('mouseover');
},
 get$mouseUp: function() {
  return this.operator$index$1('mouseup');
},
 get$mouseWheel: function() {
  return this.operator$index$1('mousewheel');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); },
 get$resize: function() {
  return this.operator$index$1('resize');
},
 get$scroll: function() {
  return this.operator$index$1('scroll');
},
 get$submit: function() {
  return this.operator$index$1('submit');
}
};

$$._SharedWorkerContextEventsImpl = {"": ["_ptr"],
 "super": "_WorkerContextEventsImpl"
};

$$._SpeechRecognitionEventsImpl = {"": ["_ptr"],
 "super": "_EventsImpl",
 get$end: function() {
  return this.operator$index$1('end');
},
 get$start: function() {
  return this.operator$index$1('start');
},
 start$5: function(arg0, arg1, arg2, arg3, arg4) { return this.get$start().call$5(arg0, arg1, arg2, arg3, arg4); }
};

$$._TextTrackCueEventsImpl = {"": ["_ptr"],
 "super": "_EventsImpl"
};

$$._TextTrackEventsImpl = {"": ["_ptr"],
 "super": "_EventsImpl"
};

$$._TextTrackListEventsImpl = {"": ["_ptr"],
 "super": "_EventsImpl"
};

$$._WebSocketEventsImpl = {"": ["_ptr"],
 "super": "_EventsImpl",
 get$close: function() {
  return this.operator$index$1('close');
},
 close$0: function() { return this.get$close().call$0(); },
 get$message: function() {
  return this.operator$index$1('message');
},
 get$open: function() {
  return this.operator$index$1('open');
},
 open$3: function(arg0, arg1, arg2) { return this.get$open().call$3(arg0, arg1, arg2); }
};

$$._WorkerContextEventsImpl = {"": ["_ptr"],
 "super": "_EventsImpl"
};

$$._WorkerEventsImpl = {"": ["_ptr"],
 "super": "_AbstractWorkerEventsImpl",
 get$message: function() {
  return this.operator$index$1('message');
}
};

$$._MeasurementRequest = {"": ["computeValue", "completer?", "value=", "exception="],
 "super": "Object",
 computeValue$0: function() { return this.computeValue.call$0(); }
};

$$._MeasurementScheduler = {"": ["_callback?"],
 "super": "Object",
 _callback$0: function() { return this._callback.call$0(); },
 _callback$2: function(arg0, arg1) { return this._callback.call$2(arg0, arg1); },
 maybeSchedule$0: function() {
  if (this._nextMeasurementFrameScheduled)
    return;
  this._nextMeasurementFrameScheduled = true;
  this._schedule$0();
},
 _schedule$0: function() {
},
 _onCallback$0: function() {
  if (!this._nextMeasurementFrameScheduled)
    return;
  this._nextMeasurementFrameScheduled = false;
  this._callback$0();
}
};

$$._PostMessageScheduler = {"": ["_MEASUREMENT_MESSAGE", "_nextMeasurementFrameScheduled", "_callback"],
 "super": "_MeasurementScheduler",
 _schedule$0: function() {
  $.window().postMessage$2(this._MEASUREMENT_MESSAGE, '*');
},
 _handleMessage$1: function(e) {
  this._onCallback$0();
},
 get$_handleMessage: function() { return new $.BoundClosure1(this, '_handleMessage$1'); },
 _PostMessageScheduler$1: function(callback) {
  $.add$1($.window().get$on().get$message(), this.get$_handleMessage());
}
};

$$._MutationObserverScheduler = {"": ["_observer", "_dummy", "_nextMeasurementFrameScheduled", "_callback"],
 "super": "_MeasurementScheduler",
 _schedule$0: function() {
  var t1 = this._dummy.get$hidden() !== true;
  this._dummy.set$hidden(t1);
},
 _handleMutation$2: function(mutations, observer) {
  this._onCallback$0();
},
 get$_handleMutation: function() { return new $.BoundClosure3(this, '_handleMutation$2'); },
 _MutationObserverScheduler$1: function(callback) {
  this._observer = $.MutationObserver_MutationObserver(this.get$_handleMutation());
  this._dummy = $.DivElement_DivElement();
  this._observer.observe$2$attributes(this._dummy, true);
}
};

$$._DOMWindowCrossFrameImpl = {"": ["_window"],
 "super": "Object",
 get$location: function() {
  return $._LocationCrossFrameImpl__createSafe(this._window.location);
},
 get$parent: function() {
  return $._DOMWindowCrossFrameImpl__createSafe(this._window.parent);
},
 get$top: function() {
  return $._DOMWindowCrossFrameImpl__createSafe(this._window.top);
},
 focus$0: function() {
  return this._window.focus();
},
 get$focus: function() { return new $.BoundClosure2(this, 'focus$0'); },
 blur$0: function() {
  return this._window.blur();
},
 get$blur: function() { return new $.BoundClosure2(this, 'blur$0'); },
 close$0: function() {
  return this._window.close();
},
 postMessage$3: function(message, targetOrigin, messagePorts) {
  var t1 = messagePorts == null;
  var t2 = this._window;
  if (t1)
    t2.postMessage(message,targetOrigin);
  else
    t2.postMessage(message,targetOrigin,messagePorts);
},
 postMessage$2: function(message,targetOrigin) {
  return this.postMessage$3(message,targetOrigin,null)
}
};

$$._LocationCrossFrameImpl = {"": ["_location?"],
 "super": "Object",
 is$Location: function() { return true; }
};

$$._LocationWrapper = {"": ["_ptr?"],
 "super": "Object",
 reload$0: function() {
  return this._ptr.reload();
},
 toString$0: function() {
  return this._ptr.toString();
},
 is$Location: function() { return true; }
};

$$._FixedSizeListIterator = {"": ["_lib_length", "_array", "_pos"],
 "super": "_VariableSizeListIterator",
 get$hasNext: function() {
  return $.gt(this._lib_length, this._pos);
}
};

$$._VariableSizeListIterator = {"": [],
 "super": "Object",
 get$hasNext: function() {
  return $.gt($.get$length(this._array), this._pos);
},
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  var t1 = this._array;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.next$0$bailout(1, t1);
  var t3 = this._pos;
  this._pos = t3 + 1;
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  return t1[t3];
},
 next$0$bailout: function(state0, t1) {
  var t3 = this._pos;
  this._pos = t3 + 1;
  return $.index(t1, t3);
}
};

$$._Manager = {"": ["nextIsolateId=", "currentManagerId?", "nextManagerId", "currentContext=", "rootContext=", "topEventLoop?", "fromCommandLine?", "isWorker?", "supportsWorkers", "isolates?", "mainManager?", "managers?"],
 "super": "Object",
 get$useWorkers: function() {
  return this.supportsWorkers;
},
 get$needSerialization: function() {
  return this.get$useWorkers();
},
 _nativeDetectEnvironment$0: function() {
  this.isWorker = $isWorker;
  this.supportsWorkers = $supportsWorkers;
  this.fromCommandLine = typeof(window) == 'undefined';
},
 _nativeInitWorkerMessageHandler$0: function() {
  $globalThis.onmessage = function (e) {
  _IsolateNatives._processWorkerMessage(this.mainManager, e);
};
},
 maybeCloseWorker$0: function() {
  if ($.get$isEmpty(this.isolates) === true)
    this.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(['command', 'close'])));
},
 _Manager$0: function() {
  this._nativeDetectEnvironment$0();
  this.topEventLoop = $._EventLoop$();
  this.isolates = $.HashMapImplementation$();
  this.managers = $.HashMapImplementation$();
  if (this.isWorker === true) {
    this.mainManager = $._MainManagerStub$();
    this._nativeInitWorkerMessageHandler$0();
  }
}
};

$$._IsolateContext = {"": ["id?", "ports?", "isolateStatics"],
 "super": "Object",
 initGlobals$0: function() {
  $initGlobals(this);
},
 eval$1: function(code) {
  var old = $._globalState().get$currentContext();
  $._globalState().set$currentContext(this);
  this._setGlobals$0();
  var result = null;
  try {
    result = code.call$0();
  } finally {
    var t1 = old;
    $._globalState().set$currentContext(t1);
    if (!(old == null))
      old._setGlobals$0();
  }
  return result;
},
 _setGlobals$0: function() {
  $setGlobals(this);
},
 lookup$1: function(portId) {
  return $.index(this.ports, portId);
},
 register$2: function(portId, port) {
  if (this.ports.containsKey$1(portId) === true)
    throw $.$$throw($._ExceptionImplementation$('Registry: ports must be registered only once.'));
  $.indexSet(this.ports, portId, port);
  $.indexSet($._globalState().get$isolates(), this.id, this);
},
 unregister$1: function(portId) {
  this.ports.remove$1(portId);
  if ($.get$isEmpty(this.ports) === true)
    $._globalState().get$isolates().remove$1(this.id);
},
 _IsolateContext$0: function() {
  var t1 = $._globalState();
  var t2 = t1.get$nextIsolateId();
  t1.set$nextIsolateId($.add(t2, 1));
  this.id = t2;
  this.ports = $.HashMapImplementation$();
  this.initGlobals$0();
}
};

$$._EventLoop = {"": ["events"],
 "super": "Object",
 enqueue$3: function(isolate, fn, msg) {
  $.addLast(this.events, $._IsolateEvent$(isolate, fn, msg));
},
 dequeue$0: function() {
  var t1 = this.events;
  if ($.get$isEmpty(t1) === true)
    return;
  return t1.removeFirst$0();
},
 runIteration$0: function() {
  var event$ = this.dequeue$0();
  if (event$ == null) {
    if ($._globalState().get$isWorker() === true)
      $._globalState().maybeCloseWorker$0();
    else if (!($._globalState().get$rootContext() == null) && $._globalState().get$isolates().containsKey$1($._globalState().get$rootContext().get$id()) === true && $._globalState().get$fromCommandLine() === true && $.get$isEmpty($._globalState().get$rootContext().get$ports()) === true)
      throw $.$$throw($._ExceptionImplementation$('Program exited with open ReceivePorts.'));
    return false;
  }
  event$.process$0();
  return true;
},
 _runHelper$0: function() {
  if (!($._window0() == null))
    new $._EventLoop__runHelper_next(this).call$0();
  else
    for (; this.runIteration$0() === true;)
      ;
},
 run$0: function() {
  if ($._globalState().get$isWorker() !== true)
    this._runHelper$0();
  else
    try {
      this._runHelper$0();
    } catch (exception) {
      var t1 = $.unwrapException(exception);
      var e = t1;
      var trace = $.getTraceFromException(exception);
      $._globalState().get$mainManager().postMessage$1($._serializeMessage($.makeLiteralMap(['command', 'error', 'msg', $.S(e) + '\n' + $.S(trace)])));
    }

}
};

$$._IsolateEvent = {"": ["isolate", "fn", "message?"],
 "super": "Object",
 process$0: function() {
  this.isolate.eval$1(this.fn);
}
};

$$._MainManagerStub = {"": [],
 "super": "Object",
 get$id: function() {
  return 0;
},
 postMessage$1: function(msg) {
  $globalThis.postMessage(msg);
}
};

$$._BaseSendPort = {"": ["_isolateId?"],
 "super": "Object",
 _checkReplyTo$1: function(replyTo) {
  if (!(replyTo == null) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_NativeJsSendPort) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_WorkerSendPort) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_BufferingSendPort))
    throw $.$$throw($._ExceptionImplementation$('SendPort.send: Illegal replyTo port type'));
},
 call$1: function(message) {
  var completer = $.Completer_Completer();
  var port = $._ReceivePortImpl$();
  this.send$2(message, port.toSendPort$0());
  port.receive$1(new $._BaseSendPort_call_anon(completer, port));
  return completer.get$future();
},
 is$SendPort: true
};

$$._NativeJsSendPort = {"": ["_receivePort?", "_isolateId"],
 "super": "_BaseSendPort",
 send$2: function(message, replyTo) {
  $._waitForPendingPorts([message, replyTo], new $._NativeJsSendPort_send_anon(replyTo, this, message));
},
 send$1: function(message) {
  return this.send$2(message,null)
},
 operator$eq$1: function(other) {
  return typeof other === 'object' && other !== null && !!other.is$_NativeJsSendPort && $.eqB(this._receivePort, other._receivePort);
},
 get$hashCode: function() {
  return this._receivePort.get$_id();
},
 is$_NativeJsSendPort: true,
 is$SendPort: true
};

$$._WorkerSendPort = {"": ["_workerId?", "_receivePortId", "_isolateId"],
 "super": "_BaseSendPort",
 send$2: function(message, replyTo) {
  $._waitForPendingPorts([message, replyTo], new $._WorkerSendPort_send_anon(replyTo, message, this));
},
 send$1: function(message) {
  return this.send$2(message,null)
},
 operator$eq$1: function(other) {
  if (typeof other === 'object' && other !== null && !!other.is$_WorkerSendPort)
    var t1 = $.eqB(this._workerId, other._workerId) && $.eqB(this._isolateId, other._isolateId) && $.eqB(this._receivePortId, other._receivePortId);
  else
    t1 = false;
  return t1;
},
 get$hashCode: function() {
  return $.xor($.xor($.shl(this._workerId, 16), $.shl(this._isolateId, 8)), this._receivePortId);
},
 is$_WorkerSendPort: true,
 is$SendPort: true
};

$$._ReceivePortImpl = {"": ["_id?", "_lib8_callback?"],
 "super": "Object",
 _lib8_callback$0: function() { return this._lib8_callback.call$0(); },
 _lib8_callback$2: function(arg0, arg1) { return this._lib8_callback.call$2(arg0, arg1); },
 receive$1: function(onMessage) {
  this._lib8_callback = onMessage;
},
 close$0: function() {
  this._lib8_callback = null;
  $._globalState().get$currentContext().unregister$1(this._id);
},
 toSendPort$0: function() {
  return $._NativeJsSendPort$(this, $._globalState().get$currentContext().get$id());
},
 _ReceivePortImpl$0: function() {
  $._globalState().get$currentContext().register$2(this._id, this);
}
};

$$._PendingSendPortFinder = {"": ["ports?", "_visited"],
 "super": "_MessageTraverser",
 visitPrimitive$1: function(x) {
},
 visitList$1: function(list) {
  if (!($.index(this._visited, list) == null))
    return;
  $.indexSet(this._visited, list, true);
  $.forEach(list, new $._PendingSendPortFinder_visitList_anon(this));
},
 visitMap$1: function(map) {
  if (!($.index(this._visited, map) == null))
    return;
  $.indexSet(this._visited, map, true);
  $.forEach(map.get$values(), new $._PendingSendPortFinder_visitMap_anon(this));
},
 visitSendPort$1: function(port) {
  if (!!port.is$_BufferingSendPort && port._port == null)
    this.ports.push(port.get$_futurePort());
},
 _PendingSendPortFinder$0: function() {
  this._visited = $._JsVisitedMap$();
}
};

$$._JsSerializer = {"": ["_nextFreeRefId", "_visited"],
 "super": "_Serializer",
 visitSendPort$1: function(x) {
  if (typeof x === 'object' && x !== null && !!x.is$_NativeJsSendPort)
    return this.visitNativeJsSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_WorkerSendPort)
    return this.visitWorkerSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_BufferingSendPort)
    return this.visitBufferingSendPort$1(x);
  throw $.$$throw('Illegal underlying port ' + $.S(x));
},
 visitNativeJsSendPort$1: function(port) {
  return ['sendport', $._globalState().get$currentManagerId(), port._isolateId, port._receivePort.get$_id()];
},
 visitWorkerSendPort$1: function(port) {
  return ['sendport', port._workerId, port._isolateId, port._receivePortId];
},
 visitBufferingSendPort$1: function(port) {
  var t1 = port._port;
  if (!(t1 == null))
    return this.visitSendPort$1(t1);
  else
    throw $.$$throw('internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.');
},
 _JsSerializer$0: function() {
  this._visited = $._JsVisitedMap$();
}
};

$$._JsCopier = {"": ["_visited"],
 "super": "_Copier",
 visitSendPort$1: function(x) {
  if (typeof x === 'object' && x !== null && !!x.is$_NativeJsSendPort)
    return this.visitNativeJsSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_WorkerSendPort)
    return this.visitWorkerSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_BufferingSendPort)
    return this.visitBufferingSendPort$1(x);
  throw $.$$throw('Illegal underlying port ' + $.S(this.get$p()));
},
 visitNativeJsSendPort$1: function(port) {
  return $._NativeJsSendPort$(port._receivePort, port._isolateId);
},
 visitWorkerSendPort$1: function(port) {
  return $._WorkerSendPort$(port._workerId, port._isolateId, port._receivePortId);
},
 visitBufferingSendPort$1: function(port) {
  var t1 = port._port;
  if (!(t1 == null))
    return this.visitSendPort$1(t1);
  else
    throw $.$$throw('internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.');
},
 _JsCopier$0: function() {
  this._visited = $._JsVisitedMap$();
}
};

$$._JsDeserializer = {"": ["_deserialized"],
 "super": "_Deserializer",
 deserializeSendPort$1: function(x) {
  var managerId = $.index(x, 1);
  var isolateId = $.index(x, 2);
  var receivePortId = $.index(x, 3);
  if ($.eqB(managerId, $._globalState().get$currentManagerId())) {
    var isolate = $.index($._globalState().get$isolates(), isolateId);
    if (isolate == null)
      return;
    return $._NativeJsSendPort$(isolate.lookup$1(receivePortId), isolateId);
  } else
    return $._WorkerSendPort$(managerId, isolateId, receivePortId);
}
};

$$._JsVisitedMap = {"": ["tagged"],
 "super": "Object",
 operator$index$1: function(object) {
  return this._getAttachedInfo$1(object);
},
 operator$indexSet$2: function(object, info) {
  $.add$1(this.tagged, object);
  this._setAttachedInfo$2(object, info);
},
 reset$0: function() {
  this.tagged = $.ListImplementation_List(null);
},
 cleanup$0: function() {
  var length$ = $.get$length(this.tagged);
  if (typeof length$ !== 'number')
    return this.cleanup$0$bailout(1, length$);
  var i = 0;
  for (; i < length$; ++i)
    this._clearAttachedInfo$1($.index(this.tagged, i));
  this.tagged = null;
},
 cleanup$0$bailout: function(state0, length$) {
  var i = 0;
  for (; $.ltB(i, length$); ++i)
    this._clearAttachedInfo$1($.index(this.tagged, i));
  this.tagged = null;
},
 _clearAttachedInfo$1: function(o) {
  o['__MessageTraverser__attached_info__'] = null;
},
 _setAttachedInfo$2: function(o, info) {
  o['__MessageTraverser__attached_info__'] = info;
},
 _getAttachedInfo$1: function(o) {
  return o['__MessageTraverser__attached_info__'];
}
};

$$._MessageTraverserVisitedMap = {"": [],
 "super": "Object",
 operator$index$1: function(object) {
  return;
},
 operator$indexSet$2: function(object, info) {
},
 reset$0: function() {
},
 cleanup$0: function() {
}
};

$$._MessageTraverser = {"": [],
 "super": "Object",
 traverse$1: function(x) {
  if ($._MessageTraverser_isPrimitive(x))
    return this.visitPrimitive$1(x);
  this._visited.reset$0();
  var result = null;
  try {
    result = this._dispatch$1(x);
  } finally {
    this._visited.cleanup$0();
  }
  return result;
},
 _dispatch$1: function(x) {
  if ($._MessageTraverser_isPrimitive(x))
    return this.visitPrimitive$1(x);
  if (typeof x === 'object' && x !== null && (x.constructor === Array || x.is$List()))
    return this.visitList$1(x);
  if (typeof x === 'object' && x !== null && x.is$Map())
    return this.visitMap$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$SendPort)
    return this.visitSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$SendPortSync)
    return this.visitSendPortSync$1(x);
  return this.visitObject$1(x);
},
 visitObject$1: function(x) {
  throw $.$$throw('Message serialization: Illegal value ' + $.S(x) + ' passed');
}
};

$$._Copier = {"": [],
 "super": "_MessageTraverser",
 visitPrimitive$1: function(x) {
  return x;
},
 visitList$1: function(list) {
  if (typeof list !== 'object' || list === null || list.constructor !== Array && !list.is$JavaScriptIndexingBehavior())
    return this.visitList$1$bailout(1, list);
  var copy = $.index(this._visited, list);
  if (!(copy == null))
    return copy;
  var len = list.length;
  copy = $.ListImplementation_List(len);
  $.indexSet(this._visited, list, copy);
  for (var i = 0; i < len; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    copy[i] = this._dispatch$1(list[i]);
  }
  return copy;
},
 visitList$1$bailout: function(state0, list) {
  var copy = $.index(this._visited, list);
  if (!(copy == null))
    return copy;
  var len = $.get$length(list);
  copy = $.ListImplementation_List(len);
  $.indexSet(this._visited, list, copy);
  for (var i = 0; $.ltB(i, len); ++i) {
    var t1 = this._dispatch$1($.index(list, i));
    if (i >= copy.length)
      throw $.ioore(i);
    copy[i] = t1;
  }
  return copy;
},
 visitMap$1: function(map) {
  var t1 = {};
  t1.copy_10 = $.index(this._visited, map);
  var t2 = t1.copy_10;
  if (!(t2 == null))
    return t2;
  t1.copy_10 = $.HashMapImplementation$();
  $.indexSet(this._visited, map, t1.copy_10);
  map.forEach$1(new $._Copier_visitMap_anon(this, t1));
  return t1.copy_10;
}
};

$$._Serializer = {"": [],
 "super": "_MessageTraverser",
 visitPrimitive$1: function(x) {
  return x;
},
 visitList$1: function(list) {
  var copyId = $.index(this._visited, list);
  if (!(copyId == null))
    return ['ref', copyId];
  var id = this._nextFreeRefId;
  this._nextFreeRefId = id + 1;
  $.indexSet(this._visited, list, id);
  return ['list', id, this._serializeList$1(list)];
},
 visitMap$1: function(map) {
  var copyId = $.index(this._visited, map);
  if (!(copyId == null))
    return ['ref', copyId];
  var id = this._nextFreeRefId;
  this._nextFreeRefId = id + 1;
  $.indexSet(this._visited, map, id);
  return ['map', id, this._serializeList$1(map.get$keys()), this._serializeList$1(map.get$values())];
},
 _serializeList$1: function(list) {
  if (typeof list !== 'string' && (typeof list !== 'object' || list === null || list.constructor !== Array && !list.is$JavaScriptIndexingBehavior()))
    return this._serializeList$1$bailout(1, list);
  var len = list.length;
  var result = $.ListImplementation_List(len);
  for (var i = 0; i < len; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    result[i] = this._dispatch$1(list[i]);
  }
  return result;
},
 _serializeList$1$bailout: function(state0, list) {
  var len = $.get$length(list);
  var result = $.ListImplementation_List(len);
  for (var i = 0; $.ltB(i, len); ++i) {
    var t1 = this._dispatch$1($.index(list, i));
    if (i >= result.length)
      throw $.ioore(i);
    result[i] = t1;
  }
  return result;
}
};

$$._Deserializer = {"": [],
 "super": "Object",
 deserialize$1: function(x) {
  if ($._Deserializer_isPrimitive(x))
    return x;
  this._deserialized = $.HashMapImplementation$();
  return this._deserializeHelper$1(x);
},
 _deserializeHelper$1: function(x) {
  if ($._Deserializer_isPrimitive(x))
    return x;
  switch ($.index(x, 0)) {
    case 'ref':
      return this._deserializeRef$1(x);
    case 'list':
      return this._deserializeList$1(x);
    case 'map':
      return this._deserializeMap$1(x);
    case 'sendport':
      return this.deserializeSendPort$1(x);
    default:
      return this.deserializeObject$1(x);
  }
},
 _deserializeRef$1: function(x) {
  var id = $.index(x, 1);
  return $.index(this._deserialized, id);
},
 _deserializeList$1: function(x) {
  var id = $.index(x, 1);
  var dartList = $.index(x, 2);
  if (typeof dartList !== 'object' || dartList === null || (dartList.constructor !== Array || !!dartList.immutable$list) && !dartList.is$JavaScriptIndexingBehavior())
    return this._deserializeList$1$bailout(1, dartList, id);
  $.indexSet(this._deserialized, id, dartList);
  var len = dartList.length;
  for (var i = 0; i < len; ++i) {
    if (i >= dartList.length)
      throw $.ioore(i);
    var t1 = this._deserializeHelper$1(dartList[i]);
    if (i >= dartList.length)
      throw $.ioore(i);
    dartList[i] = t1;
  }
  return dartList;
},
 _deserializeList$1$bailout: function(state0, dartList, id) {
  $.indexSet(this._deserialized, id, dartList);
  var len = $.get$length(dartList);
  for (var i = 0; $.ltB(i, len); ++i)
    $.indexSet(dartList, i, this._deserializeHelper$1($.index(dartList, i)));
  return dartList;
},
 _deserializeMap$1: function(x) {
  var result = $.HashMapImplementation$();
  var id = $.index(x, 1);
  $.indexSet(this._deserialized, id, result);
  var keys = $.index(x, 2);
  if (typeof keys !== 'string' && (typeof keys !== 'object' || keys === null || keys.constructor !== Array && !keys.is$JavaScriptIndexingBehavior()))
    return this._deserializeMap$1$bailout(1, x, result, keys);
  var values = $.index(x, 3);
  if (typeof values !== 'string' && (typeof values !== 'object' || values === null || values.constructor !== Array && !values.is$JavaScriptIndexingBehavior()))
    return this._deserializeMap$1$bailout(2, values, result, keys);
  var len = keys.length;
  for (var i = 0; i < len; ++i) {
    if (i >= keys.length)
      throw $.ioore(i);
    var key = this._deserializeHelper$1(keys[i]);
    if (i >= values.length)
      throw $.ioore(i);
    result.operator$indexSet$2(key, this._deserializeHelper$1(values[i]));
  }
  return result;
},
 _deserializeMap$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      var x = env0;
      result = env1;
      keys = env2;
      break;
    case 2:
      values = env0;
      result = env1;
      keys = env2;
      break;
  }
  switch (state0) {
    case 0:
      var result = $.HashMapImplementation$();
      var id = $.index(x, 1);
      $.indexSet(this._deserialized, id, result);
      var keys = $.index(x, 2);
    case 1:
      state0 = 0;
      var values = $.index(x, 3);
    case 2:
      state0 = 0;
      var len = $.get$length(keys);
      for (var i = 0; $.ltB(i, len); ++i)
        result.operator$indexSet$2(this._deserializeHelper$1($.index(keys, i)), this._deserializeHelper$1($.index(values, i)));
      return result;
  }
},
 deserializeObject$1: function(x) {
  throw $.$$throw('Unexpected serialized object');
}
};

$$._Timer = {"": ["_once", "_handle"],
 "super": "Object",
 _Timer$repeating$2: function(milliSeconds, callback) {
  this._handle = $._window0().setInterval$2(new $.anon4(this, callback), milliSeconds);
},
 _Timer$2: function(milliSeconds, callback) {
  this._handle = $._window0().setTimeout$2(new $.anon3(this, callback), milliSeconds);
}
};

$$._ListRange = {"": ["_source", "_offset", "_lib3_length"],
 "super": "Object",
 iterator$0: function() {
  var t1 = this._source;
  var t2 = this._offset;
  return $._ListRangeIteratorImpl$(t1, t2, $.add(t2, this._lib3_length));
},
 get$length: function() {
  return this._lib3_length;
},
 _ListRange$3: function(source, offset, length$) {
  var t1 = this._offset;
  if ($.ltB(t1, 0) || $.gtB(t1, $.get$length(this._source)))
    throw $.$$throw($.IndexOutOfRangeException$(t1));
  var t2 = this._lib3_length;
  if (!(t2 == null) && $.ltB(t2, 0))
    throw $.$$throw($.IndexOutOfRangeException$(t2));
  if ($.gtB($.add(t2, t1), $.get$length(this._source)))
    throw $.$$throw($.IndexOutOfRangeException$($.add(t2, t1)));
}
};

$$._ListRangeIteratorImpl = {"": ["_source", "_offset", "_end"],
 "super": "Object",
 get$hasNext: function() {
  return $.lt(this._offset, this._end);
},
 next$0: function() {
  var t1 = this._source;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.next$0$bailout(1, t1, 0);
  var t3 = this._offset;
  if (typeof t3 !== 'number')
    return this.next$0$bailout(2, t1, t3);
  this._offset = t3 + 1;
  if (t3 !== (t3 | 0))
    throw $.iae(t3);
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  return t1[t3];
},
 next$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env0;
      t3 = env1;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = this._source;
    case 1:
      state0 = 0;
      var t3 = this._offset;
    case 2:
      state0 = 0;
      this._offset = $.add(t3, 1);
      return $.index(t1, t3);
  }
}
};

$$._JsonParser = {"": ["json", "length?", "position!"],
 "super": "Object",
 parseToplevel$0: function() {
  var result = this.parseValue$0();
  if (!(this.token$0() == null))
    this.error$1('Junk at the end of JSON input');
  return result;
},
 parseValue$0: function() {
  var token = this.token$0();
  if (token == null)
    this.error$1('Nothing to parse');
  switch (token) {
    case 34:
      return this.parseString$0();
    case 45:
      return this.parseNumber$0();
    case 110:
      return this.expectKeyword$2('null', null);
    case 102:
      return this.expectKeyword$2('false', false);
    case 116:
      return this.expectKeyword$2('true', true);
    case 123:
      return this.parseObject$0();
    case 91:
      return this.parseList$0();
    default:
      this.error$1('Unexpected token');
  }
},
 expectKeyword$2: function(word, value) {
  for (var t1 = word.length, i = 0; i < t1; ++i) {
    if (!$.eqB(this.char$0(), $.charCodeAt(word, i)))
      this.error$1('Expected keyword \'' + word + '\'');
    this.position = $.add(this.position, 1);
  }
  return value;
},
 parseObject$0: function() {
  var object = $.makeLiteralMap([]);
  if (typeof object !== 'object' || object === null || (object.constructor !== Array || !!object.immutable$list) && !object.is$JavaScriptIndexingBehavior())
    return this.parseObject$0$bailout(1, object);
  this.position = $.add(this.position, 1);
  if (this.isToken$1(125) !== true) {
    for (; true;) {
      var key = this.parseString$0();
      if (this.isToken$1(58) !== true)
        this.error$1('Expected \':\' when parsing object');
      this.position = $.add(this.position, 1);
      var t1 = this.parseValue$0();
      if (key !== (key | 0))
        throw $.iae(key);
      if (key < 0 || key >= object.length)
        throw $.ioore(key);
      object[key] = t1;
      if (this.isToken$1(44) !== true)
        break;
      this.position = $.add(this.position, 1);
    }
    if (this.isToken$1(125) !== true)
      this.error$1('Expected \'}\' at end of object');
  }
  this.position = $.add(this.position, 1);
  return object;
},
 parseObject$0$bailout: function(state0, object) {
  this.position = $.add(this.position, 1);
  if (this.isToken$1(125) !== true) {
    for (; true;) {
      var key = this.parseString$0();
      if (this.isToken$1(58) !== true)
        this.error$1('Expected \':\' when parsing object');
      this.position = $.add(this.position, 1);
      $.indexSet(object, key, this.parseValue$0());
      if (this.isToken$1(44) !== true)
        break;
      this.position = $.add(this.position, 1);
    }
    if (this.isToken$1(125) !== true)
      this.error$1('Expected \'}\' at end of object');
  }
  this.position = $.add(this.position, 1);
  return object;
},
 parseList$0: function() {
  var list = [];
  this.position = $.add(this.position, 1);
  if (this.isToken$1(93) !== true) {
    for (; true;) {
      list.push(this.parseValue$0());
      if (this.isToken$1(44) !== true)
        break;
      this.position = $.add(this.position, 1);
    }
    if (this.isToken$1(93) !== true)
      this.error$1('Expected \']\' at end of list');
  }
  this.position = $.add(this.position, 1);
  return list;
},
 parseString$0: function() {
  if (this.isToken$1(34) !== true)
    this.error$1('Expected string literal');
  this.position = $.add(this.position, 1);
  var charCodes = $.ListImplementation_List(null);
  for (var t1 = this.json; true;) {
    var c = this.char$0();
    if ($.eqB(c, 34)) {
      this.position = $.add(this.position, 1);
      break;
    }
    if ($.eqB(c, 92)) {
      this.position = $.add(this.position, 1);
      if ($.eqB(this.position, $.get$length(this)))
        this.error$1('\\ at the end of input');
      switch (this.char$0()) {
        case 34:
          c = 34;
          break;
        case 92:
          c = 92;
          break;
        case 47:
          c = 47;
          break;
        case 98:
          c = 8;
          break;
        case 110:
          c = 10;
          break;
        case 114:
          c = 13;
          break;
        case 102:
          c = 12;
          break;
        case 116:
          c = 9;
          break;
        case 117:
          if ($.gtB($.add(this.position, 5), $.get$length(this)))
            this.error$1('Invalid unicode esacape sequence');
          var codeString = $.substring$2(t1, $.add(this.position, 1), $.add(this.position, 5));
          try {
            c = $.int_parse('0x' + $.S(codeString));
          } catch (exception) {
            $.unwrapException(exception);
            this.error$1('Invalid unicode esacape sequence');
          }

          this.position = $.add(this.position, 4);
          break;
        default:
          this.error$1('Invalid esacape sequence in string literal');
      }
    }
    charCodes.push(c);
    this.position = $.add(this.position, 1);
  }
  return $.StringImplementation_String$fromCharCodes(charCodes);
},
 parseNumber$0: function() {
  if (this.isToken$1(45) !== true)
    this.error$1('Expected number literal');
  var startPos = this.position;
  var char$ = this.char$0();
  if (char$ === 45)
    char$ = this.nextChar$0();
  if (char$ === 48)
    char$ = this.nextChar$0();
  else if (this.isDigit$1(char$) === true) {
    char$ = this.nextChar$0();
    for (; this.isDigit$1(char$) === true;)
      char$ = this.nextChar$0();
  } else
    this.error$1('Expected digit when parsing number');
  if (char$ === 46) {
    char$ = this.nextChar$0();
    if (this.isDigit$1(char$) === true) {
      char$ = this.nextChar$0();
      for (; this.isDigit$1(char$) === true;)
        char$ = this.nextChar$0();
      var isInt = false;
    } else {
      this.error$1('Expected digit following comma');
      isInt = true;
    }
  } else
    isInt = true;
  if (char$ === 101 || char$ === 69) {
    char$ = this.nextChar$0();
    if (char$ === 45 || char$ === 43)
      char$ = this.nextChar$0();
    if (this.isDigit$1(char$) === true) {
      char$ = this.nextChar$0();
      for (; this.isDigit$1(char$) === true;)
        char$ = this.nextChar$0();
      isInt = false;
    } else
      this.error$1('Expected digit following \'e\' or \'E\'');
  }
  var number = $.substring$2(this.json, startPos, this.position);
  if (isInt)
    return $.int_parse(number);
  else
    return $.double_parse(number);
},
 isDigit$1: function(char$) {
  if (typeof char$ !== 'number')
    return this.isDigit$1$bailout(1, char$);
  return char$ >= 48 && char$ <= 57;
},
 isDigit$1$bailout: function(state0, char$) {
  return $.geB(char$, 48) && $.leB(char$, 57);
},
 isToken$1: function(tokenKind) {
  var t1 = this.token$0();
  if (typeof t1 !== 'number')
    return this.isToken$1$bailout(1, tokenKind, t1);
  return t1 === tokenKind;
},
 isToken$1$bailout: function(state0, tokenKind, t1) {
  return $.eq(t1, tokenKind);
},
 char$0: function() {
  var t1 = this.position;
  if (typeof t1 !== 'number')
    return this.char$0$bailout(1, t1, 0);
  var t3 = $.get$length(this);
  if (typeof t3 !== 'number')
    return this.char$0$bailout(2, t1, t3);
  if (t1 >= t3)
    this.error$1('Unexpected end of JSON stream');
  return $.charCodeAt(this.json, this.position);
},
 char$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env0;
      t3 = env1;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = this.position;
    case 1:
      state0 = 0;
      var t3 = $.get$length(this);
    case 2:
      state0 = 0;
      if ($.geB(t1, t3))
        this.error$1('Unexpected end of JSON stream');
      return $.charCodeAt(this.json, this.position);
  }
},
 nextChar$0: function() {
  var t1 = this.position;
  if (typeof t1 !== 'number')
    return this.nextChar$0$bailout(1, t1, 0);
  this.position = t1 + 1;
  t1 = this.position;
  if (typeof t1 !== 'number')
    return this.nextChar$0$bailout(2, t1, 0);
  var t3 = $.get$length(this);
  if (typeof t3 !== 'number')
    return this.nextChar$0$bailout(3, t1, t3);
  if (t1 >= t3)
    return 0;
  return $.charCodeAt(this.json, this.position);
},
 nextChar$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env0;
      break;
    case 3:
      t1 = env0;
      t3 = env1;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = this.position;
    case 1:
      state0 = 0;
      this.position = $.add(t1, 1);
      t1 = this.position;
    case 2:
      state0 = 0;
      var t3 = $.get$length(this);
    case 3:
      state0 = 0;
      if ($.geB(t1, t3))
        return 0;
      return $.charCodeAt(this.json, this.position);
  }
},
 token$0: function() {
  for (var t1 = this.json; true;) {
    if ($.geB(this.position, $.get$length(this)))
      return;
    var char$ = $.charCodeAt(t1, this.position);
    var token = $.index($._JsonParser_tokens, char$);
    if (token === 32) {
      this.position = $.add(this.position, 1);
      continue;
    }
    if (token == null)
      return 0;
    return token;
  }
},
 error$1: function(message) {
  throw $.$$throw(message);
},
 _JsonParser$1: function(json) {
  if (!($._JsonParser_tokens == null))
    return;
  $._JsonParser_tokens = $.ListImplementation_List(126);
  $.indexSet($._JsonParser_tokens, 9, 32);
  $.indexSet($._JsonParser_tokens, 10, 32);
  $.indexSet($._JsonParser_tokens, 13, 32);
  $.indexSet($._JsonParser_tokens, 32, 32);
  $.indexSet($._JsonParser_tokens, 48, 45);
  $.indexSet($._JsonParser_tokens, 49, 45);
  $.indexSet($._JsonParser_tokens, 50, 45);
  $.indexSet($._JsonParser_tokens, 51, 45);
  $.indexSet($._JsonParser_tokens, 52, 45);
  $.indexSet($._JsonParser_tokens, 53, 45);
  $.indexSet($._JsonParser_tokens, 54, 45);
  $.indexSet($._JsonParser_tokens, 55, 45);
  $.indexSet($._JsonParser_tokens, 56, 45);
  $.indexSet($._JsonParser_tokens, 57, 45);
  $.indexSet($._JsonParser_tokens, 45, 45);
  $.indexSet($._JsonParser_tokens, 123, 123);
  $.indexSet($._JsonParser_tokens, 125, 125);
  $.indexSet($._JsonParser_tokens, 91, 91);
  $.indexSet($._JsonParser_tokens, 93, 93);
  $.indexSet($._JsonParser_tokens, 34, 34);
  $.indexSet($._JsonParser_tokens, 58, 58);
  $.indexSet($._JsonParser_tokens, 44, 44);
  $.indexSet($._JsonParser_tokens, 110, 110);
  $.indexSet($._JsonParser_tokens, 116, 116);
  $.indexSet($._JsonParser_tokens, 102, 102);
}
};

$$.UdjApp = {"": ["state?", "onLoadFired", "_mainView"],
 "super": "App",
 setupApp$0: function() {
  if (this.onLoadFired && !(this.state == null)) {
    this.render$0();
    this.eraseSplashScreen$0();
  }
},
 onLoad$0: function() {
  this.onLoadFired = true;
  $.App.prototype.onLoad$0.call(this);
  this.setupApp$0();
},
 render$0: function() {
  this._mainView = $.MainView$(this);
  this._mainView.addToDocument$1($.document().get$body());
},
 login$3: function(username, password, callback) {
  var request = $.HttpRequest_HttpRequest();
  request.open$3('POST', 'https://www.udjplayer.com/udj/0_6/auth', true);
  var data = $.RequestHelper_encodeMap($.makeLiteralMap(['username', username, 'password', password]));
  request.setRequestHeader$2('Content-type', 'application/x-www-form-urlencode');
  $.add$1(request.get$on().get$loadEnd(), new $.UdjApp_login_anon(username, request, callback, this));
  request.send$1(data);
},
 UdjApp$0: function() {
  this.state = $.UdjState$();
  this.setupApp$0();
}
};

$$.UdjState = {"": ["loggedIn?", "playerState", "currentPlayer", "nowPlaying", "queue", "playerList", "libraryView?", "searchTerm?", "librarySongs", "session?", "_historyTracking"],
 "super": "UIState"
};

$$.Session = {"": ["ticket_hash", "user_id", "username"],
 "super": "Object"
};

$$.MainView = {"": ["_udjApp", "_topBar", "_sideBar", "_login", "_playerSelect", "childViews", "container", "scroller", "_scrollbar", "_cssName", "_scrollable", "_vertical", "_nestedContainer", "_showScrollbar", "_node", "_layout", "_resizeHandler", "customStyle"],
 "super": "CompositeView",
 afterRender$1: function(node) {
  this.watch$2(this._udjApp.state.get$loggedIn(), new $.MainView_afterRender_anon(this));
},
 _swapLoggedInView$0: function() {
  var t1 = this._udjApp.state.get$loggedIn().get$value() === true;
  var t2 = this._topBar;
  if (t1) {
    t2.set$hidden(false);
    this._login.set$hidden(true);
  } else {
    t2.set$hidden(true);
    this._login.set$hidden(false);
  }
},
 MainView$1: function(_udjApp) {
  var t1 = this._udjApp;
  this._topBar = $.TopBarView$(t1);
  this.addChild$1(this._topBar);
  this._login = $.LoginView$(t1, $.LoginState$());
  this.addChild$1(this._login);
  this._swapLoggedInView$0();
}
};

$$.TopBarView = {"": ["_udjApp", "_lib6_librarySelectView", "_searchBoxView", "childViews", "container", "scroller", "_scrollbar", "_cssName", "_scrollable", "_vertical", "_nestedContainer", "_showScrollbar", "_node", "_layout", "_resizeHandler", "customStyle"],
 "super": "CompositeView",
 _onSelectLibraryView$1: function(menuText) {
  this._udjApp.state.get$libraryView().set$value(menuText);
},
 get$_onSelectLibraryView: function() { return new $.BoundClosure1(this, '_onSelectLibraryView$1'); },
 _searchFormSubmitted$1: function(e) {
  e.preventDefault$0();
  var t1 = this._searchBoxView.get$node().query$1('#search-input').get$value();
  this._udjApp.state.get$searchTerm().set$value(t1);
},
 get$_searchFormSubmitted: function() { return new $.BoundClosure1(this, '_searchFormSubmitted$1'); },
 afterRender$1: function(node) {
  $.add$1(this._searchBoxView.get$node().query$1('#search-form').get$on().get$submit(), this.get$_searchFormSubmitted());
},
 TopBarView$1: function(_udjApp) {
  this.addChild$1($.View$html('      <div class="logo-holder"><img src="assets/img/logo.png"></div>\n    '));
  this._lib6_librarySelectView = $.SliderMenu$(['Random', 'Artists', 'Recent'], this.get$_onSelectLibraryView());
  this.addChild$1(this._lib6_librarySelectView);
  this._searchBoxView = $.View$html('      <div class="search-box-holder">\n        <form class="form-search main-search" id="search-form">\n          <div class="input-append">\n            <input type="text" class="span2 search-query" id="search-input" placeholder="Search">\n            <button type="submit" class="btn"><i class="icon-search"></i></button>\n          </div>\n        </form>\n      </div>\n    ');
  this.addChild$1(this._searchBoxView);
}
};

$$.LoginView = {"": ["_udjApp", "_state?", "_loginForm", "_errorMessage", "childViews", "container", "scroller", "_scrollbar", "_cssName", "_scrollable", "_vertical", "_nestedContainer", "_showScrollbar", "_node", "_layout", "_resizeHandler", "customStyle"],
 "super": "CompositeView",
 _loginFormSubmitted$1: function(e) {
  e.preventDefault$0();
  var usernameInput = this._loginForm.get$node().query$1('#username');
  var passwordInput = this._loginForm.get$node().query$1('#password');
  var username = usernameInput.get$value();
  var password = passwordInput.get$value();
  this._udjApp.login$3(username, password, new $.LoginView__loginFormSubmitted_anon(this, passwordInput));
},
 get$_loginFormSubmitted: function() { return new $.BoundClosure1(this, '_loginFormSubmitted$1'); },
 afterRender$1: function(node) {
  $.add$1(this._loginForm.get$node().query$1('#login-form').get$on().get$submit(), this.get$_loginFormSubmitted());
},
 _showErrorMessage$1: function(e) {
  var t1 = this._state.errorMessage;
  if (!(t1.get$value() == null)) {
    t1 = t1.get$value();
    this._errorMessage.get$node().set$text(t1);
    this._errorMessage.set$hidden(false);
  } else
    this._errorMessage.set$hidden(true);
},
 get$_showErrorMessage: function() { return new $.BoundClosure1(this, '_showErrorMessage$1'); },
 LoginView$2: function(_udjApp, _state) {
  this._loginForm = $.View$html('      <div class="container" id="login-box">\n        <div class="row">\n          <div class="span4 offset4 loggin-box">\n            <form class="well loggin-box-inner" id="login-form">\n              <img src="assets/img/logo-big.png" style="width: 96px; height: 96px;">\n              <h2>UDJ</h2>\n              <div class="alert alert-error login-error" id="login-error" style="display:none;"></div>\n              <input type="text" placeholder="Username" id="username" class="input input-medium"><br>\n              <input type="password" placeholder="Password" id="password" class="input input-medium"><br>\n              <button type="submit" class="btn btn-primary">Login</button>\n            </form>\n          </div>\n        </div>\n      </div>\n    ');
  this.addChild$1(this._loginForm);
  this._errorMessage = $.View$fromNode(this._loginForm.get$node().query$1('#login-error'));
  this.watch$2(this._state.errorMessage, this.get$_showErrorMessage());
}
};

$$.LoginState = {"": ["errorMessage?", "_historyTracking"],
 "super": "UIState"
};

$$.App = {"": [],
 "super": "Object",
 run$0: function() {
  var t1 = $.eqB($.document().get$readyState(), 'interactive') || $.eqB($.document().get$readyState(), 'complete') || $.eqB($.document().get$readyState(), 'loaded');
  var t2 = $.window;
  if (t1)
    t2().setTimeout$2(new $.App_run_anon(this), 0);
  else
    $.add$1(t2().get$on().get$contentLoaded(), $.EventBatch_wrap(new $.App_run_anon0(this)));
},
 onLoad$0: function() {
  $.add$1($.document().get$on().get$touchMove(), new $.App_onLoad_anon());
  if (this.swapAndReloadCache$0() !== true)
    $.add$1($.window().get$applicationCache().get$on().get$updateReady(), new $.App_onLoad_anon0(this));
},
 eraseSplashScreen$0: function() {
  var splash = $.document().query$1('#appSplash');
  if (!(splash == null))
    splash.remove$0();
},
 swapAndReloadCache$0: function() {
  if (!($.window().get$applicationCache().get$status() === 4))
    return false;
  $.print('App cache update ready, now swapping...');
  $.window().get$applicationCache().swapCache$0();
  $.print('App cache swapped, now reloading page...');
  $.window().get$location().reload$0();
  return true;
}
};

$$.UIState = {"": [],
 "super": "Object"
};

$$.CallbackData = {"": ["callback?", "minTime", "id?"],
 "super": "Object",
 ready$1: function(time) {
  if (typeof time !== 'number')
    return this.ready$1$bailout(1, time, 0);
  var t1 = this.minTime;
  if (typeof t1 !== 'number')
    return this.ready$1$bailout(2, time, t1);
  return t1 <= time;
},
 ready$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      var time = env0;
      break;
    case 2:
      time = env0;
      t1 = env1;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      var t1 = this.minTime;
    case 2:
      state0 = 0;
      return t1 == null || $.leB(t1, time);
  }
},
 CallbackData$2: function(callback, minTime) {
  if ($.CallbackData__nextId == null)
    $.CallbackData__nextId = 1;
  var t1 = $.CallbackData__nextId;
  $.CallbackData__nextId = $.add(t1, 1);
  this.id = t1;
}
};

$$.AnimationScheduler = {"": ["_callbacks", "_intervalId", "_isMobileSafari", "_safariHackStyle", "_frameCount", "_webkitAnimationFrameMaybeAvailable"],
 "super": "Object",
 cancelRequestAnimationFrame$1: function(id) {
  this._callbacks = $.filter(this._callbacks, new $.AnimationScheduler_cancelRequestAnimationFrame_anon(id));
},
 requestAnimationFrame$3: function(callback, element, minTime) {
  var callbackData = $.CallbackData$(callback, minTime);
  this._requestAnimationFrameHelper$1(callbackData);
  return callbackData.id;
},
 _requestAnimationFrameHelper$1: function(callbackData) {
  $.add$1(this._callbacks, callbackData);
  if (this._intervalId == null)
    this._setupInterval$0();
},
 _setupInterval$0: function() {
  if (this._webkitAnimationFrameMaybeAvailable)
    try {
      this._intervalId = $.window().webkitRequestAnimationFrame$1(new $.AnimationScheduler__setupInterval_anon(this));
    } catch (exception) {
      $.unwrapException(exception);
      this._webkitAnimationFrameMaybeAvailable = false;
    }

  if (!this._webkitAnimationFrameMaybeAvailable)
    this._intervalId = $.window().setTimeout$2(new $.AnimationScheduler__setupInterval_anon0(this), 16);
},
 _lib5_step$0: function() {
  if ($.get$isEmpty(this._callbacks) === true)
    this._intervalId = null;
  else {
    this._intervalId = null;
    this._setupInterval$0();
  }
  var minTime = $.add($.Date_Date$now().get$millisecondsSinceEpoch(), 16);
  var len = $.get$length(this._callbacks);
  for (var t1 = $.iterator(this._callbacks), numRemaining = 0; t1.get$hasNext() === true;)
    if (t1.next$0().ready$1(minTime) !== true)
      ++numRemaining;
  if (numRemaining === len)
    return;
  var currentCallbacks = this._callbacks;
  this._callbacks = $.ListImplementation_List(null);
  for (t1 = $.iterator(currentCallbacks); t1.get$hasNext() === true;) {
    var callbackData = t1.next$0();
    if (callbackData.ready$1(minTime) === true)
      try {
        callbackData.get$callback().call$1(minTime);
      } catch (exception) {
        var t2 = $.unwrapException(exception);
        var e = t2;
        var msg = $.toString(e);
        $.print('Suppressed exception ' + $.S(msg) + ' triggered by callback');
      }

    else
      $.add$1(this._callbacks, callbackData);
  }
  this._frameCount = this._frameCount + 1;
  if (this._isMobileSafari) {
    t1 = $.S($.mod(this._frameCount, 2)) + 'px';
    this._safariHackStyle.set$left(t1);
  }
},
 get$_lib5_step: function() { return new $.BoundClosure2(this, '_lib5_step$0'); },
 AnimationScheduler$0: function() {
  if (this._isMobileSafari) {
    var element = $.Element_Element$tag('div');
    $.add$1($.document().get$body().get$nodes(), element);
    this._safariHackStyle = element.get$style();
    this._safariHackStyle.set$position('absolute');
  }
}
};

$$.Size = {"": ["width=", "height="],
 "super": "Object",
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(this.width, other.get$width()) && $.eqB(this.height, other.get$height());
},
 area$0: function() {
  return $.mul(this.width, this.height);
},
 clone$0: function() {
  return $.Size$(this.width, this.height);
},
 get$isEmpty: function() {
  return $.eq(this.area$0(), 0);
},
 round$0: function() {
  this.width = $.round(this.width);
  this.height = $.round(this.height);
  return this;
},
 toString$0: function() {
  return '(' + $.S(this.width) + ' x ' + $.S(this.height) + ')';
}
};

$$.AbstractObservable = {"": ["parent?", "listeners?"],
 "super": "Object",
 get$isObserved: function() {
  for (var t1 = this.listeners, obj = this; !(obj == null); obj = obj.get$parent())
    if (t1.length > 0)
      return true;
  return false;
},
 addChangeListener$1: function(listener) {
  var t1 = this.listeners;
  if ($.eqB($.indexOf$2(t1, listener, 0), -1)) {
    t1.push(listener);
    return true;
  }
  return false;
},
 recordPropertyUpdate$3: function(propertyName, newValue, oldValue) {
  this.recordEvent$1($.ChangeEvent$property(this, propertyName, newValue, oldValue));
},
 recordListUpdate$3: function(index, newValue, oldValue) {
  this.recordEvent$1($.ChangeEvent$list(this, 0, index, newValue, oldValue));
},
 recordListInsert$2: function(index, newValue) {
  this.recordEvent$1($.ChangeEvent$list(this, 1, index, newValue, null));
},
 recordListRemove$2: function(index, oldValue) {
  this.recordEvent$1($.ChangeEvent$list(this, 2, index, null, oldValue));
},
 recordGlobalChange$0: function() {
  this.recordEvent$1($.ChangeEvent$global(this));
},
 recordEvent$1: function(event$) {
  if (this.get$isObserved() !== true)
    return;
  var t1 = $.EventBatch_current;
  if (!(t1 == null))
    t1.getEvents$1(this).addEvent$1(event$);
  else
    $.EventBatch_wrap(new $.AbstractObservable_recordEvent_anon(event$, this)).call$1(null);
}
};

$$.ObservableList = {"": ["_internal", "uid", "parent", "listeners"],
 "super": "AbstractObservable",
 operator$index$1: function(index) {
  var t1 = this._internal;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 operator$indexSet$2: function(index, value) {
  var t1 = this._internal;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  this.recordListUpdate$3(index, value, t1[index]);
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = value;
},
 get$length: function() {
  return this._internal.length;
},
 set$length: function(value) {
  $.set$length(this._internal, value);
  this.recordGlobalChange$0();
},
 clear$0: function() {
  $.clear(this._internal);
  this.recordGlobalChange$0();
},
 sort$1: function(compare) {
  $.sort$1(this._internal, compare);
  this.recordGlobalChange$0();
},
 add$1: function(element) {
  this.recordListInsert$2($.get$length(this), element);
  this._internal.push(element);
},
 addLast$1: function(element) {
  this.add$1(element);
},
 addAll$1: function(elements) {
  for (var t1 = $.iterator(elements); t1.get$hasNext() === true;)
    this.add$1(t1.next$0());
},
 get$last: function() {
  return $.get$last(this._internal);
},
 removeLast$0: function() {
  var t1 = this._internal;
  if (0 >= t1.length)
    throw $.ioore(0);
  var result = t1.pop();
  this.recordListRemove$2($.get$length(this), result);
  return result;
},
 indexOf$2: function(element, start) {
  return $.indexOf$2(this._internal, element, start);
},
 setRange$4: function(start, length$, from, startFrom) {
  throw $.$$throw($.CTC15);
},
 setRange$3: function(start,length$,from) {
  return this.setRange$4(start,length$,from,0)
},
 getRange$2: function(start, length$) {
  throw $.$$throw($.CTC15);
},
 iterator$0: function() {
  return $.iterator(this._internal);
},
 filter$1: function(f) {
  return $.filter(this._internal, f);
},
 map$1: function(f) {
  return $.map(this._internal, f);
},
 some$1: function(f) {
  return $.some(this._internal, f);
},
 forEach$1: function(f) {
  $.forEach(this._internal, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.ObservableValue = {"": ["_lib2_value?", "uid", "parent", "listeners"],
 "super": "AbstractObservable",
 get$value: function() {
  return this._lib2_value;
},
 set$value: function(newValue) {
  var t1 = this._lib2_value;
  if (!(newValue == null ? t1 == null : newValue === t1)) {
    this._lib2_value = newValue;
    this.recordPropertyUpdate$3('value', newValue, t1);
  }
}
};

$$.ChangeEvent = {"": ["target?", "type?", "newValue", "oldValue", "propertyName", "index"],
 "super": "Object"
};

$$.EventSummary = {"": ["target?", "events"],
 "super": "Object",
 addEvent$1: function(e) {
  this.events.push(e);
},
 notify$0: function() {
  if ($.get$isEmpty(this.events) !== true)
    for (var obj = this.target; !(obj == null); obj = obj.get$parent())
      for (var t1 = $.iterator(obj.get$listeners()); t1.get$hasNext() === true;)
        t1.next$0().call$1(this);
}
};

$$.EventBatch = {"": ["summaries", "sealed"],
 "super": "Object",
 getEvents$1: function(obj) {
  var uid = obj.uid;
  var t1 = this.summaries;
  var summary = t1.operator$index$1(uid);
  if (summary == null) {
    summary = $.EventSummary$(obj);
    t1.operator$indexSet$2(uid, summary);
  }
  return summary;
},
 _notify$0: function() {
  this.sealed = true;
  for (var t1 = $.iterator(this.summaries.get$values()); t1.get$hasNext() === true;)
    t1.next$0().notify$0();
}
};

$$.View = {"": ["_node", "_layout", "_resizeHandler", "customStyle?"],
 "super": "Object",
 get$node: function() {
  if (this._node == null)
    this._render$0();
  return this._node;
},
 get$childViews: function() {
  return $.CTC0;
},
 childViewAdded$1: function(child) {
  if (this.get$isInDocument() === true) {
    child._enterDocument$0();
    this.doLayout$0();
  }
},
 get$isInDocument: function() {
  return !(this._node == null) && $.contains$1(this.get$node().get$document().get$body(), this.get$node()) === true;
},
 addToDocument$1: function(parentNode) {
  this._render$0();
  $.add$1(parentNode.get$nodes(), this._node);
  this._hookGlobalLayoutEvents$0();
  this._enterDocument$0();
},
 render$0: function() {
  throw $.$$throw('abstract');
},
 afterRender$1: function(node) {
},
 enterDocument$0: function() {
},
 windowResized$0: function() {
},
 watch$2: function(observable, watcher) {
  watcher.call$1($.EventSummary$(observable));
  this.attachWatch$2(observable, watcher);
},
 attachWatch$2: function(observable, watcher) {
  observable.addChangeListener$1(watcher);
},
 get$hidden: function() {
  return $.eq(this._node.get$style().get$display(), 'none');
},
 set$hidden: function(hidden) {
  if (hidden === true)
    this.get$node().get$style().set$display('none');
  else
    this.get$node().get$style().set$display('');
},
 set$transform: function(transform) {
  this.get$node().get$style().set$transform(transform);
},
 _render$0: function() {
  if (this._node == null)
    this._node = this.render$0();
  this.afterRender$1(this._node);
},
 _enterDocument$0: function() {
  for (var t1 = $.iterator(this.get$childViews()); t1.get$hasNext() === true;)
    t1.next$0()._enterDocument$0();
  this.enterDocument$0();
},
 get$layout: function() {
  if (this._layout == null)
    this._layout = $.ViewLayout_ViewLayout$fromView(this);
  return this._layout;
},
 _hookGlobalLayoutEvents$0: function() {
  if (this._resizeHandler == null)
    this._resizeHandler = $.EventBatch_wrap(new $.View__hookGlobalLayoutEvents_anon(this));
  $.add$1($.window().get$on().get$resize(), this._resizeHandler);
  this.doLayout$0();
},
 doLayout$0: function() {
  this._measureLayout$0().then$1(new $.View_doLayout_anon(this));
},
 _measureLayout$0: function() {
  var changed = $.Completer_Completer();
  this._measureLayoutHelper$1(changed);
  $.window().requestLayoutFrame$1(new $.View__measureLayout_anon(changed));
  return changed.get$future();
},
 _measureLayoutHelper$1: function(changed) {
  this.windowResized$0();
  if ($.ViewLayout_hasCustomLayout(this) === true) {
    var sizeCompleter = $.Completer_Completer();
    this._node.get$rect().then$1(new $.View__measureLayoutHelper_anon(sizeCompleter));
    this.get$layout().measureLayout$2(sizeCompleter.get$future(), changed);
  } else
    for (var t1 = $.iterator(this.get$childViews()); t1.get$hasNext() === true;)
      t1.next$0()._measureLayoutHelper$1(changed);
},
 _applyLayoutToChildren$0: function() {
  for (var t1 = $.iterator(this.get$childViews()); t1.get$hasNext() === true;)
    t1.next$0()._applyLayout$0();
},
 _applyLayout$0: function() {
  var t1 = this._layout;
  if (!(t1 == null))
    t1.applyLayout$0();
  this._applyLayoutToChildren$0();
}
};

$$.CompositeView = {"": ["childViews?"],
 "super": "View",
 render$0: function() {
  var node = $.Element_Element$html('<div class="' + this._cssName + '"></div>');
  if (this._nestedContainer) {
    this.container = $.Element_Element$html('<div class="scroll-container"></div>');
    $.add$1(node.get$nodes(), this.container);
  } else
    this.container = node;
  if (this._scrollable) {
    var t1 = this.container;
    var t2 = this._vertical;
    this.scroller = $.Scroller$(t1, t2, !t2, true, null, 1, null, false);
    if (this._showScrollbar)
      this._scrollbar = $.Scrollbar$(this.scroller, true);
  }
  for (t1 = $.iterator(this.childViews); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    $.add$1(this.container.get$nodes(), t2.get$node());
  }
  return node;
},
 afterRender$1: function(node) {
  var t1 = this._scrollbar;
  if (!(t1 == null))
    t1.initialize$0();
},
 addChild$1: function(view) {
  this.childViews.push(view);
  var t1 = this.container;
  if (!(t1 == null))
    $.add$1(t1.get$nodes(), view.get$node());
  this.childViewAdded$1(view);
  return view;
}
};

$$.SliderMenu = {"": ["selectedItem?", "touchItem=", "onSelect", "_menuItems", "_node", "_layout", "_resizeHandler", "customStyle"],
 "super": "View",
 onSelect$1: function(arg0) { return this.onSelect.call$1(arg0); },
 render$0: function() {
  var items = $.StringBuffer_StringBuffer('');
  for (var t1 = $.iterator(this._menuItems); t1.get$hasNext() === true;)
    $.add$1(items, '<div class="sm-item">' + $.S(t1.next$0()) + '</div>');
  return $.Element_Element$html('        <div class="sm-root">\n          <div class="sm-item-box">\n            <div class="sm-item-filler"></div>\n            ' + $.S(items) + '\n            <div class="sm-item-filler"></div>\n          </div>\n          <div class="sm-slider-box">\n            <div class="sm-triangle"></div>\n          </div>\n        </div>\n        ');
},
 enterDocument$0: function() {
  this.selectItem$2(this.get$node().query$1('.sm-item'), false);
  if ($.Device_supportsTouch() === true) {
    $.add$1(this.get$node().get$on().get$touchStart(), new $.SliderMenu_enterDocument_anon(this));
    $.add$1(this.get$node().get$on().get$touchEnd(), new $.SliderMenu_enterDocument_anon0(this));
  } else
    $.add$1(this.get$node().get$on().get$click(), new $.SliderMenu_enterDocument_anon1(this));
  $.add$1($.window().get$on().get$resize(), new $.SliderMenu_enterDocument_anon2(this));
},
 itemOfTouchEvent$1: function(event$) {
  return this.itemOfNode$1($.index(event$.get$changedTouches(), 0).get$target());
},
 itemOfNode$1: function(node) {
  while (true) {
    if (!(!(node == null) && !$.eqB(node, $.document())))
      break;
    if (typeof node === 'object' && node !== null && node.is$Element())
      if ($.contains$1(node.get$classes(), 'sm-item') === true)
        return node;
    node = node.get$parent();
  }
  return;
},
 selectItemText$1: function(item) {
  for (var t1 = $.iterator(this.get$node().queryAll$1('.sm-item')); t1.get$hasNext() === true;)
    t1.next$0().get$classes().remove$1('sel');
  $.add$1(item.get$classes(), 'sel');
},
 selectItem$2: function(item, animate) {
  if ($.contains$1(item.get$classes(), 'sm-item') !== true)
    return;
  this.selectedItem = item;
  this.selectItemText$1(item);
  this.updateIndicator$1(animate);
  this.onSelect$1(item.get$text());
},
 updateIndicator$1: function(animate) {
  var t1 = this.selectedItem;
  if (!(t1 == null))
    t1.get$rect().then$1(new $.SliderMenu_updateIndicator_anon(animate, this));
  else
    this._moveIndicator$2(0, animate);
},
 _moveIndicator$2: function(x, animate) {
  var duration = animate === true ? '.3s' : '0s';
  var triangle = this.get$node().query$1('.sm-triangle');
  triangle.get$style().set$transitionDuration(duration);
  $.FxUtil_setWebkitTransform(triangle, x, 0, null, null, null, null, 0);
}
};

$$._Move = {"": ["x?", "y?", "vx?", "vy?", "time?"],
 "super": "Object"
};

$$.SingleDimensionPhysics = {"": ["customDecelerationFactor", "_minCoord", "_maxCoord", "_bouncingState", "velocity", "_currentOffset?"],
 "super": "Object",
 configure$5: function(minCoord, maxCoord, initialOffset, customDecelerationFactor_, velocity_) {
  this._bouncingState = 0;
  this._minCoord = minCoord;
  this._maxCoord = maxCoord;
  this._currentOffset = initialOffset;
  this.customDecelerationFactor = customDecelerationFactor_;
  this._adjustInitialVelocityAndBouncingState$1(velocity_);
},
 solve$3: function(initialOffset, targetOffset, customDecelerationFactor_) {
  var t1 = {};
  t1.initialOffset_1 = initialOffset;
  t1.initialOffset_1 = $.round(t1.initialOffset_1);
  targetOffset = $.round(targetOffset);
  if ($.eqB(t1.initialOffset_1, targetOffset))
    return 0;
  var t2 = new $.SingleDimensionPhysics_solve_anon(t1, this, customDecelerationFactor_);
  return $.Solver_solve(t2, targetOffset, $.gtB(targetOffset, t1.initialOffset_1) ? 20 : -20, 50);
},
 _adjustInitialVelocityAndBouncingState$1: function(v) {
  this.velocity = $.mul($.mul(v, 16.666666666666668), 1.25);
  if ($.ltB($.abs(this.velocity), 4.166666666666667)) {
    var t1 = this._minCoord;
    if (!(t1 == null) && $.ltB(this._currentOffset, t1)) {
      this.velocity = $.mul($.sub(this._minCoord, this._currentOffset), 0.11666666666666667);
      this.velocity = $.max(this.velocity, 0.16666666666666669);
      this._bouncingState = 2;
    } else {
      t1 = this._maxCoord;
      if (!(t1 == null) && $.gtB(this._currentOffset, t1)) {
        this.velocity = $.mul($.sub(this._currentOffset, this._maxCoord), 0.11666666666666667);
        this.velocity = -$.max(this.velocity, 0.16666666666666669);
        this._bouncingState = 2;
      }
    }
  }
},
 _adjustVelocity$0: function() {
  var speed = $.abs(this.velocity);
  this.velocity = $.mul(this.velocity, 0.97);
  var t1 = this.customDecelerationFactor;
  if (!(t1 == null))
    this.velocity = $.mul(this.velocity, t1);
  if ($.ltB(speed, 1.3333333333333335))
    this.velocity = $.mul(this.velocity, 0.92);
  t1 = this._minCoord;
  if (!(t1 == null) && $.ltB(this._currentOffset, t1))
    var stretchDistance = $.sub(this._minCoord, this._currentOffset);
  else {
    t1 = this._maxCoord;
    stretchDistance = !(t1 == null) && $.gtB(this._currentOffset, t1) ? $.sub(this._maxCoord, this._currentOffset) : null;
  }
  if (!(stretchDistance == null))
    if ($.ltB($.mul(stretchDistance, this.velocity), 0)) {
      this._bouncingState = this._bouncingState === 2 ? 0 : 1;
      this.velocity = $.add(this.velocity, $.mul(stretchDistance, 0.11666666666666667));
    } else {
      this._bouncingState = 2;
      this.velocity = $.gtB(stretchDistance, 0) ? $.max($.mul(stretchDistance, 0.11666666666666667), 0.16666666666666669) : $.min($.mul(stretchDistance, 0.11666666666666667), -0.16666666666666669);
    }
  else
    this._bouncingState = 0;
},
 step$0: function() {
  var t1 = this.velocity;
  if (!(t1 == null)) {
    this._currentOffset = $.add(this._currentOffset, t1);
    this._adjustVelocity$0();
  }
},
 stepAll$0: function() {
  for (; this.isDone$0() !== true;)
    this.step$0();
},
 isVelocityAboveThreshold$1: function(threshold) {
  return $.ge($.abs(this.velocity), threshold);
},
 isDone$0: function() {
  return this._bouncingState === 0 && this.isVelocityAboveThreshold$1(0.16666666666666669) !== true;
}
};

$$.TimeoutMomentum = {"": ["physicsX", "physicsY", "_previousOffset", "_moves", "_stepTimeout", "_decelerating", "_delegate", "_nextY", "_nextX", "_minCoord", "_maxCoord", "_customDecelerationFactor", "_defaultDecelerationFactor"],
 "super": "Object",
 _calculateMoves$0: function() {
  var t1 = this._moves;
  $.clear(t1);
  var time = $.Date_Date$now().get$millisecondsSinceEpoch();
  if (typeof time !== 'number')
    return this._calculateMoves$0$bailout(1, time, t1);
  var t2 = this.physicsX;
  var t3 = this.physicsY;
  while (true) {
    if (!(t2.isDone$0() !== true || t3.isDone$0() !== true))
      break;
    this._stepWithoutAnimation$0();
    time += 16.666666666666668;
    if (this._isStepNecessary$0() === true) {
      $.add$1(t1, $._Move$(this._nextX, this._nextY, t2.velocity, t3.velocity, time));
      var t4 = this._nextY;
      this._previousOffset.set$y(t4);
      t4 = this._nextX;
      this._previousOffset.set$x(t4);
    }
  }
},
 _calculateMoves$0$bailout: function(state0, time, t1) {
  var t2 = this.physicsX;
  var t3 = this.physicsY;
  while (true) {
    if (!(t2.isDone$0() !== true || t3.isDone$0() !== true))
      break;
    this._stepWithoutAnimation$0();
    time = $.add(time, 16.666666666666668);
    if (this._isStepNecessary$0() === true) {
      $.add$1(t1, $._Move$(this._nextX, this._nextY, t2.velocity, t3.velocity, time));
      var t4 = this._nextY;
      this._previousOffset.set$y(t4);
      t4 = this._nextX;
      this._previousOffset.set$x(t4);
    }
  }
},
 get$decelerating: function() {
  return this._decelerating;
},
 get$decelerationFactor: function() {
  return this._customDecelerationFactor;
},
 _isStepNecessary$0: function() {
  return !$.eqB(this._nextY, this._previousOffset.get$y()) || !$.eqB(this._nextX, this._previousOffset.get$x());
},
 calculateVelocity$3: function(start_, target, decelerationFactor) {
  return $.Coordinate$(this.physicsX.solve$3(start_.get$x(), target.get$x(), decelerationFactor), this.physicsY.solve$3(start_.get$y(), target.get$y(), decelerationFactor));
},
 start$5: function(velocity, minCoord, maxCoord, initialOffset, decelerationFactor) {
  this._customDecelerationFactor = this._defaultDecelerationFactor;
  if (!(decelerationFactor == null))
    this._customDecelerationFactor = decelerationFactor;
  var t1 = this._stepTimeout;
  if (!(t1 == null)) {
    $.Env_cancelRequestAnimationFrame(t1);
    this._stepTimeout = null;
  }
  this._previousOffset = initialOffset.clone$0();
  t1 = this.physicsX;
  t1.configure$5(minCoord.get$x(), maxCoord.get$x(), initialOffset.get$x(), this._customDecelerationFactor, velocity.get$x());
  var t2 = this.physicsY;
  t2.configure$5(minCoord.get$y(), maxCoord.get$y(), initialOffset.get$y(), this._customDecelerationFactor, velocity.get$y());
  if (t1.isDone$0() !== true || t2.isDone$0() !== true) {
    this._calculateMoves$0();
    t1 = this._moves;
    if ($.get$isEmpty(t1) !== true) {
      var firstTime = t1.get$first().get$time();
      this._stepTimeout = $.Env_requestAnimationFrame(this.get$_step(), null, firstTime);
      this._decelerating = true;
      return true;
    }
  }
  this._decelerating = false;
  return false;
},
 get$start: function() { return new $.BoundClosure4(this, 'start$5'); },
 _stepWithoutAnimation$0: function() {
  var t1 = this.physicsX;
  t1.step$0();
  var t2 = this.physicsY;
  t2.step$0();
  this._nextX = $.toInt($.round(t1._currentOffset));
  this._nextY = $.toInt($.round(t2._currentOffset));
},
 _step$1: function(timestamp) {
  if (typeof timestamp !== 'number')
    return this._step$1$bailout(1, timestamp, 0, 0);
  this._stepTimeout = null;
  var lastEpoch = timestamp - 16.666666666666668;
  var t1 = this._moves;
  while (true) {
    if ($.get$isEmpty(t1) !== true) {
      var t2 = t1.get$first();
      var t3 = $.get$last(t1);
      if (!(t2 == null ? t3 == null : t2 === t3)) {
        t2 = t1.get$first().get$time();
        if (typeof t2 !== 'number')
          return this._step$1$bailout(2, t1, t2, lastEpoch);
        t2 = t2 < lastEpoch;
      } else
        t2 = false;
    } else
      t2 = false;
    if (!t2)
      break;
    t1.removeFirst$0();
  }
  if ($.get$isEmpty(t1) !== true) {
    var move = t1.removeFirst$0();
    this._delegate.onDecelerate$2(move.get$x(), move.get$y());
    if ($.get$isEmpty(t1) !== true) {
      var nextTime = t1.get$first().get$time();
      this._stepTimeout = $.Env_requestAnimationFrame(this.get$_step(), null, nextTime);
    } else
      this.stop$0();
  }
},
 _step$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      var timestamp = env0;
      break;
    case 2:
      t1 = env0;
      t2 = env1;
      lastEpoch = env2;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      this._stepTimeout = null;
      var lastEpoch = $.sub(timestamp, 16.666666666666668);
      var t1 = this._moves;
    case 2:
      L0:
        while (true)
          switch (state0) {
            case 0:
            case 2:
              if (state0 === 2 || state0 === 0 && $.get$isEmpty(t1) !== true)
                switch (state0) {
                  case 0:
                    var t2 = t1.get$first();
                    var t3 = $.get$last(t1);
                  case 2:
                    if (state0 === 2 || state0 === 0 && !(t2 == null ? t3 == null : t2 === t3))
                      switch (state0) {
                        case 0:
                          t2 = t1.get$first().get$time();
                        case 2:
                          state0 = 0;
                          t2 = $.ltB(t2, lastEpoch);
                      }
                    else
                      t2 = false;
                }
              else
                t2 = false;
              if (!t2)
                break L0;
              t1.removeFirst$0();
          }
      if ($.get$isEmpty(t1) !== true) {
        var move = t1.removeFirst$0();
        this._delegate.onDecelerate$2(move.get$x(), move.get$y());
        if ($.get$isEmpty(t1) !== true) {
          var nextTime = t1.get$first().get$time();
          this._stepTimeout = $.Env_requestAnimationFrame(this.get$_step(), null, nextTime);
        } else
          this.stop$0();
      }
  }
},
 get$_step: function() { return new $.BoundClosure1(this, '_step$1'); },
 abort$0: function() {
  this._decelerating = false;
  $.clear(this._moves);
  var t1 = this._stepTimeout;
  if (!(t1 == null)) {
    $.Env_cancelRequestAnimationFrame(t1);
    this._stepTimeout = null;
  }
},
 stop$0: function() {
  var wasDecelerating = this._decelerating;
  this._decelerating = false;
  var t1 = this._moves;
  if ($.get$isEmpty(t1) !== true) {
    var move = t1.get$first();
    var velocity = $.Coordinate$($.div(move.get$vx(), 20.833333333333336), $.div(move.get$vy(), 20.833333333333336));
  } else
    velocity = $.Coordinate$(0, 0);
  $.clear(t1);
  t1 = this._stepTimeout;
  if (!(t1 == null)) {
    $.Env_cancelRequestAnimationFrame(t1);
    this._stepTimeout = null;
  }
  if (wasDecelerating)
    this._delegate.onDecelerationEnd$0();
  return velocity;
},
 get$destination: function() {
  var t1 = this._moves;
  if ($.get$isEmpty(t1) !== true) {
    var lastMove = $.get$last(t1);
    return $.Coordinate$(lastMove.get$x(), lastMove.get$y());
  } else
    return;
}
};

$$.Scroller = {"": ["_lib4_element?", "_frame?", "_touchHandler", "_momentum?", "_onScrollerStart?", "_onScrollerEnd?", "_onScrollerDragEnd", "_onContentMoved", "_onDecelStart", "verticalEnabled?", "horizontalEnabled?", "_momentumEnabled", "_scrollTechnique", "_maxPoint=", "_maxOffset?", "_minOffset?", "_contentOffset?", "_setOffsetFunction", "_lookupContentSizeDelegate", "_scrollSize=", "_contentSize!", "_minPoint=", "_isStopping", "_contentStartOffset!", "_started", "_activeGesture", "_scrollWatcher"],
 "super": "Object",
 _onScrollerStart$1: function(arg0) { return this._onScrollerStart.call$1(arg0); },
 _onScrollerEnd$1: function(arg0) { return this._onScrollerEnd.call$1(arg0); },
 _onContentMoved$1: function(arg0) { return this._onContentMoved.call$1(arg0); },
 _setOffsetFunction$3: function(arg0, arg1, arg2) { return this._setOffsetFunction.call$3(arg0, arg1, arg2); },
 _lookupContentSizeDelegate$0: function() { return this._lookupContentSizeDelegate.call$0(); },
 get$onScrollerStart: function() {
  if (this._onScrollerStart == null)
    this._onScrollerStart = $.SimpleEventListenerList$();
  return this._onScrollerStart;
},
 get$onScrollerEnd: function() {
  if (this._onScrollerEnd == null)
    this._onScrollerEnd = $.SimpleEventListenerList$();
  return this._onScrollerEnd;
},
 get$onScrollerDragEnd: function() {
  if (this._onScrollerDragEnd == null)
    this._onScrollerDragEnd = $.SimpleEventListenerList$();
  return this._onScrollerDragEnd;
},
 get$onContentMoved: function() {
  if (this._onContentMoved == null)
    this._onContentMoved = $.SimpleEventListenerList$();
  return this._onContentMoved;
},
 get$onDecelStart: function() {
  if (this._onDecelStart == null)
    this._onDecelStart = $.SimpleEventListenerList$();
  return this._onDecelStart;
},
 addScrollListener$1: function(listener) {
  if (this._scrollWatcher == null) {
    this._scrollWatcher = $.ScrollWatcher$(this);
    this._scrollWatcher.initialize$0();
  }
  this._scrollWatcher.addListener$1(listener);
},
 _adjustValue$3: function(newPosition, minPosition, maxPosition) {
  if ($.ltB(newPosition, minPosition))
    newPosition = $.sub(newPosition, $.div($.sub(newPosition, minPosition), 2));
  else if ($.gtB(newPosition, maxPosition))
    newPosition = $.sub(newPosition, $.div($.sub(newPosition, maxPosition), 2));
  return newPosition;
},
 get$currentTarget: function() {
  var end = this._momentum.get$destination();
  return end == null ? this._contentOffset : end;
},
 throwTo$3: function(x, y, decelerationFactor) {
  var t1 = {};
  t1.decelerationFactor_1 = decelerationFactor;
  this.reconfigure$1(new $.Scroller_throwTo_anon(x, t1, y, this));
},
 throwDelta$3: function(deltaX, deltaY, decelerationFactor) {
  var start = this._contentOffset;
  var end = this.get$currentTarget();
  var x = $.toInt(end.get$x());
  var y = $.toInt(end.get$y());
  if (!$.eqB(deltaX, 0) && !$.eqB($.get$isNegative(deltaX), $.get$isNegative($.sub(end.get$x(), start.x))))
    x = start.x;
  if (!$.eqB(deltaY, 0) && !$.eqB($.get$isNegative(deltaY), $.get$isNegative($.sub(end.get$y(), start.y))))
    y = start.y;
  this.throwTo$3($.add(x, $.toInt(deltaX)), $.add(y, $.toInt(deltaY)), decelerationFactor);
},
 throwDelta$2: function(deltaX,deltaY) {
  return this.throwDelta$3(deltaX,deltaY,null)
},
 setPosition$2: function(x, y) {
  this._momentum.abort$0();
  var t1 = this._contentOffset;
  t1.x = x;
  t1.y = y;
  this._snapContentOffsetToBounds$0();
  this._setContentOffset$2(t1.x, t1.y);
},
 _getAdjustedContentSize$0: function() {
  return $.Size$($.max(this._scrollSize.get$width(), this._contentSize.get$width()), $.max(this._scrollSize.get$height(), this._contentSize.get$height()));
},
 getElement$0: function() {
  return this._lib4_element;
},
 getFrame$0: function() {
  return this._frame;
},
 getHorizontalOffset$0: function() {
  return this._contentOffset.x;
},
 getHorizontalScrollPercent$1: function(x) {
  x = !(x == null) ? x : this._contentOffset.x;
  return $.div($.sub(x, this._minPoint.get$x()), $.sub(this._maxPoint.get$x(), this._minPoint.get$x()));
},
 getVerticalOffset$0: function() {
  return this._contentOffset.y;
},
 getVerticalScrollPercent$1: function(y) {
  y = !(y == null) ? y : this._contentOffset.y;
  return $.div($.sub(y, this._minPoint.get$y()), $.max(1, $.sub(this._maxPoint.get$y(), this._minPoint.get$y())));
},
 _initLayer$0: function() {
  this._setContentOffset$2(this._maxPoint.get$x(), this._maxPoint.get$y());
},
 onDecelerate$2: function(x, y) {
  this._setContentOffset$2(x, y);
},
 onDecelerationEnd$0: function() {
  this.get$onScrollerEnd().dispatch$1($.Event_Event('scroller:scroll_end', true, true));
  this._started = false;
},
 onDragEnd$0: function() {
  $.Scroller__dragInProgress = false;
  var decelerating = this._activeGesture && this._momentumEnabled === true && this._startDeceleration$1(this._touchHandler.getEndVelocity$0());
  this.get$onScrollerDragEnd().dispatch$1($.Event_Event('scroller:drag_end', true, true));
  if (decelerating !== true) {
    this._snapContentOffsetToBounds$0();
    this.get$onScrollerEnd().dispatch$1($.Event_Event('scroller:scroll_end', true, true));
    this._started = false;
  } else
    this.get$onDecelStart().dispatch$1($.Event_Event('scroller:decel_start', true, true));
  this._activeGesture = false;
},
 onDragMove$0: function() {
  if (!this._isStopping)
    var t1 = !this._activeGesture && $.Scroller__dragInProgress === true;
  else
    t1 = true;
  if (t1)
    return;
  var contentStart = this._contentStartOffset;
  var newX = $.add(contentStart.get$x(), this._touchHandler.getDragDeltaX$0());
  var newY = $.add(contentStart.get$y(), this._touchHandler.getDragDeltaY$0());
  newY = this._shouldScrollVertically$0() === true ? this._adjustValue$3(newY, this._minPoint.get$y(), this._maxPoint.get$y()) : 0;
  newX = this._shouldScrollHorizontally$0() === true ? this._adjustValue$3(newX, this._minPoint.get$x(), this._maxPoint.get$x()) : 0;
  if (!this._activeGesture) {
    this._activeGesture = true;
    $.Scroller__dragInProgress = true;
  }
  if (!this._started) {
    this._started = true;
    this.get$onScrollerStart().dispatch$1($.Event_Event('scroller:scroll_start', true, true));
  }
  this._setContentOffset$2(newX, newY);
},
 onDragStart$1: function(e) {
  if ($.gtB($.get$length(e.get$touches()), 1))
    return false;
  var shouldHorizontal = this._shouldScrollHorizontally$0();
  var shouldVertical = this._shouldScrollVertically$0();
  var verticalish = $.gtB($.abs(this._touchHandler.getDragDeltaY$0()), $.abs(this._touchHandler.getDragDeltaX$0()));
  if (shouldVertical !== true)
    var t1 = shouldHorizontal === true && !verticalish;
  else
    t1 = true;
  return t1;
},
 onTouchEnd$0: function() {
},
 onTouchStart$1: function(e) {
  this.reconfigure$1(new $.Scroller_onTouchStart_anon(this, e));
  return true;
},
 reconfigure$1: function(callback) {
  this._resize$1(new $.Scroller_reconfigure_anon(callback, this));
},
 reset$0: function() {
  this.stop$0();
  this._touchHandler.reset$0();
  var t1 = this._maxOffset;
  t1.x = 0;
  t1.y = 0;
  t1 = this._minOffset;
  t1.x = 0;
  t1.y = 0;
  this.reconfigure$1(new $.Scroller_reset_anon(this));
},
 _resize$1: function(callback) {
  var frameRect = this._frame.get$rect();
  if (!(this._lookupContentSizeDelegate == null)) {
    var contentSizeFuture = this._lookupContentSizeDelegate$0();
    contentSizeFuture.then$1(new $.Scroller__resize_anon(this));
  } else {
    contentSizeFuture = this._lib4_element.get$rect();
    contentSizeFuture.then$1(new $.Scroller__resize_anon0(this));
  }
  $.joinFutures([frameRect, contentSizeFuture], new $.Scroller__resize_anon1(frameRect, callback, this));
},
 _snapToBounds$2: function(x, y) {
  var t1 = this._minPoint.get$x();
  var t2 = this._maxPoint.get$x();
  var clampX = $.min($.max(t1, x), t2);
  t2 = this._minPoint.get$y();
  var t3 = this._maxPoint.get$y();
  return $.Coordinate$(clampX, $.min($.max(t2, y), t3));
},
 _setContentOffset$2: function(x, y) {
  var t1 = this._contentOffset;
  t1.x = x;
  t1.y = y;
  this._setOffsetFunction$3(this._lib4_element, x, y);
  this.get$onContentMoved().dispatch$1($.Event_Event('scroller:content_moved', true, true));
},
 _shouldScrollHorizontally$0: function() {
  return this.horizontalEnabled === true && $.ltB(this._scrollSize.get$width(), this._contentSize.get$width());
},
 _shouldScrollVertically$0: function() {
  return this.verticalEnabled;
},
 _snapContentOffsetToBounds$0: function() {
  var t1 = this._minPoint.get$x();
  var t2 = this._contentOffset;
  var t3 = t2.x;
  var t4 = this._maxPoint.get$x();
  var clampX = $.min($.max(t1, t3), t4);
  t4 = this._minPoint.get$y();
  var t5 = t2.y;
  var t6 = this._maxPoint.get$y();
  var clampY = $.min($.max(t4, t5), t6);
  if (!$.eqB(t2.x, clampX) || !$.eqB(t2.y, clampY))
    this._setContentOffset$2(clampX, clampY);
},
 _startDeceleration$2: function(velocity, decelerationFactor) {
  if (this._shouldScrollHorizontally$0() !== true)
    velocity.set$x(0);
  if (this._shouldScrollVertically$0() !== true)
    velocity.set$y(0);
  return this._momentum.start$5(velocity, this._minPoint, this._maxPoint, this._contentOffset, decelerationFactor);
},
 _startDeceleration$1: function(velocity) {
  return this._startDeceleration$2(velocity,null)
},
 stop$0: function() {
  return this._momentum.stop$0();
},
 Scroller$8: function(scrollableElem, verticalEnabled, horizontalEnabled, momentumEnabled, lookupContentSizeDelegate, defaultDecelerationFactor, scrollTechnique, capture) {
  this._touchHandler = $.TouchHandler$(this, scrollableElem.get$parent());
  this._momentum = $.TimeoutMomentum$(this, defaultDecelerationFactor);
  scrollableElem.get$parent();
  var t1 = this._scrollTechnique;
  this._setOffsetFunction = $.Scroller__getOffsetFunction(t1);
  this._touchHandler.setDraggable$1(this);
  this._touchHandler.enable$1(capture);
  var t2 = this._frame;
  $.add$1(t2.get$on().get$mouseWheel(), new $.anon0(this));
  $.add$1(t2.get$on().get$keyDown(), new $.anon1(this));
  if ($.eqB(t1, 2))
    this._lib4_element.get$computedStyle().then$1(new $.anon2());
  this._initLayer$0();
}
};

$$.SimpleEventListenerList = {"": ["_listeners"],
 "super": "Object",
 add$2: function(handler, useCapture) {
  this._lib4_add$2(handler, useCapture);
  return this;
},
 add$1: function(handler) {
  return this.add$2(handler,false)
},
 remove$2: function(handler, useCapture) {
  this._lib4_remove$2(handler, useCapture);
  return this;
},
 remove$1: function(handler) {
  return this.remove$2(handler,false)
},
 _lib4_add$2: function(handler, useCapture) {
  this._listeners.push(handler);
},
 _lib4_remove$2: function(handler, useCapture) {
  throw $.$$throw('Not implemented yet.');
},
 dispatch$1: function(evt) {
  for (var t1 = $.iterator(this._listeners); t1.get$hasNext() === true;)
    t1.next$0().call$1(evt);
}
};

$$.TouchHandler = {"": ["_touchable", "_lib4_element?", "_totalMoveY", "_totalMoveX", "_recentTouchesX", "_recentTouchesY", "_draggable", "_tracking", "_dragging", "_touching", "_startTouchX", "_startTouchY", "_startTime", "_lastEvent", "_lastTouchX", "_lastTouchY", "_lastMoveX", "_lastMoveY", "_endTime", "_endTouchX", "_endTouchY"],
 "super": "Object",
 _beginTracking$0: function() {
  this._tracking = true;
},
 _endTracking$0: function() {
  this._tracking = false;
  this._dragging = false;
  this._totalMoveY = 0;
  this._totalMoveX = 0;
},
 _correctVelocity$1: function(velocity) {
  var absVelocity = $.abs(velocity);
  if ($.gtB(absVelocity, 5))
    absVelocity = $.ltB($.get$length(this._recentTouchesY), 6) ? 1 : 5;
  var t1 = $.ltB(velocity, 0) ? -1 : 1;
  return $.mul(absVelocity, t1);
},
 enable$1: function(capture) {
  var onEnd = new $.TouchHandler_enable_anon(this);
  $._addEventListeners(this._lib4_element, new $.TouchHandler_enable_anon0(this), new $.TouchHandler_enable_anon1(this), onEnd, onEnd, capture);
},
 getDragDeltaX$0: function() {
  return $.sub(this._lastTouchX, this._startTouchX);
},
 getDragDeltaY$0: function() {
  return $.sub(this._lastTouchY, this._startTouchY);
},
 getEndVelocity$0: function() {
  if ($.gtB($.get$length(this._recentTouchesX), 0)) {
    var timeDeltaX = $.max(1, $.sub(this._endTime, $.index(this._recentTouchesX, 1)));
    var velocityX = $.div($.sub(this._endTouchX, $.index(this._recentTouchesX, 0)), timeDeltaX);
  } else
    velocityX = 0;
  if ($.gtB($.get$length(this._recentTouchesY), 0)) {
    var timeDeltaY = $.max(1, $.sub(this._endTime, $.index(this._recentTouchesY, 1)));
    var velocityY = $.div($.sub(this._endTouchY, $.index(this._recentTouchesY, 0)), timeDeltaY);
  } else
    velocityY = 0;
  return $.Coordinate$(this._correctVelocity$1(velocityX), this._correctVelocity$1(velocityY));
},
 _getLastTouch$0: function() {
  return $.index(this._lastEvent.get$touches(), 0);
},
 _onEnd$2: function(timeStamp, e) {
  this._touching = false;
  this._touchable.onTouchEnd$0();
  if (!this._tracking || this._draggable == null)
    return;
  var touch = this._getLastTouch$0();
  var clientX = touch.get$clientX();
  var clientY = touch.get$clientY();
  if (this._dragging === true) {
    this._endTime = timeStamp;
    this._endTouchX = clientX;
    this._endTouchY = clientY;
    this._recentTouchesX = this._removeOldTouches$2(this._recentTouchesX, timeStamp);
    this._recentTouchesY = this._removeOldTouches$2(this._recentTouchesY, timeStamp);
    this._draggable.onDragEnd$0();
    if (!(e == null))
      e.preventDefault$0();
    $.ClickBuster_preventGhostClick(this._startTouchX, this._startTouchY);
  }
  this._endTracking$0();
},
 get$_onEnd: function() { return new $.BoundClosure5(this, '_onEnd$2'); },
 _onMove$1: function(e) {
  if (!this._tracking || this._draggable == null)
    return;
  var touch = $.index(e.get$touches(), 0);
  var clientX = touch.get$clientX();
  var clientY = touch.get$clientY();
  var moveX = $.sub(this._lastTouchX, clientX);
  var moveY = $.sub(this._lastTouchY, clientY);
  var t1 = this._totalMoveX;
  var t2 = $.abs(moveX);
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  this._totalMoveX = t1 + t2;
  var t3 = this._totalMoveY;
  var t4 = $.abs(moveY);
  if (typeof t4 !== 'number')
    throw $.iae(t4);
  this._totalMoveY = t3 + t4;
  this._lastTouchX = clientX;
  this._lastTouchY = clientY;
  if (this._dragging !== true)
    if (!(this._totalMoveY > 2 && this._draggable.get$verticalEnabled() === true))
      t1 = this._totalMoveX > 2 && this._draggable.get$horizontalEnabled() === true;
    else
      t1 = true;
  else
    t1 = false;
  if (t1) {
    this._dragging = this._draggable.onDragStart$1(e);
    if (this._dragging !== true)
      this._endTracking$0();
    else {
      this._startTouchX = clientX;
      this._startTouchY = clientY;
      this._startTime = e.get$timeStamp();
    }
  }
  if (this._dragging === true) {
    this._draggable.onDragMove$0();
    this._lastEvent = e;
    e.preventDefault$0();
    this._recentTouchesX = this._removeTouchesInWrongDirection$3(this._recentTouchesX, this._lastMoveX, moveX);
    this._recentTouchesY = this._removeTouchesInWrongDirection$3(this._recentTouchesY, this._lastMoveY, moveY);
    this._recentTouchesX = this._removeOldTouches$2(this._recentTouchesX, e.get$timeStamp());
    this._recentTouchesY = this._removeOldTouches$2(this._recentTouchesY, e.get$timeStamp());
    $.add$1(this._recentTouchesX, clientX);
    $.add$1(this._recentTouchesX, e.get$timeStamp());
    $.add$1(this._recentTouchesY, clientY);
    $.add$1(this._recentTouchesY, e.get$timeStamp());
  }
  this._lastMoveX = moveX;
  this._lastMoveY = moveY;
},
 get$_onMove: function() { return new $.BoundClosure1(this, '_onMove$1'); },
 _onStart$1: function(e) {
  if (this._touching)
    return;
  this._touching = true;
  if (this._touchable.onTouchStart$1(e) !== true || this._draggable == null)
    return;
  var touch = $.index(e.get$touches(), 0);
  var t1 = touch.get$clientX();
  this._lastTouchX = t1;
  this._startTouchX = t1;
  t1 = touch.get$clientY();
  this._lastTouchY = t1;
  this._startTouchY = t1;
  this._startTime = e.get$timeStamp();
  this._recentTouchesX = $.ListImplementation_List(null);
  this._recentTouchesY = $.ListImplementation_List(null);
  $.add$1(this._recentTouchesX, touch.get$clientX());
  $.add$1(this._recentTouchesX, e.get$timeStamp());
  $.add$1(this._recentTouchesY, touch.get$clientY());
  $.add$1(this._recentTouchesY, e.get$timeStamp());
  this._lastEvent = e;
  this._beginTracking$0();
},
 get$_onStart: function() { return new $.BoundClosure1(this, '_onStart$1'); },
 _removeOldTouches$2: function(recentTouches, recentTime) {
  if (typeof recentTouches !== 'string' && (typeof recentTouches !== 'object' || recentTouches === null || recentTouches.constructor !== Array && !recentTouches.is$JavaScriptIndexingBehavior()))
    return this._removeOldTouches$2$bailout(1, recentTouches, recentTime);
  if (typeof recentTime !== 'number')
    return this._removeOldTouches$2$bailout(1, recentTouches, recentTime);
  var len = recentTouches.length;
  var count = 0;
  while (true) {
    if (count < len) {
      var t1 = count + 1;
      if (t1 >= len)
        throw $.ioore(t1);
      t1 = recentTouches[t1];
      if (typeof t1 !== 'number')
        throw $.iae(t1);
      var t2 = recentTime - t1 > 250;
      t1 = t2;
    } else
      t1 = false;
    if (!(t1 || len - count > 10))
      break;
    count += 2;
  }
  if (count === 0)
    t1 = recentTouches;
  else
    t1 = $.TouchHandler__removeFirstN(recentTouches, count);
  return t1;
},
 _removeOldTouches$2$bailout: function(state0, recentTouches, recentTime) {
  var len = $.get$length(recentTouches);
  var count = 0;
  while (true) {
    if (!($.ltB(count, len) && $.gtB($.sub(recentTime, $.index(recentTouches, count + 1)), 250) || $.gtB($.sub(len, count), 10)))
      break;
    count += 2;
  }
  return count === 0 ? recentTouches : $.TouchHandler__removeFirstN(recentTouches, count);
},
 _removeTouchesInWrongDirection$3: function(recentTouches, lastMove, recentMove) {
  if (!$.eqB(lastMove, 0) && !$.eqB(recentMove, 0) && $.gtB($.get$length(recentTouches), 2) && $.TouchHandler__xor($.gt(lastMove, 0), $.gt(recentMove, 0)))
    return $.TouchHandler__removeFirstN(recentTouches, $.sub($.get$length(recentTouches), 2));
  return recentTouches;
},
 reset$0: function() {
  this._endTracking$0();
  this._touching = false;
},
 setDraggable$1: function(draggable) {
  this._draggable = draggable;
},
 TouchHandler$2: function(touchable, element) {
  this._lib4_element = !(element == null) ? element : touchable.getElement$0();
}
};

$$.Coordinate = {"": ["x=", "y="],
 "super": "Object",
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(this.x, other.get$x()) && $.eqB(this.y, other.get$y());
},
 clone$0: function() {
  return $.Coordinate$(this.x, this.y);
},
 toString$0: function() {
  return '(' + $.S(this.x) + ', ' + $.S(this.y) + ')';
}
};

$$.Scrollbar = {"": ["_scroller?", "_frame?", "_scrollInProgress?", "_scrollBarDragInProgressValue", "_cachedSize", "_boundHideFn", "_verticalElement", "_horizontalElement", "_currentScrollStartMouse", "_currentScrollStartOffset", "_currentScrollVertical", "_currentScrollRatio", "_timerId?", "_displayOnHover", "_hovering="],
 "super": "Object",
 _boundHideFn$0: function() { return this._boundHideFn.call$0(); },
 get$_scrollBarDragInProgress: function() {
  return this._scrollBarDragInProgressValue;
},
 set$_scrollBarDragInProgress: function(value) {
  this._scrollBarDragInProgressValue = value;
  var t1 = this._verticalElement;
  var t2 = value === true;
  this._toggleClass$3(t1, 'drag', t2 && this._currentScrollVertical === true);
  t1 = this._horizontalElement;
  this._toggleClass$3(t1, 'drag', t2 && this._currentScrollVertical !== true);
},
 _toggleClass$3: function(e, className, enabled) {
  if (enabled) {
    if ($.contains$1(e.get$classes(), className) !== true)
      $.add$1(e.get$classes(), className);
  } else
    e.get$classes().remove$1(className);
},
 initialize$0: function() {
  if (!(this._verticalElement == null))
    return;
  this._verticalElement = $.Element_Element$html('<div class="touch-scrollbar touch-scrollbar-vertical"></div>');
  this._horizontalElement = $.Element_Element$html('<div class="touch-scrollbar touch-scrollbar-horizontal"></div>');
  var t1 = this._scroller;
  t1.addScrollListener$1(this);
  var scrollerEl = t1.getElement$0();
  if ($.Device_supportsTouch() !== true) {
    var t2 = this._verticalElement;
    var t3 = this.get$_onStart();
    var t4 = this.get$_onMove();
    var t5 = this.get$_onEnd();
    $._addEventListeners(t2, t3, t4, t5, t5, true);
    t5 = this._horizontalElement;
    t4 = this.get$_onStart();
    t3 = this.get$_onMove();
    t2 = this.get$_onEnd();
    $._addEventListeners(t5, t4, t3, t2, t2, true);
  }
  t1.addScrollListener$1(this);
  this._showScrollbars$1(false);
  $.add$1(t1.get$onScrollerStart(), this.get$_onScrollerStart());
  $.add$1(t1.get$onScrollerEnd(), this.get$_onScrollerEnd());
  if (this._displayOnHover === true) {
    t1 = this._frame;
    t1.get$on().get$click().add$2(new $.Scrollbar_initialize_anon(this, scrollerEl), false);
    t1.get$on().get$mouseOver().add$2(new $.Scrollbar_initialize_anon0(this, scrollerEl), false);
    t1.get$on().get$mouseOut().add$2(new $.Scrollbar_initialize_anon1(this), false);
  }
},
 _onStart$1: function(e) {
  var elementOver = e.get$target();
  if ($.eqB(elementOver, this._verticalElement) || $.eqB(elementOver, this._horizontalElement)) {
    this._currentScrollVertical = $.eq(elementOver, this._verticalElement);
    var t1 = this._currentScrollVertical === true;
    var t2 = this._scroller;
    if (t1) {
      this._currentScrollStartMouse = e.get$pageY();
      this._currentScrollStartOffset = t2.getVerticalOffset$0();
    } else {
      this._currentScrollStartMouse = e.get$pageX();
      this._currentScrollStartOffset = t2.getHorizontalOffset$0();
    }
    this._refreshScrollRatio$0();
    this.set$_scrollBarDragInProgress(true);
    this._scroller.get$_momentum().abort$0();
    e.stopPropagation$0();
  }
},
 get$_onStart: function() { return new $.BoundClosure1(this, '_onStart$1'); },
 _refreshScrollRatio$0: function() {
  var t1 = this._scroller;
  var contentSize = t1._getAdjustedContentSize$0();
  var t2 = this._currentScrollVertical === true;
  t1 = t1.get$_scrollSize();
  if (t2)
    this._refreshScrollRatioHelper$2(t1.get$height(), contentSize.get$height());
  else
    this._refreshScrollRatioHelper$2(t1.get$width(), contentSize.get$width());
},
 _refreshScrollRatioHelper$2: function(frameSize, contentSize) {
  var frameTravelDistance = $.sub($.sub(frameSize, this._defaultScrollSize$2(frameSize, contentSize)), 20);
  if ($.ltB(frameTravelDistance, 0.001))
    this._currentScrollRatio = 0;
  else
    this._currentScrollRatio = $.div($.sub(contentSize, frameSize), frameTravelDistance);
},
 _onMove$1: function(e) {
  if (this.get$_scrollBarDragInProgress() !== true)
    return;
  this._refreshScrollRatio$0();
  var coordinate = this._currentScrollVertical === true ? e.get$pageY() : e.get$pageX();
  var delta = $.mul($.sub(coordinate, this._currentScrollStartMouse), this._currentScrollRatio);
  if (!$.eqB(delta, 0)) {
    this._currentScrollStartOffset = $.sub(this._currentScrollStartOffset, delta);
    var t1 = this._currentScrollVertical === true;
    var t2 = this._scroller;
    if (t1) {
      var x = t2.getHorizontalOffset$0();
      var y = $.toInt(this._currentScrollStartOffset);
    } else {
      x = $.toInt(this._currentScrollStartOffset);
      y = t2.getVerticalOffset$0();
    }
    this._scroller.setPosition$2(x, y);
  }
  this._currentScrollStartMouse = coordinate;
},
 get$_onMove: function() { return new $.BoundClosure1(this, '_onMove$1'); },
 _onEnd$1: function(e) {
  this.set$_scrollBarDragInProgress(false);
  this._scroller.get$onScrollerDragEnd().dispatch$1($.Event_Event('scroller:drag_end', true, true));
},
 get$_onEnd: function() { return new $.BoundClosure1(this, '_onEnd$1'); },
 _onScrollerEnd$1: function(e) {
  this._cancelTimeout$0();
  this._timerId = $.window().setTimeout$2(this._boundHideFn, 300);
  this._scrollInProgress = false;
},
 get$_onScrollerEnd: function() { return new $.BoundClosure1(this, '_onScrollerEnd$1'); },
 onScrollerMoved$3: function(scrollX, scrollY, decelerating) {
  if (!this._scrollInProgress) {
    this._onScrollerStart$1(null);
    this._onScrollerEnd$1(null);
  }
  this.updateScrollbars$2(scrollX, scrollY);
},
 refresh$0: function() {
  if (!this._scrollInProgress && $.eqB(this._hovering, false))
    return;
  this._scroller._resize$1(new $.Scrollbar_refresh_anon(this));
},
 updateScrollbars$2: function(scrollX, scrollY) {
  var t1 = this._scroller;
  var contentSize = t1._getAdjustedContentSize$0();
  if (t1._shouldScrollHorizontally$0() === true) {
    var scrollPercentX = t1.getHorizontalScrollPercent$1(scrollX);
    this._updateScrollbar$7(this._horizontalElement, scrollX, scrollPercentX, t1.get$_scrollSize().get$width(), contentSize.get$width(), 'right', 'width');
  }
  if (t1._shouldScrollVertically$0() === true) {
    var scrollPercentY = t1.getVerticalScrollPercent$1(scrollY);
    this._updateScrollbar$7(this._verticalElement, scrollY, scrollPercentY, t1.get$_scrollSize().get$height(), contentSize.get$height(), 'bottom', 'height');
  }
},
 _onScrollerStart$1: function(e) {
  this._scrollInProgress = true;
  this._cancelTimeout$0();
  this._showScrollbars$1(true);
},
 get$_onScrollerStart: function() { return new $.BoundClosure1(this, '_onScrollerStart$1'); },
 _cancelTimeout$0: function() {
  if (!(this._timerId == null)) {
    $.window().clearTimeout$1(this._timerId);
    this._timerId = null;
  }
},
 _showScrollbars$1: function(show) {
  if ($.eqB(this._hovering, true) && this._displayOnHover === true)
    show = true;
  this._toggleOpacity$2(this._verticalElement, show);
  this._toggleOpacity$2(this._horizontalElement, show);
},
 _toggleOpacity$2: function(element, show) {
  if (show)
    element.get$style().removeProperty$1('opacity');
  else
    element.get$style().set$opacity('0');
},
 _defaultScrollSize$2: function(frameSize, contentSize) {
  var t1 = $.div($.mul($.sub(frameSize, 20), frameSize), contentSize);
  var t2 = $.sub(frameSize, 20);
  return $.min($.max(t1, 30), t2);
},
 _updateScrollbar$7: function(element, offset, scrollPercent, frameSize, contentSize, cssPos, cssSize) {
  var t1 = this._cachedSize;
  if (t1.containsKey$1(cssSize) !== true) {
    if (offset == null || $.ltB(contentSize, frameSize))
      return;
    $.add$1(this._frame.get$nodes(), element);
  }
  if ($.gtB(scrollPercent, 1))
    var stretchPercent = $.sub(scrollPercent, 1);
  else
    stretchPercent = $.ltB(scrollPercent, 0) ? $.neg(scrollPercent) : 0;
  var scrollPx = $.mul(stretchPercent, $.sub(contentSize, frameSize));
  var size = $.max(8, $.sub(this._defaultScrollSize$2(frameSize, contentSize), scrollPx));
  var maxOffset = $.sub($.sub(frameSize, size), 20);
  var pos = $.round($.min($.max($.mul(scrollPercent, maxOffset), 0), maxOffset) + 10);
  size = $.round(size);
  var style = element.get$style();
  style.setProperty$3(cssPos, $.S(pos) + 'px', '');
  if (!$.eqB(t1.operator$index$1(cssSize), size)) {
    t1.operator$indexSet$2(cssSize, size);
    style.setProperty$3(cssSize, $.S(size) + 'px', '');
  }
  if (element.get$parent() == null)
    $.add$1(this._frame.get$nodes(), element);
},
 Scrollbar$2$displayOnHover: function(scroller, displayOnHover) {
  this._boundHideFn = new $.anon(this);
}
};

$$.ScrollWatcher = {"": ["_scroller?", "_listeners", "_scrollerEl"],
 "super": "Object",
 addListener$1: function(listener) {
  this._listeners.push(listener);
},
 _dispatchScroll$3$decelerating: function(scrollX, scrollY, decelerating) {
  for (var t1 = $.iterator(this._listeners); t1.get$hasNext() === true;)
    t1.next$0().onScrollerMoved$3(scrollX, scrollY, decelerating);
},
 _dispatchScroll$2: function(scrollX,scrollY) {
  return this._dispatchScroll$3$decelerating(scrollX,scrollY,false)
},
 initialize$0: function() {
  var t1 = this._scroller;
  this._scrollerEl = t1.getElement$0();
  $.add$1(t1.get$onContentMoved(), new $.ScrollWatcher_initialize_anon(this));
},
 _onContentMoved$1: function(e) {
  var t1 = this._scroller;
  this._dispatchScroll$2(t1.getHorizontalOffset$0(), t1.getVerticalOffset$0());
}
};

$$.MockTouch = {"": ["wrapped"],
 "super": "Object",
 get$clientX: function() {
  return this.wrapped.get$clientX();
},
 get$clientY: function() {
  return this.wrapped.get$clientY();
},
 get$pageX: function() {
  return this.wrapped.get$pageX();
},
 get$pageY: function() {
  return this.wrapped.get$pageY();
},
 get$target: function() {
  return this.wrapped.get$target();
}
};

$$.MockTouchEvent = {"": ["wrapped", "touches?", "targetTouches", "changedTouches?"],
 "super": "Object",
 get$currentTarget: function() {
  return this.wrapped.get$currentTarget();
},
 get$target: function() {
  return this.wrapped.get$target();
},
 get$timeStamp: function() {
  return this.wrapped.get$timeStamp();
},
 get$type: function() {
  return this.wrapped.get$type();
},
 preventDefault$0: function() {
  this.wrapped.preventDefault$0();
},
 stopPropagation$0: function() {
  this.wrapped.stopPropagation$0();
},
 get$keyCode: function() {
  return this.wrapped.get$keyCode();
},
 get$pageX: function() {
  return this.wrapped.get$pageX();
},
 get$pageY: function() {
  return this.wrapped.get$pageY();
},
 get$view: function() {
  return this.wrapped.get$view();
}
};

$$.GridLayout = {"": ["rows?", "columns?", "template?", "rowSizing", "columnSizing", "_gridWidth!", "_gridHeight!", "_rowTracks?", "_columnTracks?", "_dimension", "layoutParams", "_cachedViewRect", "view", "_measuredLeft", "_measuredTop", "_measuredWidth", "_measuredHeight"],
 "super": "ViewLayout",
 get$currentWidth: function() {
  return this._gridWidth;
},
 get$currentHeight: function() {
  return this._gridHeight;
},
 cacheExistingBrowserLayout$0: function() {
},
 measureLayout$2: function(size, changed) {
  this._ensureAllTracks$0();
  $.window().requestLayoutFrame$1(new $.GridLayout_measureLayout_anon(size, changed, this));
},
 _measureTracks$0: function() {
  try {
    this._dimension = $.CTC24;
    this._computeUsedBreadthOfTracks$1(this._columnTracks);
    this._dimension = $.CTC25;
    this._computeUsedBreadthOfTracks$1(this._rowTracks);
  } finally {
    this._dimension = null;
  }
},
 _getRemainingSpace$1: function(tracks) {
  return $.max(0, $.sub(this._getGridContentSize$0(), $.CollectionUtils_sum(tracks, new $.GridLayout__getRemainingSpace_anon())));
},
 _computeUsedBreadthOfTracks$1: function(tracks) {
  var items = $.CollectionUtils_map(this.view.get$childViews(), new $.GridLayout__computeUsedBreadthOfTracks_anon());
  $.CollectionUtils_sortBy(items, new $.GridLayout__computeUsedBreadthOfTracks_anon0(this));
  for (var t1 = $.iterator(tracks); t1.get$hasNext() === true;) {
    var t2 = t1.next$0();
    t2.set$usedBreadth(t2.get$minSizing().resolveLength$1(this._getGridContentSize$0()));
    t2.set$maxBreadth(t2.get$maxSizing().resolveLength$1(this._getGridContentSize$0()));
    t2.set$updatedBreadth(0);
  }
  this._distributeSpaceBySpanCount$3(items, $.CTC26, $.CTC27);
  this._distributeSpaceBySpanCount$3(items, $.CTC28, $.CTC27);
  for (t1 = $.iterator(tracks); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if ($.ltB(t2.get$maxBreadth(), t2.get$usedBreadth()))
      t2.set$maxBreadth(t2.get$usedBreadth());
  }
  this._distributeSpaceBySpanCount$3(items, $.CTC26, $.CTC29);
  this._distributeSpaceBySpanCount$3(items, $.CTC28, $.CTC29);
  this._distributeSpaceToTracks$4(tracks, this._getRemainingSpace$1(tracks), $.CTC27, false);
  for (t1 = $.iterator(tracks); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    t2.set$usedBreadth(t2.get$updatedBreadth());
  }
  var tempBreadth = this._calcNormalizedFractionBreadth$1(tracks);
  if (typeof tempBreadth !== 'number')
    return this._computeUsedBreadthOfTracks$1$bailout(1, tracks, tempBreadth);
  for (t1 = $.iterator(tracks); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    var t3 = t2.get$usedBreadth();
    var t4 = t2.get$maxSizing().get$fractionValue();
    if (typeof t4 !== 'number')
      throw $.iae(t4);
    t2.set$usedBreadth($.max(t3, tempBreadth * t4));
  }
  this._computeTrackPositions$1(tracks);
},
 _computeUsedBreadthOfTracks$1$bailout: function(state0, tracks, tempBreadth) {
  for (var t1 = $.iterator(tracks); t1.get$hasNext() === true;) {
    var t2 = t1.next$0();
    t2.set$usedBreadth($.max(t2.get$usedBreadth(), $.mul(tempBreadth, t2.get$maxSizing().get$fractionValue())));
  }
  this._computeTrackPositions$1(tracks);
},
 _computeTrackPositions$1: function(tracks) {
  if (typeof tracks !== 'string' && (typeof tracks !== 'object' || tracks === null || tracks.constructor !== Array && !tracks.is$JavaScriptIndexingBehavior()))
    return this._computeTrackPositions$1$bailout(1, tracks);
  for (var t1 = $.iterator(tracks), position = 0; t1.get$hasNext() === true;) {
    var t2 = t1.next$0();
    t2.set$start(position);
    t2 = t2.get$usedBreadth();
    if (typeof t2 !== 'number')
      throw $.iae(t2);
    position += t2;
  }
  for (var i = 0; i < tracks.length; ++i) {
    var startEdge = tracks[i].get$start();
    if (i < tracks.length - 1) {
      t1 = i + 1;
      var endEdge = $.toInt($.round(tracks[t1].get$start()));
      if (t1 >= tracks.length)
        throw $.ioore(t1);
      tracks[t1].set$start(endEdge);
    } else
      endEdge = $.toInt($.round(position));
    var breadth = $.sub(endEdge, startEdge);
    if (i >= tracks.length)
      throw $.ioore(i);
    tracks[i].set$usedBreadth(breadth);
  }
},
 _computeTrackPositions$1$bailout: function(state0, tracks) {
  for (var t1 = $.iterator(tracks), position = 0; t1.get$hasNext() === true;) {
    var t2 = t1.next$0();
    t2.set$start(position);
    t2 = t2.get$usedBreadth();
    if (typeof t2 !== 'number')
      throw $.iae(t2);
    position += t2;
  }
  for (var i = 0; $.ltB(i, $.get$length(tracks)); ++i) {
    var startEdge = $.index(tracks, i).get$start();
    if ($.ltB(i, $.sub($.get$length(tracks), 1))) {
      t1 = i + 1;
      var endEdge = $.toInt($.round($.index(tracks, t1).get$start()));
      $.index(tracks, t1).set$start(endEdge);
    } else
      endEdge = $.toInt($.round(position));
    var breadth = $.sub(endEdge, startEdge);
    $.index(tracks, i).set$usedBreadth(breadth);
  }
},
 _calcNormalizedFractionBreadth$1: function(tracks) {
  var fractionTracks = $.filter(tracks, new $.GridLayout__calcNormalizedFractionBreadth_anon());
  for (var t1 = $.iterator(fractionTracks); t1.get$hasNext() === true;) {
    var t2 = t1.next$0();
    t2.set$tempBreadth($.div(t2.get$usedBreadth(), t2.get$maxSizing().get$fractionValue()));
  }
  $.CollectionUtils_sortBy(fractionTracks, new $.GridLayout__calcNormalizedFractionBreadth_anon0());
  var spaceNeededFromFractionTracks = this._getRemainingSpace$1(tracks);
  if (typeof spaceNeededFromFractionTracks !== 'number')
    return this._calcNormalizedFractionBreadth$1$bailout(1, spaceNeededFromFractionTracks, fractionTracks);
  for (var t1 = $.iterator(fractionTracks), currentBandFractionBreadth = 0, accumulatedFractions = 0; t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (!$.eqB(t2.get$tempBreadth(), currentBandFractionBreadth)) {
      if ($.gtB($.mul(t2.get$tempBreadth(), accumulatedFractions), spaceNeededFromFractionTracks))
        break;
      currentBandFractionBreadth = t2.get$tempBreadth();
    }
    var t3 = t2.get$maxSizing().get$fractionValue();
    if (typeof t3 !== 'number')
      throw $.iae(t3);
    accumulatedFractions += t3;
    t2 = t2.get$usedBreadth();
    if (typeof t2 !== 'number')
      throw $.iae(t2);
    spaceNeededFromFractionTracks += t2;
  }
  return spaceNeededFromFractionTracks / accumulatedFractions;
},
 _calcNormalizedFractionBreadth$1$bailout: function(state0, spaceNeededFromFractionTracks, fractionTracks) {
  for (var t1 = $.iterator(fractionTracks), currentBandFractionBreadth = 0, accumulatedFractions = 0; t1.get$hasNext() === true;) {
    var t2 = t1.next$0();
    if (!$.eqB(t2.get$tempBreadth(), currentBandFractionBreadth)) {
      if ($.gtB($.mul(t2.get$tempBreadth(), accumulatedFractions), spaceNeededFromFractionTracks))
        break;
      currentBandFractionBreadth = t2.get$tempBreadth();
    }
    var t3 = t2.get$maxSizing().get$fractionValue();
    if (typeof t3 !== 'number')
      throw $.iae(t3);
    accumulatedFractions += t3;
    spaceNeededFromFractionTracks = $.add(spaceNeededFromFractionTracks, t2.get$usedBreadth());
  }
  return $.div(spaceNeededFromFractionTracks, accumulatedFractions);
},
 _distributeSpaceToTracks$4: function(tracks, freeSpace, breadth, ignoreMaxBreadth) {
  if (typeof freeSpace !== 'number')
    return this._distributeSpaceToTracks$4$bailout(1, tracks, freeSpace, breadth, ignoreMaxBreadth, 0, 0);
  tracks = $.CollectionUtils_orderBy(tracks, new $.GridLayout__distributeSpaceToTracks_anon(breadth));
  for (var i = 0; t1 = tracks.length, i < t1; ++i) {
    var share = $.min(freeSpace / (t1 - i), tracks[i].get$maxBreadth());
    if (i >= tracks.length)
      throw $.ioore(i);
    tracks[i].set$tempBreadth(share);
    freeSpace -= share;
  }
  if (freeSpace > 0 && ignoreMaxBreadth)
    for (i = 0; t1 = tracks.length, i < t1; ++i) {
      share = freeSpace / (t1 - i);
      var t2 = tracks[i];
      var t3 = t2.get$tempBreadth();
      if (typeof t3 !== 'number')
        return this._distributeSpaceToTracks$4$bailout(2, i, share, freeSpace, t2, t3, tracks);
      t2.set$tempBreadth(t3 + share);
      freeSpace -= share;
    }
  for (t1 = $.iterator(tracks); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    t2.set$updatedBreadth($.max(t2.get$updatedBreadth(), t2.get$tempBreadth()));
  }
  var t1;
},
 _distributeSpaceToTracks$4$bailout: function(state0, env0, env1, env2, env3, env4, env5) {
  switch (state0) {
    case 1:
      var tracks = env0;
      var freeSpace = env1;
      var breadth = env2;
      var ignoreMaxBreadth = env3;
      break;
    case 2:
      i = env0;
      share = env1;
      freeSpace = env2;
      t2 = env3;
      t3 = env4;
      tracks = env5;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      tracks = $.CollectionUtils_orderBy(tracks, new $.GridLayout__distributeSpaceToTracks_anon(breadth));
      for (var i = 0; t1 = tracks.length, i < t1; ++i) {
        var share = $.div(freeSpace, t1 - i);
        if (i >= tracks.length)
          throw $.ioore(i);
        share = $.min(share, tracks[i].get$maxBreadth());
        if (i >= tracks.length)
          throw $.ioore(i);
        tracks[i].set$tempBreadth(share);
        freeSpace = $.sub(freeSpace, share);
      }
    case 2:
      if (state0 === 2 || state0 === 0 && $.gtB(freeSpace, 0) && ignoreMaxBreadth)
        switch (state0) {
          case 0:
            i = 0;
          case 2:
            L0:
              while (true)
                switch (state0) {
                  case 0:
                    var t1 = tracks.length;
                    if (!(i < t1))
                      break L0;
                    share = $.div(freeSpace, t1 - i);
                    if (i >= tracks.length)
                      throw $.ioore(i);
                    var t2 = tracks[i];
                    var t3 = t2.get$tempBreadth();
                  case 2:
                    state0 = 0;
                    t2.set$tempBreadth($.add(t3, share));
                    freeSpace = $.sub(freeSpace, share);
                    ++i;
                }
        }
      for (t1 = $.iterator(tracks); t1.get$hasNext() === true;) {
        t2 = t1.next$0();
        t2.set$updatedBreadth($.max(t2.get$updatedBreadth(), t2.get$tempBreadth()));
      }
  }
},
 _distributeSpaceBySpanCount$3: function(items, sizeMode, breadth) {
  items = $.filter(items, new $.GridLayout__distributeSpaceBySpanCount_anon(this, breadth, sizeMode));
  if (typeof items !== 'string' && (typeof items !== 'object' || items === null || items.constructor !== Array && !items.is$JavaScriptIndexingBehavior()))
    return this._distributeSpaceBySpanCount$3$bailout(1, sizeMode, breadth, items);
  var tracks = [];
  for (var i = 0; i < items.length; ++i) {
    var item = items[i];
    var itemTargetSize = item.measureContent$3(this, this._dimension, sizeMode);
    var spannedTracks = this._getTracks$1(item);
    this._distributeSpaceToTracks$4(spannedTracks, itemTargetSize, breadth, true);
    $.addAll(tracks, spannedTracks);
    var t1 = i + 1;
    if (t1 === items.length)
      var spanCountFinished = true;
    else {
      var t2 = this._getSpanCount$1(item);
      if (t1 >= items.length)
        throw $.ioore(t1);
      spanCountFinished = !$.eqB(t2, this._getSpanCount$1(items[t1])) && true;
    }
    if (spanCountFinished) {
      for (t1 = $.iterator(tracks); t1.get$hasNext() === true;) {
        t2 = t1.next$0();
        breadth.setSize$2(t2, $.max(breadth.getSize$1(t2), t2.get$updatedBreadth()));
      }
      tracks = [];
    }
  }
},
 _distributeSpaceBySpanCount$3$bailout: function(state0, sizeMode, breadth, items) {
  var tracks = [];
  for (var i = 0; $.ltB(i, $.get$length(items)); ++i) {
    var item = $.index(items, i);
    var itemTargetSize = item.measureContent$3(this, this._dimension, sizeMode);
    var spannedTracks = this._getTracks$1(item);
    this._distributeSpaceToTracks$4(spannedTracks, itemTargetSize, breadth, true);
    $.addAll(tracks, spannedTracks);
    var t1 = i + 1;
    if (t1 === $.get$length(items))
      var spanCountFinished = true;
    else
      spanCountFinished = !$.eqB(this._getSpanCount$1(item), this._getSpanCount$1($.index(items, t1))) && true;
    if (spanCountFinished) {
      for (t1 = $.iterator(tracks); t1.get$hasNext() === true;) {
        var t2 = t1.next$0();
        breadth.setSize$2(t2, $.max(breadth.getSize$1(t2), t2.get$updatedBreadth()));
      }
      tracks = [];
    }
  }
},
 _ensureTrack$4: function(tracks, sizing, start, span) {
  if (typeof tracks !== 'object' || tracks === null || (tracks.constructor !== Array || !!tracks.immutable$list) && !tracks.is$JavaScriptIndexingBehavior())
    return this._ensureTrack$4$bailout(1, tracks, sizing, start, span);
  if (typeof start !== 'number')
    return this._ensureTrack$4$bailout(1, tracks, sizing, start, span);
  if (typeof span !== 'number')
    return this._ensureTrack$4$bailout(1, tracks, sizing, start, span);
  --start;
  var length$ = start + span;
  var first = $.min(start, tracks.length);
  $.set$length(tracks, $.max(tracks.length, length$));
  for (var i = first; i < length$; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= tracks.length)
      throw $.ioore(i);
    if (tracks[i] == null) {
      var t1 = $.GridTrack$(sizing);
      if (i >= tracks.length)
        throw $.ioore(i);
      tracks[i] = t1;
    }
  }
},
 _ensureTrack$4$bailout: function(state0, tracks, sizing, start, span) {
  start = $.sub(start, 1);
  var length$ = $.add(start, span);
  var first = $.min(start, $.get$length(tracks));
  $.set$length(tracks, $.max($.get$length(tracks), length$));
  for (var i = first; $.ltB(i, length$); ++i)
    if ($.index(tracks, i) == null)
      $.indexSet(tracks, i, $.GridTrack$(sizing));
},
 _ensureAllTracks$0: function() {
  for (var t1 = $.iterator($.CollectionUtils_map(this.view.get$childViews(), new $.GridLayout__ensureAllTracks_anon())), t2 = this.rowSizing, t3 = this.columnSizing; t1.get$hasNext() === true;) {
    var t4 = t1.next$0();
    if (t4.get$layoutParams() == null) {
      var p = $.GridLayoutParams$(t4.get$view(), this);
      this._ensureTrack$4(this._rowTracks, t2, p.row, p.rowSpan);
      this._ensureTrack$4(this._columnTracks, t3, p.column, p.columnSpan);
      t4.set$layoutParams(p);
    }
    t4.cacheExistingBrowserLayout$0();
  }
},
 _setBoundsOfChildren$0: function() {
  for (var t1 = $.iterator($.CollectionUtils_map(this.view.get$childViews(), new $.GridLayout__setBoundsOfChildren_anon())); t1.get$hasNext() === true;) {
    var t2 = t1.next$0();
    var childLayout = t2.get$layoutParams();
    var xPos = this._getTrackLocationX$1(childLayout);
    var yPos = this._getTrackLocationY$1(childLayout);
    xPos.get$start();
    $.get$length(xPos);
    yPos.get$start();
    $.get$length(yPos);
    xPos = childLayout.get$columnAlign().align$2(xPos, t2.get$currentWidth());
    yPos = childLayout.get$rowAlign().align$2(yPos, t2.get$currentHeight());
    t2.setBounds$4(xPos.get$start(), yPos.get$start(), $.get$length(xPos), $.get$length(yPos));
  }
},
 _getGridContentSize$0: function() {
  if ($.eqB(this._dimension, $.CTC24))
    return this._gridWidth;
  else if ($.eqB(this._dimension, $.CTC25))
    return this._gridHeight;
},
 _getTrackLocationX$1: function(childLayout) {
  var t1 = childLayout.get$column();
  if (typeof t1 !== 'number')
    return this._getTrackLocationX$1$bailout(1, childLayout, t1, 0);
  var start = t1 - 1;
  t1 = childLayout.get$columnSpan();
  if (typeof t1 !== 'number')
    return this._getTrackLocationX$1$bailout(2, start, t1, 0);
  var end = start + t1 - 1;
  var t4 = this._columnTracks;
  if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
    return this._getTrackLocationX$1$bailout(3, t4, end, start);
  if (start !== (start | 0))
    throw $.iae(start);
  if (start < 0 || start >= t4.length)
    throw $.ioore(start);
  var start0 = t4[start].get$start();
  if (typeof start0 !== 'number')
    return this._getTrackLocationX$1$bailout(4, end, start0, 0);
  var t7 = this._columnTracks;
  if (typeof t7 !== 'string' && (typeof t7 !== 'object' || t7 === null || t7.constructor !== Array && !t7.is$JavaScriptIndexingBehavior()))
    return this._getTrackLocationX$1$bailout(5, t7, end, start0);
  if (end !== (end | 0))
    throw $.iae(end);
  if (end < 0 || end >= t7.length)
    throw $.ioore(end);
  var end0 = t7[end].get$end();
  if (typeof end0 !== 'number')
    return this._getTrackLocationX$1$bailout(6, end0, start0, 0);
  return $._GridLocation$(start0, end0 - start0);
},
 _getTrackLocationX$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      var childLayout = env0;
      t1 = env1;
      break;
    case 2:
      start = env0;
      t1 = env1;
      break;
    case 3:
      t4 = env0;
      end = env1;
      start = env2;
      break;
    case 4:
      end = env0;
      start0 = env1;
      break;
    case 5:
      t7 = env0;
      end = env1;
      start0 = env2;
      break;
    case 6:
      end0 = env0;
      start0 = env1;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = childLayout.get$column();
    case 1:
      state0 = 0;
      var start = $.sub(t1, 1);
      t1 = childLayout.get$columnSpan();
    case 2:
      state0 = 0;
      var end = $.sub($.add(start, t1), 1);
      var t4 = this._columnTracks;
    case 3:
      state0 = 0;
      var start0 = $.index(t4, start).get$start();
    case 4:
      state0 = 0;
      var t7 = this._columnTracks;
    case 5:
      state0 = 0;
      var end0 = $.index(t7, end).get$end();
    case 6:
      state0 = 0;
      return $._GridLocation$(start0, $.sub(end0, start0));
  }
},
 _getTrackLocationY$1: function(childLayout) {
  var t1 = childLayout.get$row();
  if (typeof t1 !== 'number')
    return this._getTrackLocationY$1$bailout(1, childLayout, t1, 0);
  var start = t1 - 1;
  t1 = childLayout.get$rowSpan();
  if (typeof t1 !== 'number')
    return this._getTrackLocationY$1$bailout(2, start, t1, 0);
  var end = start + t1 - 1;
  var t4 = this._rowTracks;
  if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
    return this._getTrackLocationY$1$bailout(3, t4, end, start);
  if (start !== (start | 0))
    throw $.iae(start);
  if (start < 0 || start >= t4.length)
    throw $.ioore(start);
  var start0 = t4[start].get$start();
  if (typeof start0 !== 'number')
    return this._getTrackLocationY$1$bailout(4, end, start0, 0);
  var t7 = this._rowTracks;
  if (typeof t7 !== 'string' && (typeof t7 !== 'object' || t7 === null || t7.constructor !== Array && !t7.is$JavaScriptIndexingBehavior()))
    return this._getTrackLocationY$1$bailout(5, t7, end, start0);
  if (end !== (end | 0))
    throw $.iae(end);
  if (end < 0 || end >= t7.length)
    throw $.ioore(end);
  var end0 = t7[end].get$end();
  if (typeof end0 !== 'number')
    return this._getTrackLocationY$1$bailout(6, end0, start0, 0);
  return $._GridLocation$(start0, end0 - start0);
},
 _getTrackLocationY$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      var childLayout = env0;
      t1 = env1;
      break;
    case 2:
      start = env0;
      t1 = env1;
      break;
    case 3:
      t4 = env0;
      end = env1;
      start = env2;
      break;
    case 4:
      end = env0;
      start0 = env1;
      break;
    case 5:
      t7 = env0;
      end = env1;
      start0 = env2;
      break;
    case 6:
      end0 = env0;
      start0 = env1;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = childLayout.get$row();
    case 1:
      state0 = 0;
      var start = $.sub(t1, 1);
      t1 = childLayout.get$rowSpan();
    case 2:
      state0 = 0;
      var end = $.sub($.add(start, t1), 1);
      var t4 = this._rowTracks;
    case 3:
      state0 = 0;
      var start0 = $.index(t4, start).get$start();
    case 4:
      state0 = 0;
      var t7 = this._rowTracks;
    case 5:
      state0 = 0;
      var end0 = $.index(t7, end).get$end();
    case 6:
      state0 = 0;
      return $._GridLocation$(start0, $.sub(end0, start0));
  }
},
 _getTracks$1: function(item) {
  var childLayout = item.get$layoutParams();
  if ($.eqB(this._dimension, $.CTC24)) {
    var t1 = childLayout.get$column();
    if (typeof t1 !== 'number')
      return this._getTracks$1$bailout(1, childLayout, t1, 0);
    var start = t1 - 1;
    var span = childLayout.get$columnSpan();
    if (typeof span !== 'number')
      return this._getTracks$1$bailout(2, span, start, 0);
    var tracks = this._columnTracks;
    if (typeof tracks !== 'string' && (typeof tracks !== 'object' || tracks === null || tracks.constructor !== Array && !tracks.is$JavaScriptIndexingBehavior()))
      return this._getTracks$1$bailout(3, span, tracks, start);
  } else {
    if ($.eqB(this._dimension, $.CTC25)) {
      t1 = childLayout.get$row();
      if (typeof t1 !== 'number')
        return this._getTracks$1$bailout(4, t1, childLayout, 0);
      start = t1 - 1;
      span = childLayout.get$rowSpan();
      tracks = this._rowTracks;
    } else {
      start = null;
      span = null;
      tracks = null;
    }
    if (typeof start !== 'number')
      return this._getTracks$1$bailout(5, start, span, tracks);
  }
  if (typeof tracks !== 'string' && (typeof tracks !== 'object' || tracks === null || tracks.constructor !== Array && !tracks.is$JavaScriptIndexingBehavior()))
    return this._getTracks$1$bailout(7, start, span, tracks);
  if (typeof span !== 'number')
    return this._getTracks$1$bailout(6, start, span, tracks);
  var result = $.ListImplementation_List(span);
  for (var t1 = tracks.length, t2 = result.length, i = 0; i < span; ++i) {
    var t3 = start + i;
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t1)
      throw $.ioore(t3);
    t3 = tracks[t3];
    if (i >= t2)
      throw $.ioore(i);
    result[i] = t3;
  }
  return result;
},
 _getTracks$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      childLayout = env0;
      t1 = env1;
      break;
    case 2:
      span = env0;
      start = env1;
      break;
    case 3:
      span = env0;
      tracks = env1;
      start = env2;
      break;
    case 4:
      t1 = env0;
      childLayout = env1;
      break;
    case 5:
      start = env0;
      span = env1;
      tracks = env2;
      break;
    case 7:
      start = env0;
      span = env1;
      tracks = env2;
      break;
    case 6:
      start = env0;
      span = env1;
      tracks = env2;
      break;
  }
  switch (state0) {
    case 0:
      var childLayout = item.get$layoutParams();
    default:
      if (state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && $.eqB(this._dimension, $.CTC24))
        switch (state0) {
          case 0:
            var t1 = childLayout.get$column();
          case 1:
            state0 = 0;
            var start = $.sub(t1, 1);
            var span = childLayout.get$columnSpan();
          case 2:
            state0 = 0;
            var tracks = this._columnTracks;
          case 3:
            state0 = 0;
        }
      else
        switch (state0) {
          case 0:
          case 4:
            if (state0 === 4 || state0 === 0 && $.eqB(this._dimension, $.CTC25))
              switch (state0) {
                case 0:
                  t1 = childLayout.get$row();
                case 4:
                  state0 = 0;
                  start = $.sub(t1, 1);
                  span = childLayout.get$rowSpan();
                  tracks = this._rowTracks;
              }
            else {
              start = null;
              span = null;
              tracks = null;
            }
          case 5:
            state0 = 0;
        }
    case 7:
      state0 = 0;
    case 6:
      state0 = 0;
      var result = $.ListImplementation_List(span);
      for (var i = 0; $.ltB(i, span); ++i) {
        t1 = $.index(tracks, $.add(start, i));
        if (i >= result.length)
          throw $.ioore(i);
        result[i] = t1;
      }
      return result;
  }
},
 _getSpanCount$1: function(item) {
  var childLayout = item.get$layoutParams();
  return $.eqB(this._dimension, $.CTC24) ? childLayout.get$columnSpan() : childLayout.get$rowSpan();
},
 GridLayout$1: function(view) {
  var t1 = this.rows;
  this._rowTracks = !(t1 == null) ? t1.get$tracks() : $.ListImplementation_List(null);
  t1 = this.columns;
  this._columnTracks = !(t1 == null) ? t1.get$tracks() : $.ListImplementation_List(null);
}
};

$$.GridLayoutParams = {"": ["row?", "column?", "rowSpan?", "columnSpan?", "layer?", "rowAlign?", "columnAlign?", "style"],
 "super": "LayoutParams",
 GridLayoutParams$2: function(view, layout) {
  this.rowAlign = $.GridItemAlignment$fromString($.index(view.get$customStyle(), 'grid-row-align'));
  this.columnAlign = $.GridItemAlignment$fromString($.index(view.get$customStyle(), 'grid-column-align'));
  this.layer = $.StringUtils_parseInt($.index(view.get$customStyle(), 'grid-layer'), 0);
  this.rowSpan = $.StringUtils_parseInt($.index(view.get$customStyle(), 'grid-row-span'), null);
  this.columnSpan = $.StringUtils_parseInt($.index(view.get$customStyle(), 'grid-column-span'), null);
  var line = $._GridItemParser_parse($.index(view.get$customStyle(), 'grid-row'), layout.get$rows());
  if (!(line == null)) {
    this.row = line.get$start();
    if (!($.get$length(line) == null)) {
      if (!(this.rowSpan == null))
        throw $.$$throw($.UnsupportedError$('grid-row-span cannot be with grid-row that defines an end'));
      this.rowSpan = $.get$length(line);
    }
  }
  line = $._GridItemParser_parse($.index(view.get$customStyle(), 'grid-column'), layout.get$columns());
  if (!(line == null)) {
    this.column = line.get$start();
    if (!($.get$length(line) == null)) {
      if (!(this.columnSpan == null))
        throw $.$$throw($.UnsupportedError$('grid-column-span cannot be with grid-column that defines an end'));
      this.columnSpan = $.get$length(line);
    }
  }
  var cell = $._GridTemplateParser_parseCell($.index(view.get$customStyle(), 'grid-cell'));
  if (!(cell == null) && !$.eqB(cell, 'none')) {
    if (!(this.row == null) || !(this.column == null) || !(this.rowSpan == null) || !(this.columnSpan == null))
      throw $.$$throw($.UnsupportedError$('grid-cell cannot be used with grid-row and grid-column'));
    var t1 = layout.get$template();
    if (t1 == null)
      throw $.$$throw($.UnsupportedError$('grid-cell requires that grid-template is set on the parent'));
    var rect = t1.lookupCell$1(cell);
    this.row = rect.get$row();
    this.column = rect.get$column();
    this.rowSpan = rect.get$rowSpan();
    this.columnSpan = rect.get$columnSpan();
  } else {
    if (this.rowSpan == null)
      this.rowSpan = 1;
    if (this.columnSpan == null)
      this.columnSpan = 1;
    t1 = this.row == null;
    if (t1 && this.column == null)
      throw $.$$throw($.UnsupportedError$('grid-flow is not implemented so at least one row or one column must be defined'));
    if (t1)
      this.row = 1;
    if (this.column == null)
      this.column = 1;
  }
}
};

$$._Parser = {"": [],
 "super": "Object",
 _error$1: function(msg) {
  throw $.$$throw($.SyntaxErrorException$(msg, this._src, this._lib7_offset));
},
 get$length: function() {
  return $.get$length(this._src);
},
 get$remaining: function() {
  return $.sub($.get$length(this._src), this._lib7_offset);
},
 _peekChar$0: function() {
  return $.charCodeAt(this._src, this._lib7_offset);
},
 get$endOfInput: function() {
  return $.ge(this._lib7_offset, $.get$length(this._src));
},
 _maybeEatWhitespace$0: function() {
  var start = this._lib7_offset;
  while (true) {
    var t1 = this._lib7_offset;
    if (typeof t1 !== 'number')
      return this._maybeEatWhitespace$0$bailout(1, start, t1, 0);
    var t3 = $.get$length(this);
    if (typeof t3 !== 'number')
      return this._maybeEatWhitespace$0$bailout(2, t3, start, t1);
    if (!(t1 < t3 && $._Parser__isWhitespace(this._peekChar$0())))
      break;
    t1 = this._lib7_offset;
    if (typeof t1 !== 'number')
      return this._maybeEatWhitespace$0$bailout(3, t1, start, 0);
    this._lib7_offset = t1 + 1;
  }
  return !$.eqB(this._lib7_offset, start);
},
 _maybeEatWhitespace$0$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      start = env0;
      t1 = env1;
      break;
    case 2:
      t3 = env0;
      start = env1;
      t1 = env2;
      break;
    case 3:
      t1 = env0;
      start = env1;
      break;
  }
  switch (state0) {
    case 0:
      var start = this._lib7_offset;
    default:
      L0:
        while (true)
          switch (state0) {
            case 0:
              var t1 = this._lib7_offset;
            case 1:
              state0 = 0;
              var t3 = $.get$length(this);
            case 2:
              state0 = 0;
              if (!($.ltB(t1, t3) && $._Parser__isWhitespace(this._peekChar$0())))
                break L0;
              t1 = this._lib7_offset;
            case 3:
              state0 = 0;
              this._lib7_offset = $.add(t1, 1);
          }
      return !$.eqB(this._lib7_offset, start);
  }
},
 _maybeEatMultiLineComment$0: function() {
  if (this._maybeEat$2('/*', false) === true) {
    for (; this._maybeEat$2('*/', false) !== true;) {
      var t1 = this._lib7_offset;
      if (typeof t1 !== 'number')
        return this._maybeEatMultiLineComment$0$bailout(1, t1, 0);
      var t3 = $.get$length(this);
      if (typeof t3 !== 'number')
        return this._maybeEatMultiLineComment$0$bailout(2, t1, t3);
      if (t1 >= t3)
        this._error$1('expected */');
      t1 = this._lib7_offset;
      if (typeof t1 !== 'number')
        return this._maybeEatMultiLineComment$0$bailout(3, t1, 0);
      this._lib7_offset = t1 + 1;
    }
    return true;
  }
  return false;
},
 _maybeEatMultiLineComment$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env0;
      t3 = env1;
      break;
    case 3:
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
    default:
      if (state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && this._maybeEat$2('/*', false) === true)
        switch (state0) {
          case 0:
          default:
            L0:
              while (true)
                switch (state0) {
                  case 0:
                    if (!(this._maybeEat$2('*/', false) !== true))
                      break L0;
                    var t1 = this._lib7_offset;
                  case 1:
                    state0 = 0;
                    var t3 = $.get$length(this);
                  case 2:
                    state0 = 0;
                    if ($.geB(t1, t3))
                      this._error$1('expected */');
                    t1 = this._lib7_offset;
                  case 3:
                    state0 = 0;
                    this._lib7_offset = $.add(t1, 1);
                }
            return true;
        }
      return false;
  }
},
 _maybeEatWhitespaceOrComments$0: function() {
  while (true)
    if (!(this._maybeEatWhitespace$0() === true || this._maybeEatMultiLineComment$0() === true))
      break;
},
 _eatEnd$0: function() {
  this._maybeEatWhitespaceOrComments$0();
  if (this.get$endOfInput() !== true)
    this._error$1('expected end of input');
},
 _maybeEat$2: function(value, eatWhitespace) {
  if (typeof value !== 'string' && (typeof value !== 'object' || value === null || value.constructor !== Array && !value.is$JavaScriptIndexingBehavior()))
    return this._maybeEat$2$bailout(1, value, eatWhitespace, 0, 0);
  if (eatWhitespace === true)
    this._maybeEatWhitespaceOrComments$0();
  var t1 = this.get$remaining();
  if (typeof t1 !== 'number')
    return this._maybeEat$2$bailout(2, value, t1, 0, 0);
  if (t1 < value.length)
    return false;
  t1 = this._src;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._maybeEat$2$bailout(3, value, t1, 0, 0);
  var i = 0;
  for (; t2 = value.length, i < t2; ++i) {
    var t2 = this._lib7_offset;
    if (typeof t2 !== 'number')
      return this._maybeEat$2$bailout(4, i, value, t2, t1);
    t2 += i;
    if (t2 !== (t2 | 0))
      throw $.iae(t2);
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    if (!$.eqB(t1[t2], value[i]))
      return false;
  }
  if ($._Parser__isLetter($.charCodeAt(value, t2 - 1))) {
    t2 = this._lib7_offset;
    if (typeof t2 !== 'number')
      return this._maybeEat$2$bailout(5, value, t1, t2, 0);
    i = t2 + value.length;
    if (i < t1.length && $._Parser__isLetter($.charCodeAt(t1, i)))
      return false;
  }
  t1 = this._lib7_offset;
  if (typeof t1 !== 'number')
    return this._maybeEat$2$bailout(6, value, t1, 0, 0);
  this._lib7_offset = t1 + value.length;
  return true;
},
 _maybeEat$2$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      var value = env0;
      var eatWhitespace = env1;
      break;
    case 2:
      value = env0;
      t1 = env1;
      break;
    case 3:
      value = env0;
      t1 = env1;
      break;
    case 4:
      i = env0;
      value = env1;
      t2 = env2;
      t1 = env3;
      break;
    case 5:
      value = env0;
      t1 = env1;
      t2 = env2;
      break;
    case 6:
      value = env0;
      t1 = env1;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      if (eatWhitespace === true)
        this._maybeEatWhitespaceOrComments$0();
      var t1 = this.get$remaining();
    case 2:
      state0 = 0;
      if ($.ltB(t1, $.get$length(value)))
        return false;
      t1 = this._src;
    case 3:
      state0 = 0;
      var i = 0;
    case 4:
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!$.ltB(i, $.get$length(value)))
                break L0;
              var t2 = this._lib7_offset;
            case 4:
              state0 = 0;
              if (!$.eqB($.index(t1, $.add(t2, i)), $.index(value, i)))
                return false;
              ++i;
          }
    case 5:
      if (state0 === 5 || state0 === 0 && $._Parser__isLetter($.charCodeAt(value, $.sub($.get$length(value), 1))))
        switch (state0) {
          case 0:
            t2 = this._lib7_offset;
          case 5:
            state0 = 0;
            i = $.add(t2, $.get$length(value));
            if ($.ltB(i, $.get$length(t1)) && $._Parser__isLetter($.charCodeAt(t1, i)))
              return false;
        }
      t1 = this._lib7_offset;
    case 6:
      state0 = 0;
      this._lib7_offset = $.add(t1, $.get$length(value));
      return true;
  }
},
 _maybeEat$1: function(value) {
  return this._maybeEat$2(value,true)
},
 _eat$2$eatWhitespace: function(value, eatWhitespace) {
  if (this._maybeEat$1(value) !== true)
    this._error$1('expected "' + $.S(value) + '"');
},
 _eat$1: function(value) {
  return this._eat$2$eatWhitespace(value,true)
},
 _maybeEatString$0: function() {
  if (this._maybeEat$1('\'') !== true) {
    if (this._maybeEat$1('"') !== true)
      return;
    var quote = '"';
  } else
    quote = '\'';
  var start = this._lib7_offset;
  for (var hasEscape = false; this._maybeEat$1(quote) !== true;) {
    if (this.get$endOfInput() === true)
      this._error$1('expected "' + quote + '"');
    if (this._maybeEat$1('\\') === true)
      hasEscape = true;
    var t1 = this._lib7_offset;
    if (typeof t1 !== 'number')
      return this._maybeEatString$0$bailout(1, start, t1, quote, hasEscape);
    this._lib7_offset = t1 + 1;
  }
  t1 = this._src;
  var t2 = this._lib7_offset;
  if (typeof t2 !== 'number')
    return this._maybeEatString$0$bailout(2, hasEscape, start, t1, t2);
  var result = $.substring$2(t1, start, t2 - 1);
  return hasEscape ? $.replaceFirst(result, '\\', '') : result;
},
 _maybeEatString$0$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      start = env0;
      t1 = env1;
      quote = env2;
      hasEscape = env3;
      break;
    case 2:
      hasEscape = env0;
      start = env1;
      t1 = env2;
      t2 = env3;
      break;
  }
  switch (state0) {
    case 0:
      if (this._maybeEat$1('\'') !== true) {
        if (this._maybeEat$1('"') !== true)
          return;
        var quote = '"';
      } else
        quote = '\'';
      var start = this._lib7_offset;
      var hasEscape = false;
    case 1:
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!(this._maybeEat$1(quote) !== true))
                break L0;
              if (this.get$endOfInput() === true)
                this._error$1('expected "' + quote + '"');
              if (this._maybeEat$1('\\') === true)
                hasEscape = true;
              var t1 = this._lib7_offset;
            case 1:
              state0 = 0;
              this._lib7_offset = $.add(t1, 1);
          }
      t1 = this._src;
      var t2 = this._lib7_offset;
    case 2:
      state0 = 0;
      var result = $.substring$2(t1, start, $.sub(t2, 1));
      return hasEscape ? $.replaceFirst(result, '\\', '') : result;
  }
},
 _eatWord$0: function() {
  var start = this._lib7_offset;
  while (true) {
    if (!($.ltB(this._lib7_offset, $.get$length(this)) && $._Parser__isLetter(this._peekChar$0())))
      break;
    this._lib7_offset = $.add(this._lib7_offset, 1);
  }
  return $.substring$2(this._src, start, this._lib7_offset);
},
 _maybeEatInt$0: function() {
  var start = this._lib7_offset;
  while (true) {
    if ($.ltB(this._lib7_offset, $.get$length(this))) {
      var t1 = this._peekChar$0();
      t1 = $.leB(48, t1) && $.leB(t1, 57);
    } else
      t1 = false;
    if (!t1)
      break;
    this._lib7_offset = $.add(this._lib7_offset, 1);
  }
  if ($.eqB(start, this._lib7_offset))
    return;
  return $.int_parse($.substring$2(this._src, start, this._lib7_offset));
},
 _eatInt$0: function() {
  var result = this._maybeEatInt$0();
  if (result == null)
    this._error$1('expected positive integer');
  return result;
},
 _eatDouble$0: function() {
  var start = this._lib7_offset;
  for (var dot = false; $.ltB(this._lib7_offset, $.get$length(this));) {
    var c = this._peekChar$0();
    if (!($.leB(48, c) && $.leB(c, 57))) {
      if ($.eqB(c, 46) && !dot)
        ;
      else
        break;
      dot = true;
    }
    this._lib7_offset = $.add(this._lib7_offset, 1);
  }
  if ($.eqB(start, this._lib7_offset))
    this._error$1('expected positive decimal number');
  return $.double_parse($.substring$2(this._src, start, this._lib7_offset));
}
};

$$._GridTemplateParser = {"": ["_src", "_lib7_offset"],
 "super": "_Parser",
 _parseTemplate$0: function() {
  if (this._maybeEat$1('none') === true)
    return;
  var rows = $.ListImplementation_List(null);
  for (; row = this._maybeEatString$0(), !(row == null);)
    rows.push(row);
  if (rows.length === 0)
    this._error$1('expected at least one cell, or "none"');
  return $.GridTemplate$(rows);
  var row;
}
};

$$._GridItemParser = {"": ["_src", "_lib7_offset"],
 "super": "_Parser",
 _parseTrack$1: function(list) {
  if (this._maybeEat$1('auto') === true)
    return;
  var start = this._maybeParseLine$1(list);
  if (start == null)
    this._error$1('expected row/column number or name');
  var end = this._maybeParseLine$1(list);
  if (!(end == null)) {
    var span = $.sub(end, start);
    if ($.leB(span, 0))
      this._error$1('expected row/column span to be a positive integer');
  } else
    span = null;
  return $._GridLocation$(start, span);
},
 _maybeParseLine$1: function(list) {
  if (this._maybeEat$1('start') === true)
    return 1;
  else if (this._maybeEat$1('end') === true)
    return $.add($.get$length(list.get$tracks()), 1);
  var name$ = this._maybeEatString$0();
  if (name$ == null)
    return this._maybeEatInt$0();
  else {
    var edge = $.index(list.get$lineNames(), name$);
    if (edge == null)
      this._error$1('row/column name "' + $.S(name$) + '" not found in the parent\'s ' + ' grid-row/grid-columns properties');
    return edge;
  }
}
};

$$._GridTrackParser = {"": ["_tracks", "_lineNames", "_src", "_lib7_offset"],
 "super": "_Parser",
 _parseTrackList$0: function() {
  if (this._maybeEat$1('none') === true)
    return;
  this._parseTrackListHelper$0();
  return $.GridTrackList$(this._tracks, this._lineNames);
},
 _parseTrackListHelper$1: function(resultTracks) {
  this._maybeEatWhitespace$0();
  for (var t1 = this._lineNames, t2 = this._tracks, t3 = !(resultTracks == null); this.get$endOfInput() !== true;) {
    for (; name$ = this._maybeEatString$0(), !(name$ == null);)
      t1.operator$indexSet$2(name$, t2.length + 1);
    this._maybeEatWhitespace$0();
    if (this.get$endOfInput() === true)
      return;
    if (t3) {
      if ($.eqB(this._peekChar$0(), 41))
        return;
      $.add$1(resultTracks, $.GridTrack$(this._parseTrackMinmax$0()));
    } else
      this._parseTrackGroup$0();
    this._maybeEatWhitespace$0();
  }
  var name$;
},
 _parseTrackListHelper$0: function() {
  return this._parseTrackListHelper$1(null)
},
 _parseTrackGroup$0: function() {
  if (this._maybeEat$1('(') === true) {
    var tracks = $.ListImplementation_List(null);
    this._parseTrackListHelper$1(tracks);
    this._eat$1(')');
    if (this._maybeEat$1('[') === true) {
      var expand = this._eatInt$0();
      if (typeof expand !== 'number')
        return this._parseTrackGroup$0$bailout(1, tracks, expand);
      this._eat$1(']');
      if (expand <= 0)
        this._error$1('expected positive number');
      for (var t1 = this._tracks, i = 0; i < expand; ++i)
        for (var t2 = $.iterator(tracks); t2.get$hasNext() === true;)
          t1.push(t2.next$0().clone$0());
    }
  } else
    this._tracks.push($.GridTrack$(this._parseTrackMinmax$0()));
},
 _parseTrackGroup$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      tracks = env0;
      expand = env1;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      if (state0 === 1 || state0 === 0 && this._maybeEat$1('(') === true)
        switch (state0) {
          case 0:
            var tracks = $.ListImplementation_List(null);
            this._parseTrackListHelper$1(tracks);
            this._eat$1(')');
          case 1:
            if (state0 === 1 || state0 === 0 && this._maybeEat$1('[') === true)
              switch (state0) {
                case 0:
                  var expand = this._eatInt$0();
                case 1:
                  state0 = 0;
                  this._eat$1(']');
                  if ($.leB(expand, 0))
                    this._error$1('expected positive number');
                  for (var t1 = this._tracks, i = 0; $.ltB(i, expand); ++i)
                    for (var t2 = $.iterator(tracks); t2.get$hasNext() === true;)
                      t1.push(t2.next$0().clone$0());
              }
        }
      else
        this._tracks.push($.GridTrack$(this._parseTrackMinmax$0()));
  }
},
 _parseTrackMinmax$0: function() {
  if (this._maybeEat$1('auto') === true || this._maybeEat$1('fit-content') === true)
    return $.CTC21;
  if (this._maybeEat$1('minmax(') === true) {
    var min = this._parseTrackBreadth$0();
    this._eat$1(',');
    var max = this._parseTrackBreadth$0();
    this._eat$1(')');
    return $.TrackSizing$(min, max);
  } else {
    var breadth = this._parseTrackBreadth$0();
    return $.TrackSizing$(breadth, breadth);
  }
},
 _parseTrackBreadth$0: function() {
  if (this._maybeEat$1('min-content') === true)
    return $.CTC22;
  else if (this._maybeEat$1('max-content') === true)
    return $.CTC23;
  var value = this._eatDouble$0();
  var units = this._maybeEat$1('%') === true ? '%' : this._eatWord$0();
  if ($.eqB(units, 'fr'))
    return $.FractionSizing$(value);
  else
    return $.FixedSizing$(value, units);
}
};

$$.SyntaxErrorException = {"": ["_lib7_message", "_lib7_offset", "_lib7_source"],
 "super": "Object",
 toString$0: function() {
  var t1 = this._lib7_offset;
  var t2 = this._lib7_source;
  var location$ = $.ltB(t1, $.get$length(t2)) ? 'location: ' + $.S($.substring$1(t2, t1)) : 'end of input';
  return 'SyntaxErrorException: ' + this._lib7_message + ' at ' + location$;
},
 is$Exception: true
};

$$.GridTrackList = {"": ["tracks?", "lineNames?"],
 "super": "Object"
};

$$.GridTrack = {"": ["start=", "usedBreadth=", "maxBreadth=", "updatedBreadth=", "tempBreadth=", "sizing"],
 "super": "Object",
 start$5: function(arg0, arg1, arg2, arg3, arg4) { return this.start.call$5(arg0, arg1, arg2, arg3, arg4); },
 clone$0: function() {
  return $.GridTrack$(this.sizing.clone$0());
},
 get$minSizing: function() {
  return this.sizing.get$min();
},
 get$maxSizing: function() {
  return this.sizing.get$max();
},
 get$end: function() {
  return $.add(this.start, this.usedBreadth);
},
 get$isFractional: function() {
  return this.get$minSizing().get$isFraction() === true || this.get$maxSizing().get$isFraction() === true;
}
};

$$.GridItemAlignment = {"": ["value?"],
 "super": "Object",
 align$2: function(span, size) {
  switch (this.value) {
    case 'start':
      return $._GridLocation$(span.get$start(), size);
    case 'end':
      return $._GridLocation$($.sub(span.get$end(), size), size);
    case 'center':
      size = $.min(size, $.get$length(span));
      return $._GridLocation$($.toInt($.round($.sub($.add(span.get$start(), $.div($.get$length(span), 2)), size / 2))), size);
    case 'stretch':
      return span;
  }
},
 GridItemAlignment$fromString$1: function(value) {
  switch (this.value) {
    case 'start':
    case 'end':
    case 'center':
    case 'stretch':
      break;
    default:
      throw $.$$throw($.UnsupportedError$('invalid row/column alignment "' + $.S(value) + '"'));
  }
}
};

$$.GridTemplate = {"": ["_rects", "_numRows"],
 "super": "Object",
 _buildRects$1: function(templateRows) {
  if (typeof templateRows !== 'string' && (typeof templateRows !== 'object' || templateRows === null || templateRows.constructor !== Array && !templateRows.is$JavaScriptIndexingBehavior()))
    return this._buildRects$1$bailout(1, templateRows);
  for (var t1 = this._rects, r = 0; r < templateRows.length; ++r) {
    var row = templateRows[r];
    for (var t2 = r + 1, c = 0; $.ltB(c, $.get$length(row)); ++c) {
      var cell = $.charCodeAt(row, c);
      var rect = t1.operator$index$1(cell);
      var t3 = !(rect == null);
      var t4 = c + 1;
      if (t3)
        rect.add$2(t2, t4);
      else
        t1.operator$indexSet$2(cell, $._GridTemplateRect$(cell, t2, t4));
    }
  }
  for (t2 = $.iterator(t1.get$values()); t2.get$hasNext() === true;)
    t2.next$0().checkValid$0();
},
 _buildRects$1$bailout: function(state0, templateRows) {
  for (var t1 = this._rects, r = 0; $.ltB(r, $.get$length(templateRows)); ++r) {
    var row = $.index(templateRows, r);
    for (var t2 = r + 1, c = 0; $.ltB(c, $.get$length(row)); ++c) {
      var cell = $.charCodeAt(row, c);
      var rect = t1.operator$index$1(cell);
      var t3 = !(rect == null);
      var t4 = c + 1;
      if (t3)
        rect.add$2(t2, t4);
      else
        t1.operator$indexSet$2(cell, $._GridTemplateRect$(cell, t2, t4));
    }
  }
  for (t2 = $.iterator(t1.get$values()); t2.get$hasNext() === true;)
    t2.next$0().checkValid$0();
},
 lookupCell$1: function(cell) {
  if (!$.eqB($.get$length(cell), 1))
    throw $.$$throw($.UnsupportedError$('grid-cell "' + $.S(cell) + '" must be a one character string'));
  var rect = this._rects.operator$index$1($.charCodeAt(cell, 0));
  if (rect == null)
    throw $.$$throw($.UnsupportedError$('grid-cell "' + $.S(cell) + '" not found in parent\'s grid-template'));
  return rect;
},
 GridTemplate$1: function(rows) {
  this._buildRects$1(rows);
}
};

$$._GridTemplateRect = {"": ["row?", "column?", "rowSpan?", "columnSpan?", "_count", "_char"],
 "super": "Object",
 add$2: function(r, c) {
  if (typeof r !== 'number')
    return this.add$2$bailout(1, r, c);
  if (typeof c !== 'number')
    return this.add$2$bailout(1, r, c);
  this._count = this._count + 1;
  this.rowSpan = $.max(this.rowSpan, r - this.row + 1);
  this.columnSpan = $.max(this.columnSpan, c - this.column + 1);
},
 add$2$bailout: function(state0, r, c) {
  this._count = this._count + 1;
  this.rowSpan = $.max(this.rowSpan, $.add($.sub(r, this.row), 1));
  this.columnSpan = $.max(this.columnSpan, $.add($.sub(c, this.column), 1));
},
 checkValid$0: function() {
  var expected = this.rowSpan * this.columnSpan;
  if (!(expected === this._count))
    throw $.$$throw($.UnsupportedError$('grid-template "' + $.S($.StringImplementation_String$fromCharCodes([this._char])) + '"' + ' is not square, expected ' + $.S(expected) + ' cells but got ' + $.S(this._count)));
}
};

$$._GridLocation = {"": ["start?", "length?"],
 "super": "Object",
 start$5: function(arg0, arg1, arg2, arg3, arg4) { return this.start.call$5(arg0, arg1, arg2, arg3, arg4); },
 get$end: function() {
  return $.add(this.start, $.get$length(this));
}
};

$$.SizingFunction = {"": [],
 "super": "Object",
 get$isContentSized: function() {
  return this.get$isMinContentSized() === true || this.get$isMaxContentSized() === true;
},
 get$isMinContentSized: function() {
  return false;
},
 get$isMaxContentSized: function() {
  return false;
},
 get$isFraction: function() {
  return false;
},
 resolveLength$1: function(gridSize) {
  return 0;
},
 get$fractionValue: function() {
  return 0;
},
 clone$0: function() {
  return this;
}
};

$$.FixedSizing = {"": ["units", "length?", "_contentSized"],
 "super": "SizingFunction",
 clone$0: function() {
  return $.FixedSizing$($.get$length(this), this.units);
},
 get$isMinContentSized: function() {
  return this._contentSized;
},
 resolveLength$1: function(gridSize) {
  if (typeof gridSize !== 'number')
    return this.resolveLength$1$bailout(1, gridSize, 0);
  var t1 = this.units;
  if (typeof t1 !== 'string')
    return this.resolveLength$1$bailout(2, gridSize, t1);
  if (t1 === '%') {
    this._contentSized = false;
    t1 = $.get$length(this);
    if (typeof t1 !== 'number')
      return this.resolveLength$1$bailout(3, gridSize, t1);
    return t1 / 100 * gridSize;
  } else
    return $.get$length(this);
},
 resolveLength$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      var gridSize = env0;
      break;
    case 2:
      gridSize = env0;
      t1 = env1;
      break;
    case 3:
      gridSize = env0;
      t1 = env1;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      var t1 = this.units;
    case 2:
      state0 = 0;
    case 3:
      if (state0 === 3 || state0 === 0 && $.eqB(t1, '%'))
        switch (state0) {
          case 0:
            if (gridSize == null) {
              this._contentSized = true;
              return 0;
            }
            this._contentSized = false;
            t1 = $.get$length(this);
          case 3:
            state0 = 0;
            return $.mul($.div(t1, 100), gridSize);
        }
      else
        return $.get$length(this);
  }
},
 toString$0: function() {
  return 'FixedSizing: ' + $.S($.get$length(this)) + $.S(this.units) + ' ' + $.S(this._contentSized);
},
 FixedSizing$2: function(length$, units) {
  var t1 = this.units;
  if (!$.eqB(t1, 'px') && !$.eqB(t1, '%'))
    throw $.$$throw($.UnsupportedError$('Units other than px and %'));
}
};

$$.FractionSizing = {"": ["fractionValue?"],
 "super": "SizingFunction",
 get$isFraction: function() {
  return true;
},
 toString$0: function() {
  return 'FixedSizing: ' + $.S(this.fractionValue) + 'fr';
}
};

$$.MinContentSizing = {"": [],
 "super": "SizingFunction",
 get$isMinContentSized: function() {
  return true;
},
 toString$0: function() {
  return 'MinContentSizing';
}
};

$$.MaxContentSizing = {"": [],
 "super": "SizingFunction",
 get$isMaxContentSized: function() {
  return true;
},
 toString$0: function() {
  return 'MaxContentSizing';
}
};

$$.TrackSizing = {"": ["min?", "max?"],
 "super": "Object",
 clone$0: function() {
  return $.TrackSizing$(this.min.clone$0(), this.max.clone$0());
}
};

$$._UsedBreadthAccumulator = {"": [],
 "super": "Object",
 setSize$2: function(t, value) {
  t.set$usedBreadth(value);
},
 getSize$1: function(t) {
  return t.get$usedBreadth();
},
 getSizingFunction$1: function(t) {
  return t.get$minSizing();
}
};

$$._MaxBreadthAccumulator = {"": [],
 "super": "Object",
 setSize$2: function(t, value) {
  t.set$maxBreadth(value);
},
 getSize$1: function(t) {
  return t.get$maxBreadth();
},
 getSizingFunction$1: function(t) {
  return t.get$maxSizing();
}
};

$$.LayoutParams = {"": ["style?"],
 "super": "Object",
 get$layer: function() {
  return 0;
},
 LayoutParams$1: function(node) {
  this.style = node.get$computedStyle();
}
};

$$.Dimension = {"": ["name?"],
 "super": "Object"
};

$$.ContentSizeMode = {"": ["name?"],
 "super": "Object"
};

$$.ViewLayout = {"": ["layoutParams=", "_cachedViewRect", "view?", "_measuredLeft", "_measuredTop", "_measuredWidth", "_measuredHeight"],
 "super": "Object",
 get$_style: function() {
  return this.layoutParams.get$style().get$value();
},
 cacheExistingBrowserLayout$0: function() {
  this._cachedViewRect = this.view.get$node().get$rect();
},
 get$currentWidth: function() {
  return this._cachedViewRect.get$value().get$offset().get$width();
},
 get$currentHeight: function() {
  return this._cachedViewRect.get$value().get$offset().get$height();
},
 get$borderLeftWidth: function() {
  return $.ViewLayout__toPixels(this.get$_style().get$borderLeftWidth());
},
 get$borderTopWidth: function() {
  return $.ViewLayout__toPixels(this.get$_style().get$borderTopWidth());
},
 get$borderRightWidth: function() {
  return $.ViewLayout__toPixels(this.get$_style().get$borderRightWidth());
},
 get$borderBottomWidth: function() {
  return $.ViewLayout__toPixels(this.get$_style().get$borderBottomWidth());
},
 get$borderWidth: function() {
  return $.add(this.get$borderLeftWidth(), this.get$borderRightWidth());
},
 get$borderHeight: function() {
  return $.add(this.get$borderTopWidth(), this.get$borderBottomWidth());
},
 measureLayout$2: function(size, changed) {
},
 setBounds$4: function(left, top$, width, height) {
  if (typeof width !== 'number')
    return this.setBounds$4$bailout(1, left, top$, width, height);
  if (typeof height !== 'number')
    return this.setBounds$4$bailout(1, left, top$, width, height);
  this._measuredLeft = left;
  this._measuredTop = top$;
  var t1 = this.get$borderWidth();
  if (typeof t1 !== 'number')
    return this.setBounds$4$bailout(2, t1, width, height, 0);
  this._measuredWidth = width - t1;
  var t3 = this.get$borderHeight();
  if (typeof t3 !== 'number')
    return this.setBounds$4$bailout(3, height, t3, 0, 0);
  this._measuredHeight = height - t3;
  var completer = $.Completer_Completer();
  completer.complete$1($.Size$(this._measuredWidth, this._measuredHeight));
  this.measureLayout$2(completer.get$future(), null);
},
 setBounds$4$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      var left = env0;
      var top$ = env1;
      var width = env2;
      var height = env3;
      break;
    case 2:
      t1 = env0;
      width = env1;
      height = env2;
      break;
    case 3:
      height = env0;
      t3 = env1;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      this._measuredLeft = left;
      this._measuredTop = top$;
      var t1 = this.get$borderWidth();
    case 2:
      state0 = 0;
      this._measuredWidth = $.sub(width, t1);
      var t3 = this.get$borderHeight();
    case 3:
      state0 = 0;
      this._measuredHeight = $.sub(height, t3);
      var completer = $.Completer_Completer();
      completer.complete$1($.Size$(this._measuredWidth, this._measuredHeight));
      this.measureLayout$2(completer.get$future(), null);
  }
},
 applyLayout$0: function() {
  if (!(this._measuredLeft == null)) {
    var t1 = this.view;
    var style = t1.get$node().get$style();
    style.set$position('absolute');
    style.set$left($.S(this._measuredLeft) + 'px');
    style.set$top($.S(this._measuredTop) + 'px');
    style.set$width($.S(this._measuredWidth) + 'px');
    style.set$height($.S(this._measuredHeight) + 'px');
    style.set$zIndex($.S(this.layoutParams.get$layer()));
    this._measuredLeft = null;
    this._measuredTop = null;
    this._measuredWidth = null;
    this._measuredHeight = null;
    if ($.ViewLayout_hasCustomLayout(t1) !== true)
      for (var t2 = $.iterator(t1.get$childViews()); t2.get$hasNext() === true;)
        t2.next$0().doLayout$0();
  }
},
 measureContent$3: function(parent$, dimension, mode) {
  if ($.eqB(dimension, $.CTC24))
    return this.measureWidth$2(parent$, mode);
  else if ($.eqB(dimension, $.CTC25))
    return this.measureHeight$2(parent$, mode);
},
 measureWidth$2: function(parent$, mode) {
  var style = this.layoutParams.get$style().get$value();
  if ($.eqB(mode, $.CTC26))
    return $.ViewLayout__styleToPixels(style.get$minWidth(), this.get$currentWidth(), parent$.get$currentWidth());
  else if ($.eqB(mode, $.CTC28))
    return $.ViewLayout__styleToPixels(style.get$maxWidth(), this.get$currentWidth(), parent$.get$currentWidth());
},
 measureHeight$2: function(parent$, mode) {
  var style = this.layoutParams.get$style().get$value();
  if ($.eqB(mode, $.CTC26))
    return $.ViewLayout__styleToPixels(style.get$minHeight(), this.get$currentHeight(), parent$.get$currentHeight());
  else if ($.eqB(mode, $.CTC28))
    return $.ViewLayout__styleToPixels(style.get$maxHeight(), this.get$currentHeight(), parent$.get$currentHeight());
}
};

$$.App_run_anon = {"": ["this_0"],
 "super": "Closure",
 call$0: function() {
  return this.this_0.onLoad$0();
}
};

$$.App_run_anon0 = {"": ["this_1"],
 "super": "Closure",
 call$1: function(event$) {
  return this.this_1.onLoad$0();
}
};

$$.EventBatch_wrap_anon = {"": ["userFunction_0"],
 "super": "Closure",
 call$1: function(e) {
  if ($.EventBatch_current == null) {
    var batch = $.EventBatch$_internal();
    $.EventBatch_current = batch;
    var result = null;
    try {
      result = this.userFunction_0.call$1(e);
    } finally {
      $.EventBatch_current = null;
      batch._notify$0();
    }
    return result;
  } else
    return this.userFunction_0.call$1(e);
}
};

$$._StorageImpl_values_anon = {"": ["values_0"],
 "super": "Closure",
 call$2: function(k, v) {
  return $.add$1(this.values_0, v);
}
};

$$.Maps__emitMap_anon = {"": ["visiting_3", "result_2", "box_0"],
 "super": "Closure",
 call$2: function(k, v) {
  var t1 = this.box_0;
  if (t1.first_1 !== true)
    $.add$1(this.result_2, ', ');
  t1.first_1 = false;
  t1 = this.result_2;
  var t2 = this.visiting_3;
  $.Collections__emitObject(k, t1, t2);
  $.add$1(t1, ': ');
  $.Collections__emitObject(v, t1, t2);
}
};

$$._convertDartToNative_PrepareForStructuredClone_findSlot = {"": ["copies_3", "values_2"],
 "super": "Closure",
 call$1: function(value) {
  var t1 = this.values_2;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.call$1$bailout(1, value, t1);
  var length$ = t1.length;
  for (var i = 0; i < length$; ++i) {
    var t2 = t1[i];
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_3, null);
  return length$;
},
 call$1$bailout: function(state0, value, t1) {
  var length$ = $.get$length(t1);
  for (var i = 0; $.ltB(i, length$); ++i) {
    var t2 = $.index(t1, i);
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_3, null);
  return length$;
}
};

$$._convertDartToNative_PrepareForStructuredClone_readSlot = {"": ["copies_4"],
 "super": "Closure",
 call$1: function(i) {
  return $.index(this.copies_4, i);
}
};

$$._convertDartToNative_PrepareForStructuredClone_writeSlot = {"": ["copies_5"],
 "super": "Closure",
 call$2: function(i, x) {
  $.indexSet(this.copies_5, i, x);
}
};

$$._convertDartToNative_PrepareForStructuredClone_cleanupSlots = {"": [],
 "super": "Closure",
 call$0: function() {
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk = {"": ["writeSlot_8", "readSlot_7", "findSlot_6"],
 "super": "Closure",
 call$1: function(e) {
  var t1 = {};
  if (e == null)
    return e;
  if (typeof e === 'boolean')
    return e;
  if (typeof e === 'number')
    return e;
  if (typeof e === 'string')
    return e;
  if (typeof e === 'object' && e !== null && !!e.is$Date)
    throw $.$$throw($.CTC1);
  if (typeof e === 'object' && e !== null && !!e.is$RegExp)
    throw $.$$throw($.CTC2);
  if (typeof e === 'object' && e !== null && e.is$_FileImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$File())
    throw $.$$throw($.CTC3);
  if (typeof e === 'object' && e !== null && e.is$_BlobImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$Blob())
    throw $.$$throw($.CTC4);
  if (typeof e === 'object' && e !== null && e.is$_FileListImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$_ImageDataImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ImageData())
    throw $.$$throw($.CTC5);
  if (typeof e === 'object' && e !== null && e.is$_ArrayBufferImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
    throw $.$$throw($.CTC6);
  if (typeof e === 'object' && e !== null && e.is$_ArrayBufferViewImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
    throw $.$$throw($.CTC7);
  if (typeof e === 'object' && e !== null && e.is$Map()) {
    var slot = this.findSlot_6.call$1(e);
    t1.copy_1 = this.readSlot_7.call$1(slot);
    var t2 = t1.copy_1;
    if (!(t2 == null))
      return t2;
    t1.copy_1 = {};
    this.writeSlot_8.call$2(slot, t1.copy_1);
    e.forEach$1(new $._convertDartToNative_PrepareForStructuredClone_walk_anon(this, t1));
    return t1.copy_1;
  }
  if (typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List())) {
    if (typeof e !== 'object' || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(1, e, 0, 0, 0, 0, 0, 0);
    var length$ = e.length;
    slot = this.findSlot_6.call$1(e);
    t2 = this.readSlot_7;
    var copy = t2.call$1(slot);
    if (!(copy == null)) {
      if (true === copy) {
        copy = new Array(length$);
        this.writeSlot_8.call$2(slot, copy);
      }
      return copy;
    }
    t1 = e instanceof Array && !!!(e.immutable$list);
    var t3 = this.writeSlot_8;
    if (t1) {
      t3.call$2(slot, true);
      for (var i = 0; i < length$; ++i) {
        if (i >= e.length)
          throw $.ioore(i);
        var element = e[i];
        var elementCopy = this.call$1(element);
        if (!(elementCopy == null ? element == null : elementCopy === element)) {
          copy = t2.call$1(slot);
          if (true === copy) {
            copy = new Array(length$);
            t3.call$2(slot, copy);
          }
          if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
            return this.call$1$bailout(2, e, t3, i, length$, elementCopy, slot, copy);
          for (var t1 = e.length, t2 = copy.length, j = 0; j < i; ++j) {
            if (j >= t1)
              throw $.ioore(j);
            var t4 = e[j];
            if (j >= t2)
              throw $.ioore(j);
            copy[j] = t4;
          }
          if (i >= t2)
            throw $.ioore(i);
          copy[i] = elementCopy;
          ++i;
          break;
        }
      }
      if (copy == null) {
        t3.call$2(slot, e);
        copy = e;
      }
    } else {
      copy = new Array(length$);
      t3.call$2(slot, copy);
      i = 0;
    }
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(3, e, copy, i, length$, 0, 0, 0);
    for (; i < length$; ++i) {
      if (i >= e.length)
        throw $.ioore(i);
      t1 = this.call$1(e[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  }
  throw $.$$throw($.CTC8);
},
 call$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6) {
  switch (state0) {
    case 1:
      var e = env0;
      break;
    case 2:
      e = env0;
      t3 = env1;
      i = env2;
      length$ = env3;
      elementCopy = env4;
      slot = env5;
      copy = env6;
      break;
    case 3:
      e = env0;
      copy = env1;
      i = env2;
      length$ = env3;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = {};
      if (e == null)
        return e;
      if (typeof e === 'boolean')
        return e;
      if (typeof e === 'number')
        return e;
      if (typeof e === 'string')
        return e;
      if (typeof e === 'object' && e !== null && !!e.is$Date)
        throw $.$$throw($.CTC1);
      if (typeof e === 'object' && e !== null && !!e.is$RegExp)
        throw $.$$throw($.CTC2);
      if (typeof e === 'object' && e !== null && e.is$_FileImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$File())
        throw $.$$throw($.CTC3);
      if (typeof e === 'object' && e !== null && e.is$_BlobImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$Blob())
        throw $.$$throw($.CTC4);
      if (typeof e === 'object' && e !== null && e.is$_FileListImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$_ImageDataImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ImageData())
        throw $.$$throw($.CTC5);
      if (typeof e === 'object' && e !== null && e.is$_ArrayBufferImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
        throw $.$$throw($.CTC6);
      if (typeof e === 'object' && e !== null && e.is$_ArrayBufferViewImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
        throw $.$$throw($.CTC7);
      if (typeof e === 'object' && e !== null && e.is$Map()) {
        var slot = this.findSlot_6.call$1(e);
        t1.copy_1 = this.readSlot_7.call$1(slot);
        var t2 = t1.copy_1;
        if (!(t2 == null))
          return t2;
        t1.copy_1 = {};
        this.writeSlot_8.call$2(slot, t1.copy_1);
        e.forEach$1(new $._convertDartToNative_PrepareForStructuredClone_walk_anon(this, t1));
        return t1.copy_1;
      }
    default:
      if (state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List()))
        switch (state0) {
          case 0:
          case 1:
            state0 = 0;
            var length$ = $.get$length(e);
            slot = this.findSlot_6.call$1(e);
            t2 = this.readSlot_7;
            var copy = t2.call$1(slot);
            if (!(copy == null)) {
              if (true === copy) {
                copy = new Array(length$);
                this.writeSlot_8.call$2(slot, copy);
              }
              return copy;
            }
            t1 = e instanceof Array && !!!(e.immutable$list);
            var t3 = this.writeSlot_8;
          case 2:
            if (state0 === 2 || state0 === 0 && t1)
              switch (state0) {
                case 0:
                  t3.call$2(slot, true);
                  var i = 0;
                case 2:
                  L0:
                    while (true)
                      switch (state0) {
                        case 0:
                          if (!$.ltB(i, length$))
                            break L0;
                          var element = $.index(e, i);
                          var elementCopy = this.call$1(element);
                        case 2:
                          if (state0 === 2 || state0 === 0 && !(elementCopy == null ? element == null : elementCopy === element))
                            switch (state0) {
                              case 0:
                                copy = t2.call$1(slot);
                                if (true === copy) {
                                  copy = new Array(length$);
                                  t3.call$2(slot, copy);
                                }
                              case 2:
                                state0 = 0;
                                for (var j = 0; j < i; ++j)
                                  $.indexSet(copy, j, $.index(e, j));
                                $.indexSet(copy, i, elementCopy);
                                ++i;
                                break L0;
                            }
                          ++i;
                      }
                  if (copy == null) {
                    t3.call$2(slot, e);
                    copy = e;
                  }
              }
            else {
              copy = new Array(length$);
              t3.call$2(slot, copy);
              i = 0;
            }
          case 3:
            state0 = 0;
            for (; $.ltB(i, length$); ++i)
              $.indexSet(copy, i, this.call$1($.index(e, i)));
            return copy;
        }
      throw $.$$throw($.CTC8);
  }
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk_anon = {"": ["walk_9", "box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  this.box_0.copy_1[key] = this.walk_9.call$1(value);
}
};

$$.HashMapImplementation_values__ = {"": ["list_2", "box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1 = this.list_2;
  var t2 = this.box_0;
  var t3 = t2.i_1;
  t2.i_1 = $.add(t3, 1);
  $.indexSet(t1, t3, value);
}
};

$$.invokeClosure_anon = {"": ["closure_0"],
 "super": "Closure",
 call$0: function() {
  return this.closure_0.call$0();
}
};

$$.invokeClosure_anon0 = {"": ["arg1_2", "closure_1"],
 "super": "Closure",
 call$0: function() {
  return this.closure_1.call$1(this.arg1_2);
}
};

$$.invokeClosure_anon1 = {"": ["arg1_5", "arg2_4", "closure_3"],
 "super": "Closure",
 call$0: function() {
  return this.closure_3.call$2(this.arg1_5, this.arg2_4);
}
};

$$._FilteredElementList__filtered_anon = {"": [],
 "super": "Closure",
 call$1: function(n) {
  return typeof n === 'object' && n !== null && n.is$Element();
}
};

$$._ChildrenElementList_filter_anon = {"": ["output_1", "f_0"],
 "super": "Closure",
 call$1: function(element) {
  if (this.f_0.call$1(element) === true)
    $.add$1(this.output_1, element);
}
};

$$._FilteredElementList_removeRange_anon = {"": [],
 "super": "Closure",
 call$1: function(el) {
  return el.remove$0();
}
};

$$.ConstantMap_values_anon = {"": ["this_1", "result_0"],
 "super": "Closure",
 call$1: function(key) {
  return $.add$1(this.result_0, $.index(this.this_1, key));
}
};

$$.ConstantMap_forEach_anon = {"": ["this_1", "f_0"],
 "super": "Closure",
 call$1: function(key) {
  return this.f_0.call$2(key, $.index(this.this_1, key));
}
};

$$.MainView_afterRender_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  return this.this_0._swapLoggedInView$0();
}
};

$$.AbstractObservable_recordEvent_anon = {"": ["event_1", "this_0"],
 "super": "Closure",
 call$1: function(ignore) {
  this.this_0.recordEvent$1(this.event_1);
}
};

$$._convertNativeToDart_AcceptStructuredClone_findSlot = {"": ["copies_1", "values_0"],
 "super": "Closure",
 call$1: function(value) {
  var t1 = this.values_0;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.call$1$bailout(1, value, t1);
  var length$ = t1.length;
  for (var i = 0; i < length$; ++i) {
    var t2 = t1[i];
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_1, null);
  return length$;
},
 call$1$bailout: function(state0, value, t1) {
  var length$ = $.get$length(t1);
  for (var i = 0; $.ltB(i, length$); ++i) {
    var t2 = $.index(t1, i);
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_1, null);
  return length$;
}
};

$$._convertNativeToDart_AcceptStructuredClone_readSlot = {"": ["copies_2"],
 "super": "Closure",
 call$1: function(i) {
  return $.index(this.copies_2, i);
}
};

$$._convertNativeToDart_AcceptStructuredClone_writeSlot = {"": ["copies_3"],
 "super": "Closure",
 call$2: function(i, x) {
  $.indexSet(this.copies_3, i, x);
}
};

$$._convertNativeToDart_AcceptStructuredClone_walk = {"": ["mustCopy_7", "writeSlot_6", "readSlot_5", "findSlot_4"],
 "super": "Closure",
 call$1: function(e) {
  if (typeof e !== 'object' || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
    return this.call$1$bailout(1, e, 0, 0, 0);
  if (e instanceof Date)
    throw $.$$throw($.CTC1);
  if (e instanceof RegExp)
    throw $.$$throw($.CTC2);
  if ($._isJavaScriptSimpleObject(e)) {
    var slot = this.findSlot_4.call$1(e);
    var copy = this.readSlot_5.call$1(slot);
    if (!(copy == null))
      return copy;
    copy = $.makeLiteralMap([]);
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(2, e, slot, copy, 0);
    this.writeSlot_6.call$2(slot, copy);
    for (var t1 = $.iterator(Object.keys(e)); t1.get$hasNext() === true;) {
      var t2 = t1.next$0();
      var t3 = this.call$1(e[t2]);
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= copy.length)
        throw $.ioore(t2);
      copy[t2] = t3;
    }
    return copy;
  }
  if (e instanceof Array) {
    slot = this.findSlot_4.call$1(e);
    copy = this.readSlot_5.call$1(slot);
    if (!(copy == null))
      return copy;
    var length$ = e.length;
    if (this.mustCopy_7 === true)
      copy = new Array(length$);
    else
      copy = e;
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(3, e, length$, copy, slot);
    this.writeSlot_6.call$2(slot, copy);
    for (var i = 0; i < length$; ++i) {
      if (i >= e.length)
        throw $.ioore(i);
      t1 = this.call$1(e[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  }
  return e;
},
 call$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      var e = env0;
      break;
    case 2:
      e = env0;
      slot = env1;
      copy = env2;
      break;
    case 3:
      e = env0;
      length$ = env1;
      copy = env2;
      slot = env3;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      if (e == null)
        return e;
      if (typeof e === 'boolean')
        return e;
      if (typeof e === 'number')
        return e;
      if (typeof e === 'string')
        return e;
      if (e instanceof Date)
        throw $.$$throw($.CTC1);
      if (e instanceof RegExp)
        throw $.$$throw($.CTC2);
    case 2:
      if (state0 === 2 || state0 === 0 && $._isJavaScriptSimpleObject(e))
        switch (state0) {
          case 0:
            var slot = this.findSlot_4.call$1(e);
            var copy = this.readSlot_5.call$1(slot);
            if (!(copy == null))
              return copy;
            copy = $.makeLiteralMap([]);
          case 2:
            state0 = 0;
            this.writeSlot_6.call$2(slot, copy);
            for (var t1 = $.iterator(Object.keys(e)); t1.get$hasNext() === true;) {
              var t2 = t1.next$0();
              $.indexSet(copy, t2, this.call$1(e[t2]));
            }
            return copy;
        }
    case 3:
      if (state0 === 3 || state0 === 0 && e instanceof Array)
        switch (state0) {
          case 0:
            slot = this.findSlot_4.call$1(e);
            copy = this.readSlot_5.call$1(slot);
            if (!(copy == null))
              return copy;
            var length$ = $.get$length(e);
            copy = this.mustCopy_7 === true ? new Array(length$) : e;
          case 3:
            state0 = 0;
            this.writeSlot_6.call$2(slot, copy);
            for (var i = 0; $.ltB(i, length$); ++i)
              $.indexSet(copy, i, this.call$1($.index(e, i)));
            return copy;
        }
      return e;
  }
}
};

$$.DoubleLinkedQueue_length__ = {"": ["box_0"],
 "super": "Closure",
 call$1: function(element) {
  var t1 = this.box_0;
  t1.counter_1 = $.add(t1.counter_1, 1);
}
};

$$.LinkedHashMapImplementation_forEach__ = {"": ["f_0"],
 "super": "Closure",
 call$1: function(entry) {
  this.f_0.call$2(entry.get$key(), entry.get$value());
}
};

$$._convertNativeToDart_IDBKey_containsDate = {"": [],
 "super": "Closure",
 call$1: function(object) {
  if (object instanceof Date)
    return true;
  if (typeof object === 'object' && object !== null && (object.constructor === Array || object.is$List())) {
    if (typeof object !== 'object' || object === null || object.constructor !== Array && !object.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(1, object);
    for (var i = 0; i < object.length; ++i)
      if (this.call$1(object[i]) === true)
        return true;
  }
  return false;
},
 call$1$bailout: function(state0, env0) {
  switch (state0) {
    case 1:
      var object = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (object instanceof Date)
        return true;
    case 1:
      if (state0 === 1 || state0 === 0 && typeof object === 'object' && object !== null && (object.constructor === Array || object.is$List()))
        switch (state0) {
          case 0:
          case 1:
            state0 = 0;
            for (var i = 0; $.ltB(i, $.get$length(object)); ++i)
              if (this.call$1($.index(object, i)) === true)
                return true;
        }
      return false;
  }
}
};

$$.LinkedHashMapImplementation_values__ = {"": ["box_0", "list_2"],
 "super": "Closure",
 call$1: function(entry) {
  var t1 = this.list_2;
  var t2 = this.box_0;
  var t3 = t2.index_1;
  t2.index_1 = $.add(t3, 1);
  $.indexSet(t1, t3, entry.get$value());
}
};

$$.LoginView__loginFormSubmitted_anon = {"": ["this_1", "passwordInput_0"],
 "super": "Closure",
 call$1: function(success) {
  this.passwordInput_0.set$value('');
  var t1 = success !== true;
  var t2 = this.this_1;
  if (t1)
    t2.get$_state().get$errorMessage().set$value('Username and password did not match. Please try again.');
  else
    t2.get$_state().get$errorMessage().set$value(null);
}
};

$$.UdjApp_login_anon = {"": ["username_3", "request_2", "callback_1", "this_0"],
 "super": "Closure",
 call$1: function(e) {
  var t1 = this.request_2;
  var t2 = $.eqB(t1.get$status(), 200);
  var t3 = this.callback_1;
  if (t2) {
    var data = $.JSON_parse(t1.get$responseText());
    t2 = $.Session$($.index(data, 'ticket_hash'), $.index(data, 'user_id'), this.username_3);
    var t4 = this.this_0;
    t4.get$state().get$session().set$value(t2);
    t4.get$state().get$loggedIn().set$value(true);
    t3.call$1(true);
  } else
    t3.call$1(false);
}
};

$$.RequestHelper_encodeMap_anon = {"": ["data_0"],
 "super": "Closure",
 call$1: function(k) {
  return $.S($.encodeUriComponent(k)) + '=' + $.S($.encodeUriComponent($.index(this.data_0, k)));
}
};

$$._StorageImpl_keys_anon = {"": ["keys_0"],
 "super": "Closure",
 call$2: function(k, v) {
  return $.add$1(this.keys_0, k);
}
};

$$.HashMapImplementation_keys__ = {"": ["box_0", "list_2"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1 = this.list_2;
  var t2 = this.box_0;
  var t3 = t2.i_10;
  t2.i_10 = $.add(t3, 1);
  $.indexSet(t1, t3, key);
}
};

$$.LinkedHashMapImplementation_keys__ = {"": ["box_0", "list_2"],
 "super": "Closure",
 call$1: function(entry) {
  var t1 = this.list_2;
  var t2 = this.box_0;
  var t3 = t2.index_10;
  t2.index_10 = $.add(t3, 1);
  $.indexSet(t1, t3, entry.get$key());
}
};

$$._uriEncode_anon = {"": ["hex_0"],
 "super": "Closure",
 call$1: function(v) {
  var t1 = this.hex_0;
  return '%' + $.S($.index(t1, $.shr(v, 4))) + $.S($.index(t1, $.and(v, 15)));
}
};

$$.anon = {"": ["this_0"],
 "super": "Closure",
 call$0: function() {
  this.this_0._showScrollbars$1(false);
}
};

$$.anon0 = {"": ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  if (!(!$.eqB(e.get$deltaY(), 0) && this.this_0.get$verticalEnabled() === true))
    var t1 = !$.eqB(e.get$deltaX(), 0) && this.this_0.get$horizontalEnabled() === true;
  else
    t1 = true;
  if (t1) {
    t1 = this.this_0;
    var x = t1.get$horizontalEnabled() === true ? e.get$deltaX() : 0;
    t1.throwDelta$3(x, t1.get$verticalEnabled() === true ? e.get$deltaY() : 0, 0.84);
    e.preventDefault$0();
  }
}
};

$$.anon1 = {"": ["this_1"],
 "super": "Closure",
 call$1: function(e) {
  var handled = false;
  switch (e.get$keyCode()) {
    case 33:
      var t1 = this.this_1;
      t1.throwDelta$2(0, $.mul(t1.get$_scrollSize().get$height(), 0.85));
      handled = true;
      break;
    case 34:
      t1 = this.this_1;
      t1.throwDelta$2(0, $.mul($.neg(t1.get$_scrollSize().get$height()), 0.85));
      handled = true;
      break;
    case 35:
      t1 = this.this_1;
      t1.throwTo$3(t1.get$_maxPoint().get$x(), t1.get$_minPoint().get$y(), 0.84);
      handled = true;
      break;
    case 36:
      t1 = this.this_1;
      t1.throwTo$3(t1.get$_maxPoint().get$x(), t1.get$_maxPoint().get$y(), 0.84);
      handled = true;
      break;
  }
  if (handled)
    e.preventDefault$0();
}
};

$$.anon2 = {"": [],
 "super": "Closure",
 call$1: function(style) {
}
};

$$.Scroller__getOffsetFunction_anon = {"": [],
 "super": "Closure",
 call$3: function(el, x, y) {
  $.FxUtil_setTranslate(el, x, y, 0);
}
};

$$.Scroller__getOffsetFunction_anon0 = {"": [],
 "super": "Closure",
 call$3: function(el, x, y) {
  $.FxUtil_setLeftAndTop(el, x, y);
}
};

$$.Scroller_throwTo_anon = {"": ["x_4", "box_0", "y_3", "this_2"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.this_2;
  var snappedTarget = t1._snapToBounds$2(this.x_4, this.y_3);
  var t2 = this.box_0;
  if (t2.decelerationFactor_1 == null)
    t2.decelerationFactor_1 = t1.get$_momentum().get$decelerationFactor();
  if (!$.eqB(snappedTarget, t1.get$currentTarget())) {
    t1.get$_momentum().abort$0();
    t1._startDeceleration$2(t1.get$_momentum().calculateVelocity$3(t1.get$_contentOffset(), snappedTarget, t2.decelerationFactor_1), t2.decelerationFactor_1);
    t1.get$onDecelStart().dispatch$1($.Event_Event('scroller:decel_start', true, true));
  }
}
};

$$.Scroller_reconfigure_anon = {"": ["callback_1", "this_0"],
 "super": "Closure",
 call$0: function() {
  this.this_0._snapContentOffsetToBounds$0();
  this.callback_1.call$0();
}
};

$$.Scroller__resize_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(size) {
  this.this_0.set$_contentSize(size);
}
};

$$.Scroller__resize_anon0 = {"": ["this_1"],
 "super": "Closure",
 call$1: function(rect) {
  var t1 = $.Size$(rect.get$scroll().get$width(), rect.get$scroll().get$height());
  this.this_1.set$_contentSize(t1);
}
};

$$.Scroller__resize_anon1 = {"": ["frameRect_4", "callback_3", "this_2"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.frameRect_4;
  var t2 = $.Size$(t1.get$value().get$offset().get$width(), t1.get$value().get$offset().get$height());
  var t3 = this.this_2;
  t3.set$_scrollSize(t2);
  var adjusted = t3._getAdjustedContentSize$0();
  t3.set$_maxPoint($.Coordinate$($.neg(t3.get$_maxOffset().get$x()), $.neg(t3.get$_maxOffset().get$y())));
  t3.set$_minPoint($.Coordinate$($.min($.add($.sub(t3.get$_scrollSize().get$width(), adjusted.get$width()), t3.get$_minOffset().get$x()), t3.get$_maxPoint().get$x()), $.min($.add($.sub(t3.get$_scrollSize().get$height(), adjusted.get$height()), t3.get$_minOffset().get$y()), t3.get$_maxPoint().get$y())));
  this.callback_3.call$0();
}
};

$$.joinFutures_helper = {"": ["callback_3", "box_0", "len_2"],
 "super": "Closure",
 call$1: function(value) {
  var t1 = this.box_0;
  t1.count_1 = $.add(t1.count_1, 1);
  if ($.eqB(t1.count_1, this.len_2))
    this.callback_3.call$0();
}
};

$$._ElementImpl_rect_anon = {"": ["this_0"],
 "super": "Closure",
 call$0: function() {
  return $._ElementRectImpl$(this.this_0);
}
};

$$._MutationObserverImpl_observe_anon = {"": ["parsedOptions_0"],
 "super": "Closure",
 call$2: function(k, v) {
  if ($.CTC16.containsKey$1(k) === true)
    this.parsedOptions_0[k] = true === v;
  else if ($.eqB(k, 'attributeFilter'))
    this.parsedOptions_0[k] = v;
  else
    throw $.$$throw($.ArgumentError$('Illegal MutationObserver.observe option \'' + $.S(k) + '\''));
}
};

$$._MutationObserverImpl_observe_override = {"": ["parsedOptions_1"],
 "super": "Closure",
 call$2: function(key, value) {
  if (!(value == null))
    this.parsedOptions_1[key] = value;
}
};

$$._DocumentFragmentImpl_rect_anon = {"": [],
 "super": "Closure",
 call$0: function() {
  return $.CTC18;
}
};

$$.AnimationScheduler__setupInterval_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(ignored) {
  this.this_0._lib5_step$0();
}
};

$$.AnimationScheduler__setupInterval_anon0 = {"": ["this_1"],
 "super": "Closure",
 call$0: function() {
  this.this_1._lib5_step$0();
}
};

$$._DateImpl_toString_fourDigits = {"": [],
 "super": "Closure",
 call$1: function(n) {
  var absN = $.abs(n);
  var sign = $.ltB(n, 0) ? '-' : '';
  if ($.geB(absN, 1000))
    return $.S(n);
  if ($.geB(absN, 100))
    return sign + '0' + $.S(absN);
  if ($.geB(absN, 10))
    return sign + '00' + $.S(absN);
  return sign + '000' + $.S(absN);
}
};

$$._DateImpl_toString_threeDigits = {"": [],
 "super": "Closure",
 call$1: function(n) {
  if ($.geB(n, 100))
    return $.S(n);
  if ($.geB(n, 10))
    return '0' + $.S(n);
  return '00' + $.S(n);
}
};

$$._DateImpl_toString_twoDigits = {"": [],
 "super": "Closure",
 call$1: function(n) {
  if ($.geB(n, 10))
    return $.S(n);
  return '0' + $.S(n);
}
};

$$.AnimationScheduler_cancelRequestAnimationFrame_anon = {"": ["id_0"],
 "super": "Closure",
 call$1: function(e) {
  return !$.eqB(e.get$id(), this.id_0);
}
};

$$.SingleDimensionPhysics_solve_anon = {"": ["box_0", "this_3", "customDecelerationFactor__2"],
 "super": "Closure",
 call$1: function(velocity_) {
  var t1 = this.this_3;
  t1.configure$5(null, null, $.round(this.box_0.initialOffset_1), this.customDecelerationFactor__2, velocity_);
  t1.stepAll$0();
  return t1.get$_currentOffset();
}
};

$$._ElementImpl_getComputedStyle_anon = {"": ["pseudoElement_1", "this_0"],
 "super": "Closure",
 call$0: function() {
  return $._window().$dom_getComputedStyle$2(this.this_0, this.pseudoElement_1);
}
};

$$._emptyStyleFuture_anon = {"": [],
 "super": "Closure",
 call$0: function() {
  return $.Element_Element$tag('div').get$style();
}
};

$$.TouchHandler_enable_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  this.this_0._onEnd$2(e.get$timeStamp(), e);
}
};

$$.TouchHandler_enable_anon0 = {"": ["this_1"],
 "super": "Closure",
 call$1: function(e) {
  this.this_1._onStart$1(e);
}
};

$$.TouchHandler_enable_anon1 = {"": ["this_2"],
 "super": "Closure",
 call$1: function(e) {
  this.this_2._onMove$1(e);
}
};

$$._addEventListeners_onEndWrapper = {"": ["box_0"],
 "super": "Closure",
 call$1: function(e) {
  var t1 = this.box_0;
  t1.removeListeners_4.call$0();
  return t1.onEnd_3.call$1(e);
}
};

$$._addEventListeners_onLeaveWrapper = {"": ["box_0"],
 "super": "Closure",
 call$1: function(e) {
  var t1 = this.box_0;
  t1.removeListeners_4.call$0();
  return t1.onEnd_3.call$1(e);
}
};

$$._addEventListeners_onCancelWrapper = {"": ["onCancel_5", "box_0"],
 "super": "Closure",
 call$1: function(e) {
  this.box_0.removeListeners_4.call$0();
  return this.onCancel_5.call$1(e);
}
};

$$._addEventListeners_anon = {"": ["onCancelWrapper_9", "capture_8", "onLeaveWrapper_7", "box_0", "onEndWrapper_6"],
 "super": "Closure",
 call$0: function() {
  var t1 = $.document().get$on().get$touchMove();
  var t2 = this.box_0.onMove_2;
  var t3 = this.capture_8;
  t1.remove$2(t2, t3);
  $.document().get$on().get$touchEnd().remove$2(this.onEndWrapper_6, t3);
  $.document().get$on().get$touchLeave().remove$2(this.onLeaveWrapper_7, t3);
  $.document().get$on().get$touchCancel().remove$2(this.onCancelWrapper_9, t3);
}
};

$$._addEventListeners_anon0 = {"": ["onCancelWrapper_13", "capture_12", "onLeaveWrapper_11", "box_0", "onEndWrapper_10"],
 "super": "Closure",
 call$1: function(e) {
  var t1 = $.document().get$on().get$touchMove();
  var t2 = this.box_0;
  var t3 = t2.onMove_2;
  var t4 = this.capture_12;
  t1.add$2(t3, t4);
  $.document().get$on().get$touchEnd().add$2(this.onEndWrapper_10, t4);
  $.document().get$on().get$touchLeave().add$2(this.onLeaveWrapper_11, t4);
  $.document().get$on().get$touchCancel().add$2(this.onCancelWrapper_13, t4);
  return t2.onStart_1.call$1(e);
}
};

$$._addEventListeners_anon1 = {"": ["onCancelWrapper_16", "capture_15", "box_0", "onEndWrapper_14"],
 "super": "Closure",
 call$0: function() {
  var t1 = $.document().get$on().get$mouseMove();
  var t2 = this.box_0.onMove_2;
  var t3 = this.capture_15;
  t1.remove$2(t2, t3);
  $.document().get$on().get$mouseUp().remove$2(this.onEndWrapper_14, t3);
  $.document().get$on().get$touchCancel().remove$2(this.onCancelWrapper_16, t3);
}
};

$$._addEventListeners_anon2 = {"": ["onCancelWrapper_19", "capture_18", "box_0", "onEndWrapper_17"],
 "super": "Closure",
 call$1: function(e) {
  var t1 = $.document().get$on().get$mouseMove();
  var t2 = this.box_0;
  var t3 = t2.onMove_2;
  var t4 = this.capture_18;
  t1.add$2(t3, t4);
  $.document().get$on().get$mouseUp().add$2(this.onEndWrapper_17, t4);
  $.document().get$on().get$touchCancel().add$2(this.onCancelWrapper_19, t4);
  return t2.onStart_1.call$1(e);
}
};

$$._CssClassSet_clear_anon = {"": [],
 "super": "Closure",
 call$1: function(s) {
  return $.clear(s);
}
};

$$.HashSetImplementation_filter__ = {"": ["result_1", "f_0"],
 "super": "Closure",
 call$2: function(key, value) {
  if (this.f_0.call$1(key) === true)
    $.add$1(this.result_1, key);
}
};

$$.HashSetImplementation_map__ = {"": ["result_1", "f_0"],
 "super": "Closure",
 call$2: function(key, value) {
  $.add$1(this.result_1, this.f_0.call$1(key));
}
};

$$.HashSetImplementation_forEach__ = {"": ["f_0"],
 "super": "Closure",
 call$2: function(key, value) {
  this.f_0.call$1(key);
}
};

$$.HashSetImplementation_addAll__ = {"": ["this_0"],
 "super": "Closure",
 call$1: function(value) {
  this.this_0.add$1(value);
}
};

$$._CssClassSet_addAll_anon = {"": ["collection_0"],
 "super": "Closure",
 call$1: function(s) {
  return $.addAll(s, this.collection_0);
}
};

$$._CssClassSet_add_anon = {"": ["value_0"],
 "super": "Closure",
 call$1: function(s) {
  return $.add$1(s, this.value_0);
}
};

$$.Scroller_onTouchStart_anon = {"": ["this_1", "e_0"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.e_0;
  $.index(t1.get$touches(), 0);
  var t2 = this.this_1;
  if (t2.get$_momentum().get$decelerating() === true) {
    t1.preventDefault$0();
    t1.stopPropagation$0();
    t2.stop$0();
  }
  t2.set$_contentStartOffset(t2.get$_contentOffset().clone$0());
  t2._snapContentOffsetToBounds$0();
}
};

$$.ClickBuster_preventGhostClick_anon = {"": [],
 "super": "Closure",
 call$1: function(e) {
  $.ClickBuster__onClick(e);
}
};

$$.ClickBuster_preventGhostClick_anon0 = {"": [],
 "super": "Closure",
 call$1: function(e) {
  $.ClickBuster__lastPreventedTime = 0;
}
};

$$.ClickBuster_preventGhostClick_anon1 = {"": [],
 "super": "Closure",
 call$1: function(e) {
  $.ClickBuster__onTouchStart(e);
}
};

$$.EventUtil_observe_anon = {"": ["capture_2", "handler_1", "listenerList_0"],
 "super": "Closure",
 call$1: function(e) {
  this.listenerList_0.remove$2(this.handler_1, this.capture_2);
}
};

$$.EventUtil_observe_anon0 = {"": ["capture_5", "handler_4", "listenerList_3"],
 "super": "Closure",
 call$1: function(e) {
  this.listenerList_3.add$2(this.handler_4, this.capture_5);
}
};

$$.mouseToTouchCallback_anon = {"": ["callback_0"],
 "super": "Closure",
 call$1: function(e) {
  var touches = [];
  var targetTouches = [];
  var changedTouches = [];
  var mockTouchList = [$.MockTouch$(e)];
  if ($.eqB(e.get$type(), 'mouseup'))
    changedTouches = mockTouchList;
  else {
    targetTouches = mockTouchList;
    touches = targetTouches;
  }
  this.callback_0.call$1($.MockTouchEvent$(e, touches, targetTouches, changedTouches));
  e.preventDefault$0();
}
};

$$.ClickBuster__onTouchStart_anon = {"": ["coord_0"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.coord_0;
  $.ClickBuster__removeCoordinate(t1.get$x(), t1.get$y());
}
};

$$.Scrollbar_initialize_anon = {"": ["this_1", "scrollerEl_0"],
 "super": "Closure",
 call$1: function(e) {
  if ($.contains$1(this.this_1.get$_frame(), $.document().get$activeElement()) !== true)
    this.scrollerEl_0.focus$0();
}
};

$$.Scrollbar_initialize_anon0 = {"": ["this_3", "scrollerEl_2"],
 "super": "Closure",
 call$1: function(e) {
  var activeElement = $.document().get$activeElement();
  if (!(typeof activeElement === 'object' && activeElement !== null && activeElement.is$BodyElement()))
    var t1 = $.contains$1(this.this_3.get$_frame(), activeElement) !== true && typeof activeElement === 'object' && activeElement !== null && activeElement.is$DivElement();
  else
    t1 = true;
  if (t1)
    this.scrollerEl_2.focus$0();
  t1 = this.this_3;
  if ($.eqB(t1.get$_hovering(), false)) {
    t1.set$_hovering(true);
    t1._cancelTimeout$0();
    t1._showScrollbars$1(true);
    t1.refresh$0();
  }
}
};

$$.Scrollbar_initialize_anon1 = {"": ["this_4"],
 "super": "Closure",
 call$1: function(e) {
  var t1 = this.this_4;
  t1.set$_hovering(false);
  if (t1.get$_scrollInProgress() !== true && t1.get$_timerId() == null)
    t1._boundHideFn$0();
}
};

$$.Scrollbar_refresh_anon = {"": ["this_0"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.this_0;
  t1.updateScrollbars$2(t1.get$_scroller().getHorizontalOffset$0(), t1.get$_scroller().getVerticalOffset$0());
}
};

$$.ScrollWatcher_initialize_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  this.this_0._onContentMoved$1(e);
}
};

$$.View_doLayout_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(changed) {
  if (changed === true)
    this.this_0._applyLayoutToChildren$0();
}
};

$$.View__measureLayout_anon = {"": ["changed_0"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.changed_0;
  if (t1.get$future().get$isComplete() !== true)
    t1.complete$1(false);
}
};

$$.View__measureLayoutHelper_anon = {"": ["sizeCompleter_0"],
 "super": "Closure",
 call$1: function(rect) {
  this.sizeCompleter_0.complete$1($.Size$(rect.get$client().get$width(), rect.get$client().get$height()));
}
};

$$.GridLayout_measureLayout_anon = {"": ["size_2", "changed_1", "this_0"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.size_2;
  var t2 = t1.get$value().get$width();
  var t3 = this.this_0;
  t3.set$_gridWidth(t2);
  t3.set$_gridHeight(t1.get$value().get$height());
  if ($.gtB($.get$length(t3.get$_rowTracks()), 0) && $.gtB($.get$length(t3.get$_columnTracks()), 0)) {
    t3._measureTracks$0();
    t3._setBoundsOfChildren$0();
    t1 = this.changed_1;
    if (!(t1 == null))
      t1.complete$1(true);
  }
}
};

$$.GridLayout__ensureAllTracks_anon = {"": [],
 "super": "Closure",
 call$1: function(view_) {
  return view_.get$layout();
}
};

$$.GridLayout__setBoundsOfChildren_anon = {"": [],
 "super": "Closure",
 call$1: function(view_) {
  return view_.get$layout();
}
};

$$.GridLayout__computeUsedBreadthOfTracks_anon = {"": [],
 "super": "Closure",
 call$1: function(view_) {
  return view_.get$layout();
}
};

$$.GridLayout__computeUsedBreadthOfTracks_anon0 = {"": ["this_0"],
 "super": "Closure",
 call$1: function(item) {
  return this.this_0._getSpanCount$1(item);
}
};

$$.GridLayout__calcNormalizedFractionBreadth_anon = {"": [],
 "super": "Closure",
 call$1: function(t) {
  return t.get$maxSizing().get$isFraction();
}
};

$$.GridLayout__calcNormalizedFractionBreadth_anon0 = {"": [],
 "super": "Closure",
 call$1: function(t) {
  return t.get$tempBreadth();
}
};

$$.CollectionUtils_sortBy_anon = {"": ["selector_0"],
 "super": "Closure",
 call$2: function(x, y) {
  var t1 = this.selector_0;
  return $.sub(t1.call$1(x), t1.call$1(y));
}
};

$$.CollectionUtils_sortBy_anon0 = {"": [],
 "super": "Closure",
 call$2: function(x, y) {
  return $.sub(x, y);
}
};

$$.GridLayout__distributeSpaceToTracks_anon = {"": ["breadth_0"],
 "super": "Closure",
 call$1: function(t) {
  return $.sub(t.get$maxBreadth(), this.breadth_0.getSize$1(t));
}
};

$$.GridLayout__getRemainingSpace_anon = {"": [],
 "super": "Closure",
 call$1: function(t) {
  return t.get$usedBreadth();
}
};

$$.GridLayout__distributeSpaceBySpanCount_anon = {"": ["this_2", "breadth_1", "sizeMode_0"],
 "super": "Closure",
 call$1: function(item) {
  return $.GridLayout__hasContentSizedTracks(this.this_2._getTracks$1(item), this.sizeMode_0, this.breadth_1);
}
};

$$.GridLayout__hasContentSizedTracks_anon = {"": [],
 "super": "Closure",
 call$1: function(t_) {
  return t_.get$isFractional();
}
};

$$.SliderMenu_enterDocument_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(event$) {
  var t1 = this.this_0;
  t1.set$touchItem(t1.itemOfTouchEvent$1(event$));
  var t2 = t1.get$touchItem();
  if (!(t2 == null))
    t1.selectItemText$1(t2);
  event$.preventDefault$0();
}
};

$$.SliderMenu_enterDocument_anon0 = {"": ["this_1"],
 "super": "Closure",
 call$1: function(event$) {
  var t1 = this.this_1;
  if (!(t1.get$touchItem() == null)) {
    if ($.eqB(t1.itemOfTouchEvent$1(event$), t1.get$touchItem()))
      t1.selectItem$2(t1.get$touchItem(), true);
    else
      t1.selectItemText$1(t1.get$selectedItem());
    t1.set$touchItem(null);
  }
  event$.preventDefault$0();
}
};

$$.SliderMenu_enterDocument_anon1 = {"": ["this_2"],
 "super": "Closure",
 call$1: function(event$) {
  return this.this_2.selectItem$2(event$.get$target(), true);
}
};

$$.SliderMenu_enterDocument_anon2 = {"": ["this_3"],
 "super": "Closure",
 call$1: function(event$) {
  return this.this_3.updateIndicator$1(false);
}
};

$$.SliderMenu_updateIndicator_anon = {"": ["animate_1", "this_0"],
 "super": "Closure",
 call$1: function(rect) {
  var x = $.sub($.add(rect.get$offset().get$left(), $.div(rect.get$offset().get$width(), 2)), 12);
  this.this_0._moveIndicator$2(x, this.animate_1);
}
};

$$.View__hookGlobalLayoutEvents_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  return this.this_0.doLayout$0();
}
};

$$.App_onLoad_anon = {"": [],
 "super": "Closure",
 call$1: function(event$) {
  return event$.preventDefault$0();
}
};

$$.App_onLoad_anon0 = {"": ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  return this.this_0.swapAndReloadCache$0();
}
};

$$.startRootIsolate_anon = {"": [],
 "super": "Closure",
 call$0: function() {
  $._TimerFactory__factory = $._timerFactory;
  return;
}
};

$$._BaseSendPort_call_anon = {"": ["completer_1", "port_0"],
 "super": "Closure",
 call$2: function(value, ignoreReplyTo) {
  this.port_0.close$0();
  var t1 = typeof value === 'object' && value !== null && !!value.is$Exception;
  var t2 = this.completer_1;
  if (t1)
    t2.completeException$1(value);
  else
    t2.complete$1(value);
}
};

$$._WorkerSendPort_send_anon = {"": ["replyTo_2", "message_1", "this_0"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.this_0;
  var t2 = this.replyTo_2;
  t1._checkReplyTo$1(t2);
  var workerMessage = $._serializeMessage($.makeLiteralMap(['command', 'message', 'port', t1, 'msg', this.message_1, 'replyTo', t2]));
  t2 = $._globalState().get$isWorker() === true;
  var t3 = $._globalState;
  if (t2)
    t3().get$mainManager().postMessage$1(workerMessage);
  else
    $.index(t3().get$managers(), t1.get$_workerId()).postMessage$1(workerMessage);
}
};

$$._waitForPendingPorts_anon = {"": ["callback_0"],
 "super": "Closure",
 call$1: function(_) {
  return this.callback_0.call$0();
}
};

$$.Futures_wait_anon = {"": ["pos_5", "box_0", "completer_4", "values_3", "result_2"],
 "super": "Closure",
 call$1: function(value) {
  var t1 = this.values_3;
  $.indexSet(t1, this.pos_5, value);
  var t2 = this.box_0;
  var remaining = $.sub(t2.remaining_1, 1);
  t2.remaining_1 = remaining;
  if ($.eqB(remaining, 0) && this.result_2.get$isComplete() !== true)
    this.completer_4.complete$1(t1);
}
};

$$.Futures_wait_anon0 = {"": ["result_8", "completer_7", "future_6"],
 "super": "Closure",
 call$1: function(exception) {
  if (this.result_8.get$isComplete() !== true)
    this.completer_7.completeException$2(exception, this.future_6.get$stackTrace());
  return true;
}
};

$$._PendingSendPortFinder_visitMap_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  return this.this_0._dispatch$1(e);
}
};

$$._PendingSendPortFinder_visitList_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  return this.this_0._dispatch$1(e);
}
};

$$._NativeJsSendPort_send_anon = {"": ["replyTo_5", "this_4", "message_3"],
 "super": "Closure",
 call$0: function() {
  var t1 = {};
  var t2 = this.this_4;
  var t3 = this.replyTo_5;
  t2._checkReplyTo$1(t3);
  var isolate = $.index($._globalState().get$isolates(), t2.get$_isolateId());
  if (isolate == null)
    return;
  if (t2.get$_receivePort().get$_lib8_callback() == null)
    return;
  var shouldSerialize = !($._globalState().get$currentContext() == null) && !$.eqB($._globalState().get$currentContext().get$id(), t2.get$_isolateId());
  var msg = this.message_3;
  t1.msg_1 = msg;
  t1.reply_2 = t3;
  if (shouldSerialize) {
    t1.msg_1 = $._serializeMessage(t1.msg_1);
    t1.reply_2 = $._serializeMessage(t1.reply_2);
  }
  $._globalState().get$topEventLoop().enqueue$3(isolate, new $._NativeJsSendPort_send_anon0(t1, shouldSerialize, t2), 'receive ' + $.S(msg));
}
};

$$._NativeJsSendPort_send_anon0 = {"": ["box_0", "shouldSerialize_7", "this_6"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.this_6;
  if (!(t1.get$_receivePort().get$_lib8_callback() == null)) {
    if (this.shouldSerialize_7 === true) {
      var t2 = this.box_0;
      t2.msg_1 = $._deserializeMessage(t2.msg_1);
      t2.reply_2 = $._deserializeMessage(t2.reply_2);
    }
    t1 = t1.get$_receivePort();
    t2 = this.box_0;
    t1._lib8_callback$2(t2.msg_1, t2.reply_2);
  }
}
};

$$._Copier_visitMap_anon = {"": ["this_2", "box_0"],
 "super": "Closure",
 call$2: function(key, val) {
  var t1 = this.box_0.copy_10;
  var t2 = this.this_2;
  $.indexSet(t1, t2._dispatch$1(key), t2._dispatch$1(val));
}
};

$$.Scroller_reset_anon = {"": ["this_0"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.this_0;
  return t1._setContentOffset$2(t1.get$_maxPoint().get$x(), t1.get$_maxPoint().get$y());
}
};

$$._EventLoop__runHelper_next = {"": ["this_0"],
 "super": "Closure",
 call$0: function() {
  if (this.this_0.runIteration$0() !== true)
    return;
  $._window0().setTimeout$2(this, 0);
}
};

$$.anon3 = {"": ["this_1", "callback_0"],
 "super": "Closure",
 call$0: function() {
  return this.callback_0.call$1(this.this_1);
}
};

$$.anon4 = {"": ["this_1", "callback_0"],
 "super": "Closure",
 call$0: function() {
  return this.callback_0.call$1(this.this_1);
}
};

$$.BoundClosure = {'':
['self', 'target'],
'super': 'Closure',
call$3: function(p0, p1, p2) { return this.self[this.target](p0, p1, p2); },
 call$1: function(when) {
  return this.call$3(when,$,$)
},
 call$2: function(when,grainOffset) {
  return this.call$3(when,grainOffset,$)
}
};
$$.BoundClosure0 = {'':
['self', 'target'],
'super': 'Closure',
call$4: function(p0, p1, p2, p3) { return this.self[this.target](p0, p1, p2, p3); }
};
$$.BoundClosure1 = {'':
['self', 'target'],
'super': 'Closure',
call$1: function(p0) { return this.self[this.target](p0); }
};
$$.BoundClosure2 = {'':
['self', 'target'],
'super': 'Closure',
call$0: function() { return this.self[this.target](); }
};
$$.BoundClosure3 = {'':
['self', 'target'],
'super': 'Closure',
call$2: function(p0, p1) { return this.self[this.target](p0, p1); }
};
$$.BoundClosure4 = {'':
['self', 'target'],
'super': 'Closure',
call$5: function(p0, p1, p2, p3, p4) { return this.self[this.target](p0, p1, p2, p3, p4); },
 call$4: function(velocity,minCoord,maxCoord,initialOffset) {
  return this.call$5(velocity,minCoord,maxCoord,initialOffset,null)
}
};
$$.BoundClosure5 = {'':
['self', 'target'],
'super': 'Closure',
call$2: function(p0, p1) { return this.self[this.target](p0, p1); },
 call$1: function(timeStamp) {
  return this.call$2(timeStamp,null)
}
};
$.Set_Set = function() {
  return $.HashSetImplementation$();
};

$.Future_Future$immediate = function(value) {
  return $._FutureImpl__FutureImpl$immediate(value);
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$._JavaScriptAudioNodeEventsImpl$ = function(_ptr) {
  return new $._JavaScriptAudioNodeEventsImpl(_ptr);
};

$.print = function(object) {
  $.Primitives_printString(object);
};

$.coreSort = function(l, compare) {
  $._Sort__doSort(l, 0, $.sub($.get$length(l), 1), compare);
  return;
};

$._AudioContextEventsImpl$ = function(_ptr) {
  return new $._AudioContextEventsImpl(_ptr);
};

$.add = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a + b : $.add$slow(a, b);
};

$.sub = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a - b : $.sub$slow(a, b);
};

$.mul = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a * b : $.mul$slow(a, b);
};

$.gt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b);
};

$.div = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a / b : $.div$slow(a, b);
};

$.lt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b);
};

$.le = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b);
};

$.gtB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b) === true;
};

$.geB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b) === true;
};

$.ltB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b) === true;
};

$.leB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b) === true;
};

$.index = function(a, index) {
  if (typeof a == "string" || a.constructor === Array) {
    var key = index >>> 0;
    if (key === index && key < a.length)
      return a[key];
  }
  return $.index$slow(a, index);
};

$.indexSet = function(a, index, value) {
  if (a.constructor === Array && !a.immutable$list) {
    var key = index >>> 0;
    if (key === index && key < a.length) {
      a[key] = value;
      return;
    }
  }
  $.indexSet$slow(a, index, value);
};

$.checkNumbers = function(a, b) {
  if (typeof a === 'number')
    if (typeof b === 'number')
      return true;
    else {
      $.checkNull(b);
      throw $.$$throw($.ArgumentError$(b));
    }
  return false;
};

$.isJsArray = function(value) {
  return !(value == null) && value.constructor === Array;
};

$.add$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a + b;
  return a.operator$add$1(b);
};

$.div$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a / b;
  return a.operator$div$1(b);
};

$.mul$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a * b;
  return a.operator$mul$1(b);
};

$.sub$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a - b;
  return a.operator$sub$1(b);
};

$.mod = function(a, b) {
  if ($.checkNumbers(a, b)) {
    var result = a % b;
    if (result === 0)
      return 0;
    if (result > 0)
      return result;
    if (b < 0)
      return result - b;
    else
      return result + b;
  }
  return a.operator$mod$1(b);
};

$.tdiv = function(a, b) {
  if ($.checkNumbers(a, b))
    return $.truncate(a / b);
  return a.operator$tdiv$1(b);
};

$.eq = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b);
  return a === b;
};

$.eqB = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b) === true;
  return a === b;
};

$.gt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a > b;
  return a.operator$gt$1(b);
};

$.ge$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a >= b;
  return a.operator$ge$1(b);
};

$.lt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a < b;
  return a.operator$lt$1(b);
};

$.NoSuchMethodError_safeToString = function(object) {
  if (typeof object === 'number' && Math.floor(object) === object || typeof object === 'number' || typeof object === 'boolean' || null == object)
    return $.toString(object);
  if (typeof object === 'string')
    return '"' + $.S($.replaceAll($.replaceAll($.replaceAll($.replaceAll(object, '\\', '\\\\'), '\n', '\\n'), '\r', '\\r'), '"', '\\"')) + '"';
  return $.Primitives_objectToString(object);
};

$.shr = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.ArgumentError$(b));
    if (a > 0) {
      if (b > 31)
        return 0;
      return a >>> b;
    }
    if (b > 31)
      b = 31;
    return (a >> b) >>> 0;
  }
  return a.operator$shr$1(b);
};

$.and = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a & b) >>> 0;
  return a.operator$and$1(b);
};

$.shl = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.ArgumentError$(b));
    if (b > 31)
      return 0;
    return (a << b) >>> 0;
  }
  return a.operator$shl$1(b);
};

$.ge = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b);
};

$.le$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a <= b;
  return a.operator$le$1(b);
};

$.NoSuchMethodError$ = function(_receiver, _functionName, _arguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _functionName, _arguments, existingArgumentNames);
};

$.index$slow = function(a, index) {
  if (typeof a === 'string' || $.isJsArray(a)) {
    if (!(typeof index === 'number' && Math.floor(index) === index)) {
      if (!(typeof index === 'number'))
        throw $.$$throw($.ArgumentError$(index));
      if (!($.truncate(index) === index))
        throw $.$$throw($.ArgumentError$(index));
    }
    if ($.ltB(index, 0) || $.geB(index, $.get$length(a)))
      throw $.$$throw($.IndexOutOfRangeException$(index));
    return a[index];
  }
  return a.operator$index$1(index);
};

$.indexSet$slow = function(a, index, value) {
  if ($.isJsArray(a)) {
    if (!(typeof index === 'number' && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0 || $.geB(index, $.get$length(a)))
      throw $.$$throw($.IndexOutOfRangeException$(index));
    $.checkMutable(a, 'indexed set');
    a[index] = value;
    return;
  }
  a.operator$indexSet$2(index, value);
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.S = function(value) {
  var res = $.toString(value);
  if (!(typeof res === 'string'))
    throw $.$$throw($.ArgumentError$(value));
  return res;
};

$.neg = function(a) {
  if (typeof a === "number")
    return -a;
  return a.negate$0();
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.ioore = function(index) {
  throw $.$$throw($.IndexOutOfRangeException$(index));
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.NullPointerException$(null, $.CTC0));
  return object;
};

$.checkNum = function(value) {
  if (!(typeof value === 'number')) {
    $.checkNull(value);
    throw $.$$throw($.ArgumentError$(value));
  }
  return value;
};

$.checkString = function(value) {
  if (!(typeof value === 'string')) {
    $.checkNull(value);
    throw $.$$throw($.ArgumentError$(value));
  }
  return value;
};

$.substringUnchecked = function(receiver, startIndex, endIndex) {
  return receiver.substring(startIndex, endIndex);
};

$.$$throw = function(ex) {
  if (ex == null)
    ex = $.CTC;
  var jsError = new Error();
  jsError.name = ex;
  jsError.description = ex;
  jsError.dartException = ex;
  jsError.toString = $.toStringWrapper.call$0;
  throw jsError;
};

$.toStringWrapper = function() {
  return $.toString(this.dartException);
};

$.unwrapException = function(ex) {
  if ("dartException" in ex)
    return ex.dartException;
  var message = ex.message;
  if (ex instanceof TypeError) {
    var type = ex.type;
    var name$ = ex.arguments ? ex.arguments[0] : "";
    if ($.eqB(type, 'property_not_function') || $.eqB(type, 'called_non_callable') || $.eqB(type, 'non_object_property_call') || $.eqB(type, 'non_object_property_load'))
      return $.NullPointerException$(null, $.CTC0);
    else if ($.eqB(type, 'undefined_method'))
      return $.NoSuchMethodError$('', name$, [], null);
    var ieErrorCode = ex.number & 0xffff;
    var ieFacilityNumber = ex.number>>16 & 0x1FFF;
    if (typeof message === 'string')
      if ($.endsWith(message, 'is null') === true || $.endsWith(message, 'is undefined') === true || $.endsWith(message, 'is null or undefined') === true)
        return $.NullPointerException$(null, $.CTC0);
      else {
        if ($.contains$1(message, ' is not a function') !== true)
          var t1 = ieErrorCode === 438 && ieFacilityNumber === 10;
        else
          t1 = true;
        if (t1)
          return $.NoSuchMethodError$('', '<unknown>', [], null);
      }
    return $._ExceptionImplementation$(typeof message === 'string' ? message : '');
  }
  if (ex instanceof RangeError) {
    if (typeof message === 'string' && $.contains$1(message, 'call stack') === true)
      return $.StackOverflowError$();
    return $.ArgumentError$('');
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === 'string' && message === 'too much recursion')
      return $.StackOverflowError$();
  return ex;
};

$.getTraceFromException = function(exception) {
  return $.StackTrace$(exception.stack);
};

$.xor = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a ^ b) >>> 0;
  return a.operator$xor$1(b);
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator = $.iterator(keyValuePairs);
  var result = $.LinkedHashMapImplementation$();
  for (; iterator.get$hasNext() === true;)
    result.operator$indexSet$2(iterator.next$0(), iterator.next$0());
  return result;
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  if ($.eqB(numberOfArguments, 0))
    return $._callInIsolate(isolate, new $.invokeClosure_anon(closure));
  else if ($.eqB(numberOfArguments, 1))
    return $._callInIsolate(isolate, new $.invokeClosure_anon0(arg1, closure));
  else if ($.eqB(numberOfArguments, 2))
    return $._callInIsolate(isolate, new $.invokeClosure_anon1(arg1, arg2, closure));
  else
    throw $.$$throw($._ExceptionImplementation$('Unsupported number of arguments for wrapped closure'));
};

$.convertDartClosureToJS = function(closure, arity) {
  if (closure == null)
    return;
  var function$ = closure.$identity;
  if (!!function$)
    return function$;
  function$ = function() {
    return $.invokeClosure.call$5(closure, $._currentIsolate(), arity, arguments[0], arguments[1]);
  };
  closure.$identity = function$;
  return function$;
};

$.jsHasOwnProperty = function(jsObject, property) {
  return jsObject.hasOwnProperty(property);
};

$.CastErrorImplementation$ = function(actualType, expectedType) {
  return new $.CastErrorImplementation(actualType, expectedType);
};

$.listTypeCast = function(value) {
  if (typeof value === 'object' && value !== null && (value.constructor === Array || value.is$List()) || value == null)
    return value;
  throw $.$$throw($.CastErrorImplementation$($.Primitives_objectTypeName(value), 'List'));
};

$.typeNameInChrome = function(obj) {
  var name$ = obj.constructor.name;
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'WebKitMutationObserver')
    return 'MutationObserver';
  return name$;
};

$.typeNameInSafari = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'WebKitMutationObserver')
    return 'MutationObserver';
  return name$;
};

$.typeNameInOpera = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  return name$;
};

$.typeNameInFirefox = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'Document')
    return 'HTMLDocument';
  if (name$ === 'XMLDocument')
    return 'Document';
  if (name$ === 'WorkerMessageEvent')
    return 'MessageEvent';
  if (name$ === 'DragEvent')
    return 'MouseEvent';
  if (name$ === 'DataTransfer')
    return 'Clipboard';
  if (name$ === 'MouseScrollEvent')
    return 'WheelEvent';
  if (name$ === 'OfflineResourceList')
    return 'DOMApplicationCache';
  return name$;
};

$.constructorNameFallback = function(object) {
  if (object == null)
    return 'Null';
  var constructor$ = object.constructor;
  if (typeof(constructor$) === 'function') {
    var name$ = constructor$.name;
    if (typeof name$ === 'string')
      var t1 = !(name$ === '') && !(name$ === 'Object') && !(name$ === 'Function.prototype');
    else
      t1 = false;
    if (t1)
      return name$;
  }
  var string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.contains = function(userAgent, name$) {
  return userAgent.indexOf(name$) !== -1;
};

$.typeNameInIE = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'Document') {
    if (!!obj.xmlVersion)
      return 'Document';
    return 'HTMLDocument';
  }
  if (name$ === 'ApplicationCache')
    return 'DOMApplicationCache';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'DataTransfer')
    return 'Clipboard';
  if (name$ === 'DragEvent')
    return 'MouseEvent';
  if (name$ === 'HTMLDDElement')
    return 'HTMLElement';
  if (name$ === 'HTMLDTElement')
    return 'HTMLElement';
  if (name$ === 'HTMLTableDataCellElement')
    return 'HTMLTableCellElement';
  if (name$ === 'HTMLTableHeaderCellElement')
    return 'HTMLTableCellElement';
  if (name$ === 'HTMLPhraseElement')
    return 'HTMLElement';
  if (name$ === 'MSStyleCSSProperties')
    return 'CSSStyleDeclaration';
  if (name$ === 'MouseWheelEvent')
    return 'WheelEvent';
  return name$;
};

$.propertySet = function(object, property, value) {
  object[property] = value;
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === 'object'))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if ($.contains(userAgent, 'Chrome') || $.contains(userAgent, 'DumpRenderTree'))
    return $.typeNameInChrome;
  else if ($.contains(userAgent, 'Firefox'))
    return $.typeNameInFirefox;
  else if ($.contains(userAgent, 'MSIE'))
    return $.typeNameInIE;
  else if ($.contains(userAgent, 'Opera'))
    return $.typeNameInOpera;
  else if ($.contains(userAgent, 'AppleWebKit'))
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.toStringForNativeObject = function(obj) {
  return 'Instance of ' + $.getTypeNameOf(obj);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property,
      {value: value, enumerable: false, writable: true, configurable: true});
};

$.dynamicFunction = function(name$) {
  var f = Object.prototype[name$];
  if (!(f == null) && !!f.methods)
    return f.methods;
  var methods = {};
  var dartMethod = Object.getPrototypeOf($.CTC32)[name$];
  if (!(dartMethod == null))
    $.propertySet(methods, 'Object', dartMethod);
  var bind = function() {return $.dynamicBind.call$4(this, name$, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, name$, bind);
  return methods;
};

$.dynamicBind = function(obj, name$, methods, arguments$) {
  var tag = $.getTypeNameOf(obj);
  var method = methods[tag];
  if (method == null && !($._dynamicMetadata0() == null))
    for (var i = 0; i < $._dynamicMetadata0().length; ++i) {
      var entry = $._dynamicMetadata0()[i];
      if (entry.get$_set()[tag]) {
        method = methods[entry.get$_tag()];
        if (!(method == null))
          break;
      }
    }
  if (method == null)
    method = methods['Object'];
  var proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError(name$ + " is not a function");} else {return Object.prototype[name$].apply(this, arguments);}};
  if (!proto.hasOwnProperty(name$))
    $.defineProperty(proto, name$, method);
  return method.apply(obj, arguments$);
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === 'undefined') {
    var t1 = [];
    $._dynamicMetadata(t1);
  }
  return $dynamicMetadata;
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.buildDynamicMetadata = function(inputTable) {
  var result = [];
  for (var i = 0; i < inputTable.length; ++i) {
    var tag = inputTable[i][0];
    var array = inputTable[i];
    var tags = array[1];
    var set = {};
    var tagNames = tags.split('|');
    for (var index = 1, j = 0; j < tagNames.length; ++j) {
      $.propertySet(set, tagNames[j], true);
      index = j;
      array = tagNames;
    }
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.regExpExec = function(regExp, str) {
  var result = $.regExpGetNative(regExp).exec(str);
  if (result === null)
    return;
  return result;
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$.regExpAttachGlobalNative = function(regExp) {
  regExp._re = $.regExpMakeNative(regExp, true);
};

$.regExpMakeNative = function(regExp, global) {
  var pattern = regExp.get$pattern();
  var multiLine = regExp.get$multiLine();
  var ignoreCase = regExp.get$ignoreCase();
  $.checkString(pattern);
  var sb = $.StringBuffer_StringBuffer('');
  if (multiLine === true)
    $.add$1(sb, 'm');
  if (ignoreCase === true)
    $.add$1(sb, 'i');
  if (global === true)
    $.add$1(sb, 'g');
  try {
    return new RegExp(pattern, $.toString(sb));
  } catch (exception) {
    var t1 = $.unwrapException(exception);
    var e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.regExpMatchStart = function(m) {
  return m.index;
};

$.LinkedHashMapImplementation$ = function() {
  var t1 = new $.LinkedHashMapImplementation(null, null);
  t1.LinkedHashMapImplementation$0();
  return t1;
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  if (typeof other === 'string')
    return !$.eqB($.indexOf$2(receiver, other, startIndex), -1);
  else if (typeof other === 'object' && other !== null && !!other.is$JSSyntaxRegExp)
    return other.hasMatch$1($.substring$1(receiver, startIndex));
  else
    return $.iterator($.allMatches(other, $.substring$1(receiver, startIndex))).get$hasNext();
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  if (from === '')
    if (receiver === '')
      return to;
    else {
      var result = $.StringBuffer_StringBuffer('');
      var length$ = receiver.length;
      $.add$1(result, to);
      for (var i = 0; i < length$; ++i) {
        $.add$1(result, receiver[i]);
        $.add$1(result, to);
      }
      return $.toString(result);
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.CTC11, true), "\\$&"), false, false), true), to);
};

$.stringJoinUnchecked = function(array, separator) {
  return array.join(separator);
};

$.add$1 = function(receiver, value) {
  if ($.isJsArray(receiver)) {
    $.checkGrowable(receiver, 'add');
    receiver.push(value);
    return;
  }
  return receiver.add$1(value);
};

$.removeLast = function(receiver) {
  if ($.isJsArray(receiver)) {
    $.checkGrowable(receiver, 'removeLast');
    if ($.eqB($.get$length(receiver), 0))
      throw $.$$throw($.IndexOutOfRangeException$(-1));
    return receiver.pop();
  }
  return receiver.removeLast$0();
};

$.filter = function(receiver, predicate) {
  if (!$.isJsArray(receiver))
    return receiver.filter$1(predicate);
  else
    return $.Collections_filter(receiver, [], predicate);
};

$.get$length = function(receiver) {
  if (typeof receiver === 'string' || $.isJsArray(receiver))
    return receiver.length;
  else
    return receiver.get$length();
};

$.set$length = function(receiver, newLength) {
  if ($.isJsArray(receiver)) {
    $.checkNull(newLength);
    if (!(typeof newLength === 'number' && Math.floor(newLength) === newLength))
      throw $.$$throw($.ArgumentError$(newLength));
    if (newLength < 0)
      throw $.$$throw($.IndexOutOfRangeException$(newLength));
    $.checkGrowable(receiver, 'set length');
    receiver.length = newLength;
  } else
    receiver.set$length(newLength);
  return newLength;
};

$.toString = function(value) {
  if (typeof value == "object" && value !== null)
    if ($.isJsArray(value))
      return $.Collections_collectionToString(value);
    else
      return value.toString$0();
  if (value === 0 && (1 / value) < 0)
    return '-0.0';
  if (value == null)
    return 'null';
  if (typeof value == "function")
    return 'Closure';
  return String(value);
};

$.charCodeAt = function(receiver, index) {
  if (typeof receiver === 'string') {
    if (!(typeof index === 'number'))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0)
      throw $.$$throw($.IndexOutOfRangeException$(index));
    if (index >= receiver.length)
      throw $.$$throw($.IndexOutOfRangeException$(index));
    return receiver.charCodeAt(index);
  } else
    return receiver.charCodeAt$1(index);
};

$.get$isEmpty = function(receiver) {
  if (typeof receiver === 'string' || $.isJsArray(receiver))
    return receiver.length === 0;
  return receiver.get$isEmpty();
};

$.iterator = function(receiver) {
  if ($.isJsArray(receiver))
    return $.ListIterator$(receiver);
  return receiver.iterator$0();
};

$.addAll = function(receiver, collection) {
  if (!$.isJsArray(receiver))
    return receiver.addAll$1(collection);
  var iterator = $.iterator(collection);
  for (; iterator.get$hasNext() === true;)
    $.add$1(receiver, iterator.next$0());
};

$.addLast = function(receiver, value) {
  if (!$.isJsArray(receiver))
    return receiver.addLast$1(value);
  $.checkGrowable(receiver, 'addLast');
  receiver.push(value);
};

$.clear = function(receiver) {
  if (!$.isJsArray(receiver))
    return receiver.clear$0();
  $.set$length(receiver, 0);
};

$.forEach = function(receiver, f) {
  if (!$.isJsArray(receiver))
    return receiver.forEach$1(f);
  else
    return $.Collections_forEach(receiver, f);
};

$.map = function(receiver, f) {
  if (!$.isJsArray(receiver))
    return receiver.map$1(f);
  else
    return $.Collections_map(receiver, [], f);
};

$.getRange = function(receiver, start, length$) {
  if (!$.isJsArray(receiver))
    return receiver.getRange$2(start, length$);
  if (0 === length$)
    return [];
  $.checkNull(start);
  $.checkNull(length$);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$))
    throw $.$$throw($.ArgumentError$(length$));
  var t1 = length$ < 0;
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  if (start < 0)
    throw $.$$throw($.IndexOutOfRangeException$(start));
  var end = start + length$;
  if ($.gtB(end, $.get$length(receiver)))
    throw $.$$throw($.IndexOutOfRangeException$(length$));
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  return receiver.slice(start, end);
};

$.indexOf$1 = function(receiver, element) {
  if ($.isJsArray(receiver))
    return $.Arrays_indexOf(receiver, element, 0, receiver.length);
  else {
    $.checkNull(element);
    if (!(typeof element === 'string'))
      throw $.$$throw($.ArgumentError$(element));
    return receiver.indexOf(element);
  }
  return receiver.indexOf$1(element);
};

$.indexOf$2 = function(receiver, element, start) {
  if ($.isJsArray(receiver)) {
    if (!(typeof start === 'number' && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    return $.Arrays_indexOf(receiver, element, start, receiver.length);
  } else if (typeof receiver === 'string') {
    $.checkNull(element);
    if (!(typeof start === 'number' && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (!(typeof element === 'string'))
      throw $.$$throw($.ArgumentError$(element));
    if (start < 0)
      return -1;
    return receiver.indexOf(element, start);
  }
  return receiver.indexOf$2(element, start);
};

$.get$last = function(receiver) {
  if (!$.isJsArray(receiver))
    return receiver.get$last();
  return $.index(receiver, $.sub($.get$length(receiver), 1));
};

$.stringReplaceFirstUnchecked = function(receiver, from, to) {
  return $.stringReplaceJS(receiver, from, to);
};

$.KeyValuePair$ = function(key, value) {
  return new $.KeyValuePair(key, value);
};

$.get$isNegative = function(receiver) {
  if (typeof receiver === 'number')
    return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
  else
    return receiver.get$isNegative();
};

$.toInt = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.toInt$0();
  if ($.get$isNaN(receiver) === true)
    throw $.$$throw($.FormatException$('NaN'));
  if ($.get$isInfinite(receiver) === true)
    throw $.$$throw($.FormatException$('Infinity'));
  var truncated = $.truncate(receiver);
  return truncated == -0.0 ? 0 : truncated;
};

$.ceil = function(receiver) {
  return Math.ceil(receiver);
};

$.floor = function(receiver) {
  return Math.floor(receiver);
};

$.get$isNaN = function(receiver) {
  if (typeof receiver === 'number')
    return isNaN(receiver);
  else
    return receiver.get$isNaN();
};

$.truncate = function(receiver) {
  return receiver < 0 ? $.ceil(receiver) : $.floor(receiver);
};

$.round = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.round$0();
  if (receiver < 0)
    return -Math.round(-receiver);
  else
    return Math.round(receiver);
};

$.setRange$3 = function(receiver, start, length$, from) {
  if ($.isJsArray(receiver))
    return $.setRange$4(receiver, start, length$, from, 0);
  return receiver.setRange$3(start, length$, from);
};

$.contains$1 = function(receiver, other) {
  if (typeof receiver !== 'string' && (typeof receiver !== 'object' || receiver === null || receiver.constructor !== Array && !receiver.is$JavaScriptIndexingBehavior()))
    return $.contains$1$bailout(1, receiver, other);
  if (typeof receiver === 'string')
    return $.contains$2(receiver, other, 0);
  else if ($.isJsArray(receiver)) {
    for (var i = 0; i < receiver.length; ++i)
      if ($.eqB(other, receiver[i]))
        return true;
    return false;
  }
  return receiver.contains$1(other);
};

$.contains$2 = function(receiver, other, startIndex) {
  if (!(typeof receiver === 'string'))
    return receiver.contains$2(other, startIndex);
  $.checkNull(other);
  return $.stringContainsUnchecked(receiver, other, startIndex);
};

$.endsWith = function(receiver, other) {
  if (!(typeof receiver === 'string'))
    return receiver.endsWith$1(other);
  $.checkString(other);
  var receiverLength = receiver.length;
  var otherLength = other.length;
  if (otherLength > receiverLength)
    return false;
  return other === $.substring$1(receiver, receiverLength - otherLength);
};

$.replaceAll = function(receiver, from, to) {
  if (!(typeof receiver === 'string'))
    return receiver.replaceAll$2(from, to);
  $.checkString(to);
  return $.stringReplaceAllUnchecked(receiver, from, to);
};

$.allMatches = function(receiver, str) {
  if (!(typeof receiver === 'string'))
    return receiver.allMatches$1(str);
  $.checkString(str);
  return $.allMatchesInStringUnchecked(receiver, str);
};

$.get$isInfinite = function(receiver) {
  return receiver == Infinity || receiver == -Infinity;
};

$.setRange$4 = function(receiver, start, length$, from, startFrom) {
  if (!$.isJsArray(receiver))
    return receiver.setRange$4(start, length$, from, startFrom);
  $.checkMutable(receiver, 'indexed set');
  if ($.eqB(length$, 0))
    return;
  $.checkNull(start);
  $.checkNull(length$);
  $.checkNull(from);
  $.checkNull(startFrom);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$))
    throw $.$$throw($.ArgumentError$(length$));
  if (!(typeof startFrom === 'number' && Math.floor(startFrom) === startFrom))
    throw $.$$throw($.ArgumentError$(startFrom));
  if (length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  if (start < 0)
    throw $.$$throw($.IndexOutOfRangeException$(start));
  var t1 = start + length$;
  if ($.gtB(t1, $.get$length(receiver)))
    throw $.$$throw($.IndexOutOfRangeException$(t1));
  $.Arrays_copy(from, startFrom, receiver, start, length$);
};

$.substring$1 = function(receiver, startIndex) {
  if (!(typeof receiver === 'string'))
    return receiver.substring$1(startIndex);
  return $.substring$2(receiver, startIndex, null);
};

$.substring$2 = function(receiver, startIndex, endIndex) {
  if (!(typeof receiver === 'string'))
    return receiver.substring$2(startIndex, endIndex);
  $.checkNum(startIndex);
  var length$ = receiver.length;
  if (endIndex == null)
    endIndex = length$;
  $.checkNum(endIndex);
  if ($.ltB(startIndex, 0))
    throw $.$$throw($.IndexOutOfRangeException$(startIndex));
  if ($.gtB(startIndex, endIndex))
    throw $.$$throw($.IndexOutOfRangeException$(startIndex));
  if ($.gtB(endIndex, length$))
    throw $.$$throw($.IndexOutOfRangeException$(endIndex));
  return $.substringUnchecked(receiver, startIndex, endIndex);
};

$.toLowerCase = function(receiver) {
  if (!(typeof receiver === 'string'))
    return receiver.toLowerCase$0();
  return receiver.toLowerCase();
};

$.split = function(receiver, pattern) {
  if (!(typeof receiver === 'string'))
    return receiver.split$1(pattern);
  $.checkNull(pattern);
  return $.stringSplitUnchecked(receiver, pattern);
};

$.trim = function(receiver) {
  if (!(typeof receiver === 'string'))
    return receiver.trim$0();
  return receiver.trim();
};

$.get$hashCode = function(receiver) {
  if (receiver == null)
    return 0;
  if (typeof receiver === 'number')
    return receiver & 0x1FFFFFFF;
  if (typeof receiver === 'boolean')
    return receiver ? 1077375012 : 3247177846;
  if ($.isJsArray(receiver))
    return $.Primitives_objectHashCode(receiver);
  if (!(typeof receiver === 'string'))
    return receiver.get$hashCode();
  var length$ = receiver.length;
  for (var i = 0, hash = 0; i < length$; ++i) {
    var hash0 = 536870911 & hash + receiver.charCodeAt(i);
    var hash1 = 536870911 & hash0 + 524287 & hash0 << 10;
    hash1 = (hash1 ^ $.shr(hash1, 6)) >>> 0;
    hash = hash1;
  }
  hash0 = 536870911 & hash + 67108863 & hash << 3;
  hash0 = (hash0 ^ $.shr(hash0, 11)) >>> 0;
  return 536870911 & hash0 + 16383 & hash0 << 15;
};

$.abs = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.abs$0();
  return Math.abs(receiver);
};

$.some = function(receiver, f) {
  if (!$.isJsArray(receiver))
    return receiver.some$1(f);
  else
    return $.Collections_some(receiver, f);
};

$.compareTo = function(a, b) {
  if ($.checkNumbers(a, b))
    if ($.ltB(a, b))
      return -1;
    else if ($.gtB(a, b))
      return 1;
    else if ($.eqB(a, b)) {
      if ($.eqB(a, 0)) {
        var aIsNegative = $.get$isNegative(a);
        if ($.eqB(aIsNegative, $.get$isNegative(b)))
          return 0;
        if (aIsNegative === true)
          return -1;
        return 1;
      }
      return 0;
    } else if ($.get$isNaN(a) === true) {
      if ($.get$isNaN(b) === true)
        return 0;
      return 1;
    } else
      return -1;
  else if (typeof a === 'string') {
    if (!(typeof b === 'string'))
      throw $.$$throw($.ArgumentError$(b));
    if (a == b)
      var t1 = 0;
    else
      t1 = a < b ? -1 : 1;
    return t1;
  } else
    return a.compareTo$1(b);
};

$.replaceFirst = function(receiver, from, to) {
  if (!(typeof receiver === 'string'))
    return receiver.replaceFirst$2(from, to);
  $.checkString(to);
  return $.stringReplaceFirstUnchecked(receiver, from, to);
};

$.stringSplitUnchecked = function(receiver, pattern) {
  return receiver.split(pattern);
};

$.sort$1 = function(receiver, compare) {
  if (!$.isJsArray(receiver))
    return receiver.sort$1(compare);
  $.checkMutable(receiver, 'sort');
  $.coreSort(receiver, compare);
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result = $.ListImplementation_List(null);
  var length$ = $.get$length(haystack);
  var patternLength = needle.length;
  for (var startIndex = 0; true;) {
    var position = $.indexOf$2(haystack, needle, startIndex);
    if ($.eqB(position, -1))
      break;
    result.push($.StringMatch$(position, haystack, needle));
    var endIndex = $.add(position, patternLength);
    if ($.eqB(endIndex, length$))
      break;
    else
      startIndex = $.eqB(position, endIndex) ? $.add(startIndex, 1) : endIndex;
  }
  return result;
};

$.StackTrace$ = function(stack) {
  return new $.StackTrace(stack);
};

$.concat = function(receiver, other) {
  if (!(typeof receiver === 'string'))
    return receiver.concat$1(other);
  return receiver + other;
};

$.StackOverflowError$ = function() {
  return new $.StackOverflowError();
};

$.main = function() {
  $.UdjApp$().run$0();
};

$.window = function() {
  return window;
};

$._window = function() {
  return window;
};

$.document = function() {
  return document;
};

$._document = function() {
  return document;
};

$._browserPrefix = function() {
  if ($._cachedBrowserPrefix == null)
    if ($._Device_isFirefox() === true)
      $._cachedBrowserPrefix = '-moz-';
    else if ($._Device_isIE() === true)
      $._cachedBrowserPrefix = '-ms-';
    else if ($._Device_isOpera() === true)
      $._cachedBrowserPrefix = '-o-';
    else
      $._cachedBrowserPrefix = '-webkit-';
  return $._cachedBrowserPrefix;
};

$.UdjApp$ = function() {
  var t1 = new $.UdjApp(null, false, null);
  t1.UdjApp$0();
  return t1;
};

$.UdjState$ = function() {
  return new $.UdjState($.ObservableValue$(false, null), $.ObservableValue$(null, null), $.ObservableValue$(null, null), $.ObservableValue$(null, null), $.ObservableList$(null), $.ObservableList$(null), $.ObservableValue$(null, null), $.ObservableValue$(null, null), $.ObservableList$(null), $.ObservableValue$(null, null), null);
};

$.MainView$ = function(_udjApp) {
  var t1 = $.HashMapImplementation$();
  t1 = new $.MainView(_udjApp, null, null, null, null, $.ListImplementation_List(null), null, null, null, 'all-hold', false, false, false, false, null, null, null, t1);
  t1.MainView$1(_udjApp);
  return t1;
};

$.View$fromNode = function(_node) {
  return new $.View(_node, null, null, $.HashMapImplementation$());
};

$.View$html = function(html) {
  var t1 = $.HashMapImplementation$();
  return new $.View($.Element_Element$html(html), null, null, t1);
};

$._emptyStyleFuture = function() {
  return $._createMeasurementFuture(new $._emptyStyleFuture_anon(), $.Completer_Completer());
};

$._InputElementEventsImpl$ = function(_ptr) {
  return new $._InputElementEventsImpl(_ptr);
};

$.double_parse = function(source) {
  return $.Primitives_parseDouble(source);
};

$.EventBatch$_internal = function() {
  return new $.EventBatch($.HashMapImplementation$(), false);
};

$.EventBatch_wrap = function(userFunction) {
  return new $.EventBatch_wrap_anon(userFunction);
};

$.EventBatch_genUid = function() {
  if ($.EventBatch_nextUid == null)
    $.EventBatch_nextUid = 1;
  var t1 = $.EventBatch_nextUid;
  $.EventBatch_nextUid = $.add(t1, 1);
  return t1;
};

$.UnsupportedError$ = function(message) {
  return new $.UnsupportedError(message);
};

$._ExceptionImplementation$ = function(message) {
  return new $._ExceptionImplementation(message);
};

$.JSSyntaxRegExp$ = function(pattern, ignoreCase, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, ignoreCase);
};

$.JSSyntaxRegExp__globalVersionOf = function(other) {
  var t1 = other.get$pattern();
  var t2 = other.get$multiLine();
  var re = $.JSSyntaxRegExp$(t1, other.get$ignoreCase(), t2);
  $.regExpAttachGlobalNative(re);
  return re;
};

$.Collections_forEach = function(iterable, f) {
  for (var t1 = $.iterator(iterable); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
};

$.Collections_some = function(iterable, f) {
  for (var t1 = $.iterator(iterable); t1.get$hasNext() === true;)
    if (f.call$1(t1.next$0()) === true)
      return true;
  return false;
};

$.Collections_map = function(source, destination, f) {
  for (var t1 = $.iterator(source); t1.get$hasNext() === true;)
    destination.push(f.call$1(t1.next$0()));
  return destination;
};

$.Collections_filter = function(source, destination, f) {
  for (var t1 = $.iterator(source); t1.get$hasNext() === true;) {
    var t2 = t1.next$0();
    if (f.call$1(t2) === true)
      destination.push(t2);
  }
  return destination;
};

$.Collections_collectionToString = function(c) {
  var result = $.StringBuffer_StringBuffer('');
  $.Collections__emitCollection(c, result, $.ListImplementation_List(null));
  return $.toString(result);
};

$.Collections__emitCollection = function(c, result, visiting) {
  $.add$1(visiting, c);
  var isList = typeof c === 'object' && c !== null && (c.constructor === Array || c.is$List());
  $.add$1(result, isList ? '[' : '{');
  for (var t1 = $.iterator(c), first = true; t1.get$hasNext() === true;) {
    var t2 = t1.next$0();
    if (!first)
      $.add$1(result, ', ');
    $.Collections__emitObject(t2, result, visiting);
    first = false;
  }
  $.add$1(result, isList ? ']' : '}');
  $.removeLast(visiting);
};

$.Collections__emitObject = function(o, result, visiting) {
  if (typeof o === 'object' && o !== null && (o.constructor === Array || o.is$Collection()))
    if ($.Collections__containsRef(visiting, o))
      $.add$1(result, typeof o === 'object' && o !== null && (o.constructor === Array || o.is$List()) ? '[...]' : '{...}');
    else
      $.Collections__emitCollection(o, result, visiting);
  else if (typeof o === 'object' && o !== null && o.is$Map())
    if ($.Collections__containsRef(visiting, o))
      $.add$1(result, '{...}');
    else
      $.Maps__emitMap(o, result, visiting);
  else
    $.add$1(result, o);
};

$.Collections__containsRef = function(c, ref) {
  for (var t1 = $.iterator(c); t1.get$hasNext() === true;) {
    var t2 = t1.next$0();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$._IDBVersionChangeRequestEventsImpl$ = function(_ptr) {
  return new $._IDBVersionChangeRequestEventsImpl(_ptr);
};

$._IDBRequestEventsImpl$ = function(_ptr) {
  return new $._IDBRequestEventsImpl(_ptr);
};

$._FixedSizeListIterator$ = function(array) {
  return new $._FixedSizeListIterator($.get$length(array), array, 0);
};

$.StateError$ = function(message) {
  return new $.StateError(message);
};

$._Collections_contains = function(iterable, element) {
  for (var t1 = $.iterator(iterable); t1.get$hasNext() === true;)
    if ($.eqB(t1.next$0(), element))
      return true;
  return false;
};

$._Collections_forEach = function(iterable, f) {
  for (var t1 = $.iterator(iterable); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
};

$._Collections_map = function(source, destination, f) {
  for (var t1 = $.iterator(source); t1.get$hasNext() === true;)
    destination.push(f.call$1(t1.next$0()));
  return destination;
};

$._Collections_some = function(iterable, f) {
  for (var t1 = $.iterator(iterable); t1.get$hasNext() === true;)
    if (f.call$1(t1.next$0()) === true)
      return true;
  return false;
};

$._Collections_filter = function(source, destination, f) {
  for (var t1 = $.iterator(source); t1.get$hasNext() === true;) {
    var t2 = t1.next$0();
    if (f.call$1(t2) === true)
      destination.push(t2);
  }
  return destination;
};

$.EventSummary$ = function(target) {
  return new $.EventSummary(target, $.ListImplementation_List(null));
};

$._IDBTransactionEventsImpl$ = function(_ptr) {
  return new $._IDBTransactionEventsImpl(_ptr);
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.add($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.Primitives_printString = function(string) {
  if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw 'Unable to print message: ' + String(string);
};

$.Primitives_parseInt = function(string) {
  $.checkString(string);
  var match = /^\s*[+-]?(?:0(x)[a-f0-9]+|\d+)\s*$/i.exec(string);
  if (match == null)
    throw $.$$throw($.FormatException$(string));
  var base = !($.index(match, 1) == null) ? 16 : 10;
  var result = parseInt(string, base);
  if ($.get$isNaN(result) === true)
    throw $.$$throw($.FormatException$(string));
  return result;
};

$.Primitives_parseDouble = function(string) {
  $.checkString(string);
  if (!/^\s*(?:NaN|[+-]?(?:Infinity|(?:\.\d+|\d+(?:\.\d+)?)(?:[eE][+-]?\d+)?))\s*$/.test(string))
    throw $.$$throw($.FormatException$(string));
  var result = parseFloat(string);
  if ($.get$isNaN(result) === true && !$.eqB(string, 'NaN'))
    throw $.$$throw($.FormatException$(string));
  return result;
};

$.Primitives_objectTypeName = function(object) {
  var name$ = $.constructorNameFallback(object);
  if ($.eqB(name$, 'Object')) {
    var decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === 'string')
      name$ = decompiled;
  }
  return $.charCodeAt(name$, 0) === 36 ? $.substring$1(name$, 1) : name$;
};

$.Primitives_objectToString = function(object) {
  return 'Instance of \'' + $.S($.Primitives_objectTypeName(object)) + '\'';
};

$.Primitives_newList = function(length$) {
  if (length$ == null)
    return new Array();
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$) || length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  var result = new Array(length$);
  result.fixed$length = true;
  return result;
};

$.Primitives_stringFromCharCodes = function(charCodes) {
  for (var t1 = $.iterator(charCodes); t1.get$hasNext() === true;) {
    var t2 = t1.next$0();
    if (!(typeof t2 === 'number' && Math.floor(t2) === t2))
      throw $.$$throw($.ArgumentError$(t2));
  }
  return String.fromCharCode.apply(null, charCodes);
};

$.Primitives_dateNow = function() {
  return Date.now();
};

$.Primitives_getMonth = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : $.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
};

$.Primitives_lazyAsJsDate = function(receiver) {
  if (receiver.date === (void 0))
    receiver.date = new Date(receiver.millisecondsSinceEpoch);
  return receiver.date;
};

$.Primitives_getHours = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0) : ($.Primitives_lazyAsJsDate(receiver).getHours() + 0);
};

$.Primitives_getMinutes = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMinutes() + 0);
};

$.Primitives_getSeconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getSeconds() + 0);
};

$.Primitives_getMilliseconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0);
};

$.Primitives_getDay = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0) : ($.Primitives_lazyAsJsDate(receiver).getDate() + 0);
};

$.Primitives_getYear = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0) : ($.Primitives_lazyAsJsDate(receiver).getFullYear() + 0);
};

$.IndexOutOfRangeException$ = function(_value) {
  return new $.IndexOutOfRangeException(_value);
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.NullPointerException$ = function(functionName, arguments$) {
  return new $.NullPointerException(functionName, arguments$);
};

$.Maps_mapToString = function(m) {
  var result = $.StringBuffer_StringBuffer('');
  $.Maps__emitMap(m, result, $.ListImplementation_List(null));
  return $.toString(result);
};

$.Maps__emitMap = function(m, result, visiting) {
  var t1 = {};
  $.add$1(visiting, m);
  $.add$1(result, '{');
  t1.first_1 = true;
  $.forEach(m, new $.Maps__emitMap_anon(visiting, result, t1));
  $.add$1(result, '}');
  $.removeLast(visiting);
};

$.StringBuffer_StringBuffer = function(content$) {
  return $._StringBufferImpl$(content$);
};

$._IDBOpenDBRequestEventsImpl$ = function(_ptr) {
  return new $._IDBOpenDBRequestEventsImpl(_ptr);
};

$._StringBufferImpl$ = function(content$) {
  var t1 = new $._StringBufferImpl(null, null);
  t1._StringBufferImpl$1(content$);
  return t1;
};

$._MediaElementEventsImpl$ = function(_ptr) {
  return new $._MediaElementEventsImpl(_ptr);
};

$._ElementEventsImpl$ = function(_ptr) {
  return new $._ElementEventsImpl(_ptr);
};

$._EventListenerListImpl$ = function(_ptr, _type) {
  return new $._EventListenerListImpl(_ptr, _type);
};

$._IsolateContext$ = function() {
  var t1 = new $._IsolateContext(null, null, null);
  t1._IsolateContext$0();
  return t1;
};

$._IDBDatabaseEventsImpl$ = function(_ptr) {
  return new $._IDBDatabaseEventsImpl(_ptr);
};

$._Manager$ = function() {
  var t1 = new $._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null);
  t1._Manager$0();
  return t1;
};

$._EventLoop$ = function() {
  return new $._EventLoop($.Queue_Queue());
};

$._ElementAttributeMap$ = function(_element) {
  return new $._ElementAttributeMap(_element);
};

$._CssClassSet$ = function(_element) {
  return new $._CssClassSet(_element);
};

$._Timer$ = function(milliSeconds, callback) {
  var t1 = new $._Timer(true, null);
  t1._Timer$2(milliSeconds, callback);
  return t1;
};

$._Timer$repeating = function(milliSeconds, callback) {
  var t1 = new $._Timer(false, null);
  t1._Timer$repeating$2(milliSeconds, callback);
  return t1;
};

$._maybeScheduleMeasurementFrame = function() {
  if ($._measurementScheduler == null)
    $._measurementScheduler = $._MeasurementScheduler__MeasurementScheduler$best($._completeMeasurementFutures);
  $._measurementScheduler.maybeSchedule$0();
};

$._createMeasurementFuture = function(computeValue, completer) {
  if ($._pendingRequests == null) {
    $._pendingRequests = [];
    $._maybeScheduleMeasurementFrame();
  }
  $.add$1($._pendingRequests, $._MeasurementRequest$(computeValue, completer));
  return completer.get$future();
};

$._completeMeasurementFutures = function() {
  var t1 = $._pendingRequests;
  if (!(t1 == null))
    for (t1 = $.iterator(t1); t1.get$hasNext() === true;) {
      var request = t1.next$0();
      try {
        var t2 = request.computeValue$0();
        request.set$value(t2);
      } catch (exception) {
        t2 = $.unwrapException(exception);
        var e = t2;
        t2 = e;
        request.set$value(t2);
        request.set$exception(true);
      }

    }
  var completedRequests = $._pendingRequests;
  var readyMeasurementFrameCallbacks = $._pendingMeasurementFrameCallbacks;
  $._pendingRequests = null;
  $._pendingMeasurementFrameCallbacks = null;
  if (!(completedRequests == null))
    for (t1 = $.iterator(completedRequests); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      var t3 = t2.get$exception() === true;
      var t4 = t2.get$completer();
      if (t3)
        t4.completeException$1(t2.get$value());
      else
        t4.complete$1(t2.get$value());
    }
  if (!(readyMeasurementFrameCallbacks == null))
    for (t1 = $.iterator(readyMeasurementFrameCallbacks); t1.get$hasNext() === true;)
      t1.next$0().call$0();
};

$.Queue_Queue = function() {
  return $.DoubleLinkedQueue$();
};

$._convertNativeToDart_Window = function(win) {
  return $._DOMWindowCrossFrameImpl__createSafe(win);
};

$._convertNativeToDart_EventTarget = function(e) {
  if ("setInterval" in e)
    return $._DOMWindowCrossFrameImpl__createSafe(e);
  else
    return e;
};

$._convertNativeToDart_IDBKey = function(nativeKey) {
  if (new $._convertNativeToDart_IDBKey_containsDate().call$1(nativeKey) === true)
    throw $.$$throw($.CTC14);
  return nativeKey;
};

$._IsolateEvent$ = function(isolate, fn, message) {
  return new $._IsolateEvent(isolate, fn, message);
};

$._convertDartToNative_SerializedScriptValue = function(value) {
  return $._convertDartToNative_PrepareForStructuredClone(value);
};

$._convertDartToNative_PrepareForStructuredClone = function(value) {
  var values = [];
  var copies = [];
  var t1 = new $._convertDartToNative_PrepareForStructuredClone_findSlot(copies, values);
  var t2 = new $._convertDartToNative_PrepareForStructuredClone_readSlot(copies);
  var t3 = new $._convertDartToNative_PrepareForStructuredClone_writeSlot(copies);
  var t4 = new $._convertDartToNative_PrepareForStructuredClone_cleanupSlots();
  var copy = new $._convertDartToNative_PrepareForStructuredClone_walk(t3, t2, t1).call$1(value);
  t4.call$0();
  return copy;
};

$._isJavaScriptSimpleObject = function(value) {
  return Object.getPrototypeOf(value) === Object.prototype;
};

$._convertNativeToDart_AcceptStructuredClone = function(object, mustCopy) {
  var values = [];
  var copies = [];
  var t1 = new $._convertNativeToDart_AcceptStructuredClone_findSlot(copies, values);
  var t2 = new $._convertNativeToDart_AcceptStructuredClone_readSlot(copies);
  return new $._convertNativeToDart_AcceptStructuredClone_walk(mustCopy, new $._convertNativeToDart_AcceptStructuredClone_writeSlot(copies), t2, t1).call$1(object);
};

$._convertNativeToDart_IDBAny = function(object) {
  return $._convertNativeToDart_AcceptStructuredClone(object, false);
};

$._isMutationObserverSupported = function() {
  return !!(window.MutationObserver || window.WebKitMutationObserver);
};

$._MainManagerStub$ = function() {
  return new $._MainManagerStub();
};

$._addMeasurementFrameCallback = function(callback) {
  if ($._pendingMeasurementFrameCallbacks == null) {
    $._pendingMeasurementFrameCallbacks = [];
    $._maybeScheduleMeasurementFrame();
  }
  $.add$1($._pendingMeasurementFrameCallbacks, callback);
};

$._callInIsolate = function(isolate, function$) {
  isolate.eval$1(function$);
  $._globalState().get$topEventLoop().run$0();
};

$._currentIsolate = function() {
  return $._globalState().get$currentContext();
};

$._globalState = function() {
  return $globalState;
};

$._globalState0 = function(val) {
  $globalState = val;
};

$._HttpRequestUploadEventsImpl$ = function(_ptr) {
  return new $._HttpRequestUploadEventsImpl(_ptr);
};

$._fillStatics = function(context) {
  $globals = context.isolateStatics;
  $static_init();
};

$.startRootIsolate = function(entry) {
  var t1 = $._Manager$();
  $._globalState0(t1);
  if ($._globalState().get$isWorker() === true)
    return;
  var rootContext = $._IsolateContext$();
  $._globalState().set$rootContext(rootContext);
  $._fillStatics(rootContext);
  $._globalState().set$currentContext(rootContext);
  if (!($._window0() == null))
    rootContext.eval$1(new $.startRootIsolate_anon());
  rootContext.eval$1(entry);
  $._globalState().get$topEventLoop().run$0();
};

$._MessageTraverser_isPrimitive = function(x) {
  return x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean';
};

$._waitForPendingPorts = function(message, callback) {
  var finder = $._PendingSendPortFinder$();
  finder.traverse$1(message);
  $.Futures_wait(finder.ports).then$1(new $._waitForPendingPorts_anon(callback));
};

$._NativeJsSendPort$ = function(_receivePort, isolateId) {
  return new $._NativeJsSendPort(_receivePort, isolateId);
};

$._serializeMessage = function(message) {
  if ($._globalState().get$needSerialization() === true)
    return $._JsSerializer$().traverse$1(message);
  else
    return $._JsCopier$().traverse$1(message);
};

$._window0 = function() {
  return typeof window != "undefined" ? window : null;
};

$._deserializeMessage = function(message) {
  if ($._globalState().get$needSerialization() === true)
    return $._JsDeserializer$().deserialize$1(message);
  else
    return message;
};

$._timerFactory = function(millis, callback, repeating) {
  return repeating === true ? $._Timer$repeating(millis, callback) : $._Timer$(millis, callback);
};

$._WorkerSendPort$ = function(_workerId, isolateId, _receivePortId) {
  return new $._WorkerSendPort(_workerId, _receivePortId, isolateId);
};

$.encodeUriComponent = function(component) {
  return $._uriEncode('-_.!~*\'()0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz', component);
};

$._uriEncode = function(canonical, text) {
  if (typeof text !== 'string' && (typeof text !== 'object' || text === null || text.constructor !== Array && !text.is$JavaScriptIndexingBehavior()))
    return $._uriEncode$bailout(1, canonical, text);
  var byteToHex = new $._uriEncode_anon('0123456789ABCDEF');
  var result = $.StringBuffer_StringBuffer('');
  for (var i = 0; t1 = text.length, i < t1; ++i) {
    if (i < 0)
      throw $.ioore(i);
    if ($.geB($.indexOf$1(canonical, text[i]), 0)) {
      if (i < 0 || i >= text.length)
        throw $.ioore(i);
      $.add$1(result, text[i]);
    } else {
      var ch = $.charCodeAt(text, i);
      if ($.geB(ch, 55296) && $.ltB(ch, 56320)) {
        ++i;
        var nextCh = text.length === i ? 0 : $.charCodeAt(text, i);
        if ($.geB(nextCh, 56320) && $.ltB(nextCh, 57344)) {
          var t1 = $.shl($.sub(ch, 55296), 10);
          if (typeof t1 !== 'number')
            throw $.iae(t1);
          t1 = 65536 + t1;
          var t2 = $.sub(nextCh, 56320);
          if (typeof t2 !== 'number')
            throw $.iae(t2);
          var ch0 = t1 + t2;
        } else
          throw $.$$throw($.ArgumentError$('Malformed URI'));
        ch = ch0;
      }
      for (t1 = $.iterator($.codepointsToUtf8([ch], 0, null)); t1.get$hasNext() === true;)
        $.add$1(result, byteToHex.call$1(t1.next$0()));
    }
  }
  return $.toString(result);
};

$._JsSerializer$ = function() {
  var t1 = new $._JsSerializer(0, $._MessageTraverserVisitedMap$());
  t1._JsSerializer$0();
  return t1;
};

$.min = function(a, b) {
  if (typeof a === 'number') {
    if (typeof b === 'number') {
      if (a > b)
        return b;
      if (a < b)
        return a;
      if (typeof b === 'number') {
        if (typeof a === 'number')
          if (a === 0)
            return (a + b) * a * b;
        if (a === 0 && $.get$isNegative(b) === true || $.get$isNaN(b) === true)
          return b;
        return a;
      }
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$.max = function(a, b) {
  if (typeof a === 'number') {
    if (typeof b === 'number') {
      if (a > b)
        return a;
      if (a < b)
        return b;
      if (typeof b === 'number') {
        if (typeof a === 'number')
          if (a === 0)
            return a + b;
        if ($.get$isNaN(b) === true)
          return b;
        return a;
      }
      if (b === 0 && $.get$isNegative(a) === true)
        return b;
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$._MessageTraverserVisitedMap$ = function() {
  return new $._MessageTraverserVisitedMap();
};

$.HttpRequest_HttpRequest = function() {
  return new XMLHttpRequest();;
};

$._JsCopier$ = function() {
  var t1 = new $._JsCopier($._MessageTraverserVisitedMap$());
  t1._JsCopier$0();
  return t1;
};

$._JsVisitedMap$ = function() {
  return new $._JsVisitedMap(null);
};

$._HttpRequestEventsImpl$ = function(_ptr) {
  return new $._HttpRequestEventsImpl(_ptr);
};

$._addToEncoding = function(offset, bytes, value, buffer) {
  if (value !== (value | 0))
    return $._addToEncoding$bailout(1, offset, bytes, value, buffer);
  for (var t1 = buffer.length; bytes > 0;) {
    var t2 = offset + bytes;
    var t3 = (128 | value & 63) >>> 0;
    if (t2 < 0 || t2 >= t1)
      throw $.ioore(t2);
    buffer[t2] = t3;
    value = $.shr(value, 6);
    --bytes;
  }
  return value;
};

$.codepointsToUtf8 = function(codepoints, offset, length$) {
  var source = $._ListRange$(codepoints, offset, length$);
  for (var t1 = $.iterator(source), encodedLength = 0; t1.get$hasNext() === true;) {
    var t2 = t1.next$0();
    if ($.ltB(t2, 0) || $.gtB(t2, 1114111))
      encodedLength += 3;
    else if ($.leB(t2, 127))
      ++encodedLength;
    else if ($.leB(t2, 2047))
      encodedLength += 2;
    else if ($.leB(t2, 65535))
      encodedLength += 3;
    else if ($.leB(t2, 1114111))
      encodedLength += 4;
  }
  var encoded = $.ListImplementation_List(encodedLength);
  for (var t1 = $.iterator(source), insertAt = 0; t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if ($.ltB(t2, 0) || $.gtB(t2, 1114111)) {
      $.setRange$3(encoded, insertAt, 3, [239, 191, 189]);
      insertAt += 3;
    } else if ($.leB(t2, 127)) {
      if (insertAt >= encodedLength)
        throw $.ioore(insertAt);
      encoded[insertAt] = t2;
      ++insertAt;
    } else if ($.leB(t2, 2047)) {
      var t3 = (192 | 31 & $._addToEncoding(insertAt, 1, t2, encoded)) >>> 0;
      if (insertAt >= encodedLength)
        throw $.ioore(insertAt);
      encoded[insertAt] = t3;
      insertAt += 2;
    } else if ($.leB(t2, 65535)) {
      t3 = (224 | 15 & $._addToEncoding(insertAt, 2, t2, encoded)) >>> 0;
      if (insertAt >= encodedLength)
        throw $.ioore(insertAt);
      encoded[insertAt] = t3;
      insertAt += 3;
    } else if ($.leB(t2, 1114111)) {
      t3 = (240 | 7 & $._addToEncoding(insertAt, 3, t2, encoded)) >>> 0;
      if (insertAt >= encodedLength)
        throw $.ioore(insertAt);
      encoded[insertAt] = t3;
      insertAt += 4;
    }
  }
  return encoded;
};

$.Completer_Completer = function() {
  return $._CompleterImpl$();
};

$._ReceivePortImpl$ = function() {
  var t1 = $._ReceivePortImpl__nextFreeId;
  $._ReceivePortImpl__nextFreeId = $.add(t1, 1);
  t1 = new $._ReceivePortImpl(t1, null);
  t1._ReceivePortImpl$0();
  return t1;
};

$._PendingSendPortFinder$ = function() {
  var t1 = $._MessageTraverserVisitedMap$();
  t1 = new $._PendingSendPortFinder([], t1);
  t1._PendingSendPortFinder$0();
  return t1;
};

$.Futures_wait = function(futures) {
  var t1 = {};
  if (typeof futures !== 'string' && (typeof futures !== 'object' || futures === null || futures.constructor !== Array && !futures.is$JavaScriptIndexingBehavior()))
    return $.Futures_wait$bailout(1, futures, t1);
  if ($.get$isEmpty(futures) === true)
    return $.Future_Future$immediate($.CTC0);
  var completer = $.Completer_Completer();
  var result = completer.get$future();
  t1.remaining_1 = futures.length;
  var values = $.ListImplementation_List(futures.length);
  for (var i = 0; i < futures.length; ++i) {
    var future = futures[i];
    future.then$1(new $.Futures_wait_anon(i, t1, completer, values, result));
    future.handleException$1(new $.Futures_wait_anon0(result, completer, future));
  }
  return result;
};

$._CompleterImpl$ = function() {
  return new $._CompleterImpl($._FutureImpl$());
};

$._FutureImpl$ = function() {
  return new $._FutureImpl(false, null, null, null, false, [], [], []);
};

$._FutureImpl__FutureImpl$immediate = function(value) {
  var res = $._FutureImpl$();
  res._setValue$1(value);
  return res;
};

$.joinFutures = function(futures, callback) {
  var t1 = {};
  t1.count_1 = 0;
  t1 = new $.joinFutures_helper(callback, t1, futures.length);
  for (var t2 = $.iterator(futures); t2.get$hasNext() === true;)
    t2.next$0().then$1(t1);
};

$.mouseToTouchCallback = function(callback) {
  return new $.mouseToTouchCallback_anon(callback);
};

$._addEventListeners = function(node, onStart, onMove, onEnd, onCancel, capture) {
  var t1 = {};
  t1.onEnd_3 = onEnd;
  t1.onStart_1 = onStart;
  t1.onMove_2 = onMove;
  t1.removeListeners_4 = null;
  var t2 = new $._addEventListeners_onEndWrapper(t1);
  var t3 = new $._addEventListeners_onLeaveWrapper(t1);
  var t4 = new $._addEventListeners_onCancelWrapper(onCancel, t1);
  if ($.Device_supportsTouch() === true) {
    t1.removeListeners_4 = new $._addEventListeners_anon(t4, capture, t3, t1, t2);
    node.get$on().get$touchStart().add$2(new $._addEventListeners_anon0(t4, capture, t3, t1, t2), capture);
  } else {
    t1.onStart_1 = $.mouseToTouchCallback(t1.onStart_1);
    t1.onMove_2 = $.mouseToTouchCallback(t1.onMove_2);
    t1.onEnd_3 = $.mouseToTouchCallback(t1.onEnd_3);
    t1.removeListeners_4 = new $._addEventListeners_anon1(t4, capture, t1, t2);
    node.get$on().get$mouseDown().add$2(new $._addEventListeners_anon2(t4, capture, t1, t2), capture);
  }
};

$.FutureAlreadyCompleteException$ = function() {
  return new $.FutureAlreadyCompleteException();
};

$.FutureUnhandledException$ = function(source, stackTrace) {
  return new $.FutureUnhandledException(source, stackTrace);
};

$.Comparable_compare = function(a, b) {
  return $.compareTo(a, b);
};

$.StringImplementation_String$fromCharCodes = function(charCodes) {
  return $.StringImplementation__fromCharCodes(charCodes);
};

$.StringImplementation__fromCharCodes = function(charCodes) {
  $.checkNull(charCodes);
  if (!$.isJsArray(charCodes))
    charCodes = $.ListImplementation_List$from(charCodes);
  return $.Primitives_stringFromCharCodes(charCodes);
};

$.StringImplementation_join = function(strings, separator) {
  $.checkNull(strings);
  $.checkNull(separator);
  return $.stringJoinUnchecked($.StringImplementation__toJsStringArray(strings), separator);
};

$.StringImplementation_concatAll = function(strings) {
  return $.stringJoinUnchecked($.StringImplementation__toJsStringArray(strings), '');
};

$.StringImplementation__toJsStringArray = function(strings) {
  if (typeof strings !== 'object' || strings === null || (strings.constructor !== Array || !!strings.immutable$list) && !strings.is$JavaScriptIndexingBehavior())
    return $.StringImplementation__toJsStringArray$bailout(1, strings);
  $.checkNull(strings);
  var length$ = strings.length;
  if ($.isJsArray(strings)) {
    for (var i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      var string = strings[i];
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    var array = strings;
  } else {
    array = $.ListImplementation_List(length$);
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      array[i] = string;
    }
  }
  return array;
};

$.ListImplementation_List = function(length$) {
  return $.Primitives_newList(length$);
};

$.ListImplementation_List$from = function(other) {
  return $.ListImplementation__from(other);
};

$.ListImplementation__from = function(other) {
  var result = $.ListImplementation_List(null);
  for (var t1 = $.iterator(other); t1.get$hasNext() === true;)
    result.push(t1.next$0());
  return result;
};

$.IllegalJSRegExpException$ = function(_pattern, _errmsg) {
  return new $.IllegalJSRegExpException(_pattern, _errmsg);
};

$.HashMapImplementation$ = function() {
  var t1 = new $.HashMapImplementation(null, null, null, null, null);
  t1.HashMapImplementation$0();
  return t1;
};

$.HashMapImplementation__computeLoadLimit = function(capacity) {
  return $.tdiv(capacity * 3, 4);
};

$.HashMapImplementation__nextProbe = function(currentProbe, numberOfProbes, length$) {
  return (currentProbe + numberOfProbes & length$ - 1) >>> 0;
};

$._DOMWindowCrossFrameImpl$ = function(_window) {
  return new $._DOMWindowCrossFrameImpl(_window);
};

$._DOMWindowCrossFrameImpl__createSafe = function(w) {
  var t1 = $.window();
  if (w == null ? t1 == null : w === t1)
    return w;
  else
    return $._DOMWindowCrossFrameImpl$(w);
};

$.int_parse = function(source) {
  return $.Primitives_parseInt(source);
};

$.FutureNotCompleteException$ = function() {
  return new $.FutureNotCompleteException();
};

$._Deserializer_isPrimitive = function(x) {
  return x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean';
};

$._JsDeserializer$ = function() {
  return new $._JsDeserializer(null);
};

$._FrameSetElementEventsImpl$ = function(_ptr) {
  return new $._FrameSetElementEventsImpl(_ptr);
};

$._SVGElementInstanceEventsImpl$ = function(_ptr) {
  return new $._SVGElementInstanceEventsImpl(_ptr);
};

$.DoubleLinkedQueue$ = function() {
  var t1 = new $.DoubleLinkedQueue(null);
  t1.DoubleLinkedQueue$0();
  return t1;
};

$._DoubleLinkedQueueIterator$ = function(_sentinel) {
  var t1 = new $._DoubleLinkedQueueIterator(_sentinel, null);
  t1._DoubleLinkedQueueIterator$1(_sentinel);
  return t1;
};

$._DoubleLinkedQueueEntrySentinel$ = function() {
  var t1 = new $._DoubleLinkedQueueEntrySentinel(null, null, null);
  t1.DoubleLinkedQueueEntry$1(null);
  t1._DoubleLinkedQueueEntrySentinel$0();
  return t1;
};

$.DoubleLinkedQueueEntry$ = function(e) {
  var t1 = new $.DoubleLinkedQueueEntry(null, null, null);
  t1.DoubleLinkedQueueEntry$1(e);
  return t1;
};

$.TopBarView$ = function(_udjApp) {
  var t1 = $.HashMapImplementation$();
  t1 = new $.TopBarView(_udjApp, null, null, $.ListImplementation_List(null), null, null, null, 'top-bar', false, false, false, false, null, null, null, t1);
  t1.TopBarView$1(_udjApp);
  return t1;
};

$._ChildNodeListLazy$ = function(_this) {
  return new $._ChildNodeListLazy(_this);
};

$.Element_Element$html = function(html) {
  return $._ElementFactoryProvider_createElement_html(html);
};

$.Element_Element$tag = function(tag) {
  return $._ElementFactoryProvider_createElement_tag(tag);
};

$.Scroller$ = function(scrollableElem, verticalEnabled, horizontalEnabled, momentumEnabled, lookupContentSizeDelegate, defaultDecelerationFactor, scrollTechnique, capture) {
  var t1 = scrollableElem.get$parent();
  var t2 = !(scrollTechnique == null) ? scrollTechnique : 1;
  var t3 = $.Coordinate$(0, 0);
  t3 = new $.Scroller(scrollableElem, t1, null, null, null, null, null, null, null, verticalEnabled, horizontalEnabled, momentumEnabled, t2, $.Coordinate$(0, 0), $.Coordinate$(0, 0), $.Coordinate$(0, 0), $.Coordinate$(0, 0), null, lookupContentSizeDelegate, null, null, t3, false, null, false, false, null);
  t3.Scroller$8(scrollableElem, verticalEnabled, horizontalEnabled, momentumEnabled, lookupContentSizeDelegate, defaultDecelerationFactor, scrollTechnique, capture);
  return t3;
};

$.Scroller__getOffsetFunction = function(scrollTechnique) {
  return $.eqB(scrollTechnique, 1) ? new $.Scroller__getOffsetFunction_anon() : new $.Scroller__getOffsetFunction_anon0();
};

$._FileWriterEventsImpl$ = function(_ptr) {
  return new $._FileWriterEventsImpl(_ptr);
};

$.Scrollbar$ = function(scroller, displayOnHover) {
  var t1 = new $.Scrollbar(scroller, scroller.getFrame$0(), false, false, $.HashMapImplementation$(), null, null, null, null, null, null, null, null, displayOnHover, false);
  t1.Scrollbar$2$displayOnHover(scroller, displayOnHover);
  return t1;
};

$._DocumentEventsImpl$ = function(_ptr) {
  return new $._DocumentEventsImpl(_ptr);
};

$.ViewLayout$ = function(view) {
  return new $.ViewLayout(null, null, view, null, null, null, null);
};

$.ViewLayout_hasCustomLayout = function(view) {
  return $.eq($.index(view.customStyle, 'display'), '-dart-grid');
};

$.ViewLayout_ViewLayout$fromView = function(view) {
  if ($.ViewLayout_hasCustomLayout(view) === true)
    return $.GridLayout$(view);
  else
    return $.ViewLayout$(view);
};

$.ViewLayout__toPixels = function(style) {
  if ($.endsWith(style, 'px') === true)
    return $.int_parse($.substring$2(style, 0, $.sub($.get$length(style), 2)));
  else
    throw $.$$throw($.UnsupportedError$('Unknown min/max content size format: "' + $.S(style) + '"'));
};

$.ViewLayout__styleToPixels = function(style, size, parentSize) {
  if ($.eqB(style, 'none'))
    return size;
  if ($.endsWith(style, '%') === true)
    return $.toInt($.mul($.div($.double_parse($.substring$2(style, 0, $.sub($.get$length(style), 1))), 100), parentSize));
  return $.ViewLayout__toPixels(style);
};

$._FileReaderEventsImpl$ = function(_ptr) {
  return new $._FileReaderEventsImpl(_ptr);
};

$._MeasurementScheduler__MeasurementScheduler$best = function(callback) {
  if ($._isMutationObserverSupported())
    return $._MutationObserverScheduler$(callback);
  return $._PostMessageScheduler$(callback);
};

$._MutationObserverScheduler$ = function(callback) {
  var t1 = new $._MutationObserverScheduler(null, null, false, callback);
  t1._MutationObserverScheduler$1(callback);
  return t1;
};

$._PostMessageScheduler$ = function(callback) {
  var t1 = new $._PostMessageScheduler('DART-MEASURE', false, callback);
  t1._PostMessageScheduler$1(callback);
  return t1;
};

$._ElementFactoryProvider_createElement_html = function(html) {
  var match = $.CTC12.firstMatch$1(html);
  if (!(match == null)) {
    var tag = $.toLowerCase(match.group$1(1));
    var parentTag = $.CTC13.containsKey$1(tag) === true ? $.CTC13.operator$index$1(tag) : 'div';
  } else {
    parentTag = 'div';
    tag = null;
  }
  var temp = $.Element_Element$tag(parentTag);
  temp.set$innerHTML(html);
  if ($.eqB($.get$length(temp.get$elements()), 1))
    var element = $.index(temp.get$elements(), 0);
  else if ($.eqB(parentTag, 'html') && $.eqB($.get$length(temp.get$elements()), 2)) {
    var t1 = temp.get$elements();
    element = $.index(t1, $.eqB(tag, 'head') ? 0 : 1);
  } else
    throw $.$$throw($.ArgumentError$('HTML had ' + $.S($.get$length(temp.get$elements())) + ' ' + 'top level elements but 1 expected'));
  element.remove$0();
  return element;
};

$._ElementFactoryProvider_createElement_tag = function(tag) {
  return document.createElement(tag);
};

$._Elements_createDivElement = function() {
  return $._document().$dom_createElement$1('div');
};

$._MutationObserverFactoryProvider_createMutationObserver = function(callback) {
  callback = $.convertDartClosureToJS(callback, 2);
    var constructor =
        window.MutationObserver || window.WebKitMutationObserver ||
        window.MozMutationObserver;
    return new constructor(callback);
  
};

$._MeasurementRequest$ = function(computeValue, completer) {
  return new $._MeasurementRequest(computeValue, completer, null, false);
};

$.Size$ = function(width, height) {
  return new $.Size(width, height);
};

$._WorkerEventsImpl$ = function(_ptr) {
  return new $._WorkerEventsImpl(_ptr);
};

$._AbstractWorkerEventsImpl$ = function(_ptr) {
  return new $._AbstractWorkerEventsImpl(_ptr);
};

$._EventsImpl$ = function(_ptr) {
  return new $._EventsImpl(_ptr);
};

$.GridLayout$ = function(view) {
  var t1 = view.customStyle;
  var t2 = new $.GridLayout($._GridTrackParser_parse($.index(t1, 'grid-rows')), $._GridTrackParser_parse($.index(t1, 'grid-columns')), $._GridTemplateParser_parse($.index(t1, 'grid-template')), $._GridTrackParser_parseTrackSizing($.index(t1, 'grid-row-sizing')), $._GridTrackParser_parseTrackSizing($.index(t1, 'grid-column-sizing')), null, null, null, null, null, null, null, view, null, null, null, null);
  t2.GridLayout$1(view);
  return t2;
};

$.Event_Event = function(type, canBubble, cancelable) {
  return $._EventFactoryProvider_createEvent(type, canBubble, cancelable);
};

$.GridLayout__hasContentSizedTracks = function(tracks, sizeMode, breadth) {
  for (var t1 = $.iterator(tracks); t1.get$hasNext() === true;) {
    var fn = breadth.getSizingFunction$1(t1.next$0());
    if (!($.eqB(sizeMode, $.CTC28) && fn.get$isMaxContentSized() === true))
      var t2 = $.eqB(sizeMode, $.CTC26) && fn.get$isContentSized() === true;
    else
      t2 = true;
    if (t2)
      return $.eqB($.get$length(tracks), 1) || $.some(tracks, new $.GridLayout__hasContentSizedTracks_anon()) !== true;
  }
  return false;
};

$.GridTrackList$ = function(tracks, lineNames) {
  return new $.GridTrackList(tracks, lineNames);
};

$.GridTemplate$ = function(rows) {
  var t1 = new $.GridTemplate($.HashMapImplementation$(), rows.length);
  t1.GridTemplate$1(rows);
  return t1;
};

$.TrackSizing$ = function(min, max) {
  return new $.TrackSizing(min, max);
};

$.GridTrack$ = function(sizing) {
  return new $.GridTrack(null, null, null, null, null, sizing);
};

$.GridLayoutParams$ = function(view, layout) {
  var t1 = view.get$node();
  var t2 = new $.GridLayoutParams(null, null, null, null, null, null, null, null);
  t2.LayoutParams$1(t1);
  t2.GridLayoutParams$2(view, layout);
  return t2;
};

$._GridLocation$ = function(start, length$) {
  return new $._GridLocation(start, length$);
};

$.CollectionUtils_map = function(source, mapper) {
  var result = $.ListImplementation_List(typeof source === 'object' && source !== null && (source.constructor === Array || source.is$List()) ? $.get$length($.listTypeCast(source)) : null);
  for (var t1 = $.iterator(source), i = 0; t1.get$hasNext() === true;) {
    var t2 = t1.next$0();
    var i0 = i + 1;
    t2 = mapper.call$1(t2);
    if (i >= result.length)
      throw $.ioore(i);
    result[i] = t2;
    i = i0;
  }
  return result;
};

$.CollectionUtils_orderBy = function(source, selector) {
  var result = $.ListImplementation_List$from(source);
  $.CollectionUtils_sortBy(result, selector);
  return result;
};

$.CollectionUtils_sortBy = function(list, selector) {
  if (!(selector == null))
    $.sort$1(list, new $.CollectionUtils_sortBy_anon(selector));
  else
    $.sort$1(list, new $.CollectionUtils_sortBy_anon0());
};

$._EventSourceEventsImpl$ = function(_ptr) {
  return new $._EventSourceEventsImpl(_ptr);
};

$.CollectionUtils_sum = function(source, selector) {
  var iter = $.iterator(source);
  if (!(selector == null)) {
    var total = 0;
    do {
      var t1 = selector.call$1(iter.next$0());
      if (typeof t1 !== 'number')
        throw $.iae(t1);
      total += t1;
    } while (iter.get$hasNext() === true);
  } else {
    total = 0;
    do {
      t1 = iter.next$0();
      if (typeof t1 !== 'number')
        throw $.iae(t1);
      total += t1;
    } while (iter.get$hasNext() === true);
  }
  return total;
};

$.FormatException$ = function(message) {
  return new $.FormatException(message);
};

$._Device_userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$._Device_isOpera = function() {
  return $.contains$2($._Device_userAgent(), 'Opera', 0);
};

$._Device_isIE = function() {
  return $._Device_isOpera() !== true && $.contains$2($._Device_userAgent(), 'MSIE', 0) === true;
};

$._Device_isFirefox = function() {
  return $.contains$2($._Device_userAgent(), 'Firefox', 0);
};

$._WorkerContextEventsImpl$ = function(_ptr) {
  return new $._WorkerContextEventsImpl(_ptr);
};

$.ListIterator$ = function(list) {
  return new $.ListIterator(0, list);
};

$.StringMatch$ = function(start, str, pattern) {
  return new $.StringMatch(start, str, pattern);
};

$.Arrays_copy = function(src, srcStart, dst, dstStart, count) {
  if (typeof src !== 'string' && (typeof src !== 'object' || src === null || src.constructor !== Array && !src.is$JavaScriptIndexingBehavior()))
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (typeof dst !== 'object' || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !dst.is$JavaScriptIndexingBehavior())
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart)
    for (var i = srcStart + count - 1, j = dstStart + count - 1, t1 = src.length, t2 = dst.length; i >= srcStart; --i, --j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      var t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
  else
    for (t1 = srcStart + count, t2 = src.length, t3 = dst.length, j = dstStart, i = srcStart; i < t1; ++i, ++j) {
      if (i < 0 || i >= t2)
        throw $.ioore(i);
      var t4 = src[i];
      if (j < 0 || j >= t3)
        throw $.ioore(j);
      dst[j] = t4;
    }
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Arrays_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (var i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$._TextTrackListEventsImpl$ = function(_ptr) {
  return new $._TextTrackListEventsImpl(_ptr);
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp__globalVersionOf(re), _str, null, false);
};

$._MatchImplementation$ = function(pattern, str, start, end, _groups) {
  return new $._MatchImplementation(pattern, str, start, end, _groups);
};

$._Lists_indexOf = function(a, element, startIndex, endIndex) {
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof startIndex !== 'number')
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== 'number')
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (var i = startIndex; i < endIndex; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$._Lists_getRange = function(a, start, length$, accumulator) {
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $._Lists_getRange$bailout(1, a, start, length$, accumulator);
  if (typeof start !== 'number')
    return $._Lists_getRange$bailout(1, a, start, length$, accumulator);
  if ($.ltB(length$, 0))
    throw $.$$throw($.ArgumentError$('length'));
  if (start < 0)
    throw $.$$throw($.IndexOutOfRangeException$(start));
  if (typeof length$ !== 'number')
    throw $.iae(length$);
  var end = start + length$;
  if (end > a.length)
    throw $.$$throw($.IndexOutOfRangeException$(end));
  for (var i = start; i < end; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    accumulator.push(a[i]);
  }
  return accumulator;
};

$._TextTrackEventsImpl$ = function(_ptr) {
  return new $._TextTrackEventsImpl(_ptr);
};

$.DivElement_DivElement = function() {
  return $._Elements_createDivElement();
};

$._Sort__doSort = function(a, left, right, compare) {
  if ($.leB($.sub(right, left), 32))
    $._Sort_insertionSort_(a, left, right, compare);
  else
    $._Sort__dualPivotQuicksort(a, left, right, compare);
};

$._Sort_insertionSort_ = function(a, left, right, compare) {
  if (typeof a !== 'object' || a === null || (a.constructor !== Array || !!a.immutable$list) && !a.is$JavaScriptIndexingBehavior())
    return $._Sort_insertionSort_$bailout(1, a, left, right, compare);
  if (typeof right !== 'number')
    return $._Sort_insertionSort_$bailout(1, a, left, right, compare);
  for (var i = left + 1; i <= right; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    var el = a[i];
    var j = i;
    while (true) {
      if (j > left) {
        var t1 = j - 1;
        if (t1 !== (t1 | 0))
          throw $.iae(t1);
        if (t1 < 0 || t1 >= a.length)
          throw $.ioore(t1);
        var t2 = $.gtB(compare.call$2(a[t1], el), 0);
        t1 = t2;
      } else
        t1 = false;
      if (!t1)
        break;
      var j0 = j - 1;
      if (j0 !== (j0 | 0))
        throw $.iae(j0);
      t1 = a.length;
      if (j0 < 0 || j0 >= t1)
        throw $.ioore(j0);
      t2 = a[j0];
      if (j !== (j | 0))
        throw $.iae(j);
      if (j < 0 || j >= t1)
        throw $.ioore(j);
      a[j] = t2;
      j = j0;
    }
    if (j !== (j | 0))
      throw $.iae(j);
    if (j < 0 || j >= a.length)
      throw $.ioore(j);
    a[j] = el;
  }
};

$._Sort__dualPivotQuicksort = function(a, left, right, compare) {
  if (typeof a !== 'object' || a === null || (a.constructor !== Array || !!a.immutable$list) && !a.is$JavaScriptIndexingBehavior())
    return $._Sort__dualPivotQuicksort$bailout(1, a, left, right, compare, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  var sixth = $.tdiv($.add($.sub(right, left), 1), 6);
  if (typeof sixth !== 'number')
    throw $.iae(sixth);
  var index1 = left + sixth;
  var index5 = $.sub(right, sixth);
  if (typeof right !== 'number')
    throw $.iae(right);
  var index3 = $.tdiv(left + right, 2);
  var index2 = index3 - sixth;
  var index4 = index3 + sixth;
  if (index1 !== (index1 | 0))
    throw $.iae(index1);
  var t1 = a.length;
  if (index1 < 0 || index1 >= t1)
    throw $.ioore(index1);
  var el1 = a[index1];
  if (index2 !== (index2 | 0))
    throw $.iae(index2);
  if (index2 < 0 || index2 >= t1)
    throw $.ioore(index2);
  var el2 = a[index2];
  if (index3 !== (index3 | 0))
    throw $.iae(index3);
  if (index3 < 0 || index3 >= t1)
    throw $.ioore(index3);
  var el3 = a[index3];
  if (index4 !== (index4 | 0))
    throw $.iae(index4);
  if (index4 < 0 || index4 >= t1)
    throw $.ioore(index4);
  var el4 = a[index4];
  if (index5 !== (index5 | 0))
    throw $.iae(index5);
  if (index5 < 0 || index5 >= t1)
    throw $.ioore(index5);
  var el5 = a[index5];
  if ($.gtB(compare.call$2(el1, el2), 0)) {
    var t0 = el2;
    el2 = el1;
    el1 = t0;
  }
  if ($.gtB(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  if ($.gtB(compare.call$2(el1, el3), 0)) {
    t0 = el3;
    el3 = el1;
    el1 = t0;
  }
  if ($.gtB(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el1, el4), 0)) {
    t0 = el4;
    el4 = el1;
    el1 = t0;
  }
  if ($.gtB(compare.call$2(el3, el4), 0)) {
    t0 = el4;
    el4 = el3;
    el3 = t0;
  }
  if ($.gtB(compare.call$2(el2, el5), 0)) {
    t0 = el5;
    el5 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  t1 = a.length;
  if (index1 >= t1)
    throw $.ioore(index1);
  a[index1] = el1;
  if (index3 >= t1)
    throw $.ioore(index3);
  a[index3] = el3;
  if (index5 >= t1)
    throw $.ioore(index5);
  a[index5] = el5;
  if (left !== (left | 0))
    throw $.iae(left);
  if (left < 0 || left >= t1)
    throw $.ioore(left);
  var t2 = a[left];
  if (index2 >= t1)
    throw $.ioore(index2);
  a[index2] = t2;
  if (right !== (right | 0))
    throw $.iae(right);
  if (right < 0 || right >= t1)
    throw $.ioore(right);
  t2 = a[right];
  if (index4 >= t1)
    throw $.ioore(index4);
  a[index4] = t2;
  var less = left + 1;
  var great = right - 1;
  var pivots_are_equal = $.eqB(compare.call$2(el2, el4), 0);
  if (pivots_are_equal)
    for (var k = less; k <= great; ++k) {
      if (k !== (k | 0))
        throw $.iae(k);
      if (k < 0 || k >= a.length)
        throw $.ioore(k);
      var ak = a[k];
      var comp = compare.call$2(ak, el2);
      if (typeof comp !== 'number')
        return $._Sort__dualPivotQuicksort$bailout(2, a, left, less, compare, great, right, k, index1, index5, el2, pivots_are_equal, ak, comp, el4);
      if (comp === 0)
        continue;
      if (comp < 0) {
        if (!(k === less)) {
          if (less !== (less | 0))
            throw $.iae(less);
          t1 = a.length;
          if (less < 0 || less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else
        for (var less0 = less + 1; true;) {
          if (great !== (great | 0))
            throw $.iae(great);
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          comp = compare.call$2(a[great], el2);
          if ($.gtB(comp, 0)) {
            --great;
            continue;
          } else {
            t1 = $.ltB(comp, 0);
            var great0 = great - 1;
            t2 = a.length;
            if (t1) {
              if (less !== (less | 0))
                throw $.iae(less);
              if (less < 0 || less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              great = great0;
              less = less0;
              break;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
              great = great0;
              break;
            }
          }
        }
    }
  else
    for (k = less; k <= great; ++k) {
      if (k !== (k | 0))
        throw $.iae(k);
      if (k < 0 || k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.ltB(compare.call$2(ak, el2), 0)) {
        if (!(k === less)) {
          if (less !== (less | 0))
            throw $.iae(less);
          t1 = a.length;
          if (less < 0 || less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else if ($.gtB(compare.call$2(ak, el4), 0))
        for (less0 = less + 1; true;) {
          if (great !== (great | 0))
            throw $.iae(great);
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.gtB(compare.call$2(a[great], el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.ltB(compare.call$2(a[great], el2), 0);
            great0 = great - 1;
            t2 = a.length;
            if (t1) {
              if (less !== (less | 0))
                throw $.iae(less);
              if (less < 0 || less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              great = great0;
              less = less0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
              great = great0;
            }
            break;
          }
        }
    }
  t1 = less - 1;
  if (t1 !== (t1 | 0))
    throw $.iae(t1);
  t2 = a.length;
  if (t1 < 0 || t1 >= t2)
    throw $.ioore(t1);
  var t3 = a[t1];
  if (left >= t2)
    throw $.ioore(left);
  a[left] = t3;
  a[t1] = el2;
  t1 = great + 1;
  if (t1 !== (t1 | 0))
    throw $.iae(t1);
  if (t1 < 0 || t1 >= t2)
    throw $.ioore(t1);
  t3 = a[t1];
  if (right >= t2)
    throw $.ioore(right);
  a[right] = t3;
  a[t1] = el4;
  $._Sort__doSort(a, left, less - 2, compare);
  $._Sort__doSort(a, great + 2, right, compare);
  if (pivots_are_equal)
    return;
  if (less < index1 && great > index5) {
    while (true) {
      if (less !== (less | 0))
        throw $.iae(less);
      if (less < 0 || less >= a.length)
        throw $.ioore(less);
      if (!$.eqB(compare.call$2(a[less], el2), 0))
        break;
      ++less;
    }
    while (true) {
      if (great !== (great | 0))
        throw $.iae(great);
      if (great < 0 || great >= a.length)
        throw $.ioore(great);
      if (!$.eqB(compare.call$2(a[great], el4), 0))
        break;
      --great;
    }
    for (k = less; k <= great; ++k) {
      if (k !== (k | 0))
        throw $.iae(k);
      if (k < 0 || k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.eqB(compare.call$2(ak, el2), 0)) {
        if (!(k === less)) {
          if (less !== (less | 0))
            throw $.iae(less);
          t1 = a.length;
          if (less < 0 || less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else if ($.eqB(compare.call$2(ak, el4), 0))
        for (less0 = less + 1; true;) {
          if (great !== (great | 0))
            throw $.iae(great);
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.eqB(compare.call$2(a[great], el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.ltB(compare.call$2(a[great], el2), 0);
            great0 = great - 1;
            t2 = a.length;
            if (t1) {
              if (less !== (less | 0))
                throw $.iae(less);
              if (less < 0 || less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              great = great0;
              less = less0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
              great = great0;
            }
            break;
          }
        }
    }
    $._Sort__doSort(a, less, great, compare);
  } else
    $._Sort__doSort(a, less, great, compare);
};

$._TextTrackCueEventsImpl$ = function(_ptr) {
  return new $._TextTrackCueEventsImpl(_ptr);
};

$._DedicatedWorkerContextEventsImpl$ = function(_ptr) {
  return new $._DedicatedWorkerContextEventsImpl(_ptr);
};

$._LocalWindowImpl__isDartLocation = function(thing) {
  try {
    var t1 = thing;
    return typeof t1 === 'object' && t1 !== null && t1.is$Location();
  } catch (exception) {
    $.unwrapException(exception);
    return false;
  }

};

$._NodeListWrapper$ = function(list) {
  return new $._NodeListWrapper(list);
};

$.Date_Date$now = function() {
  return $._DateImpl$now();
};

$.Date_Date$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  return $._DateImpl$fromMillisecondsSinceEpoch(millisecondsSinceEpoch, isUtc);
};

$._RTCPeerConnectionEventsImpl$ = function(_ptr) {
  return new $._RTCPeerConnectionEventsImpl(_ptr);
};

$.GridItemAlignment$fromString = function(value) {
  var t1 = value == null ? 'stretch' : value;
  t1 = new $.GridItemAlignment(t1);
  t1.GridItemAlignment$fromString$1(value);
  return t1;
};

$.StringUtils_parseInt = function(str, ifNull) {
  return str == null ? ifNull : $.int_parse(str);
};

$._GridItemParser$_internal = function(src) {
  return new $._GridItemParser(src, 0);
};

$._GridItemParser_parse = function(cell, list) {
  if (cell == null)
    return;
  var p = $._GridItemParser$_internal(cell);
  var result = p._parseTrack$1(list);
  p._eatEnd$0();
  return result;
};

$._Parser__isWhitespace = function(c) {
  switch (c) {
    case 32:
    case 9:
    case 10:
    case 13:
      return true;
  }
  return false;
};

$._Parser__isLetter = function(c) {
  if (!($.leB(97, c) && $.leB(c, 122)))
    var t1 = $.leB(65, c) && $.leB(c, 90);
  else
    t1 = true;
  return t1;
};

$._GridTemplateParser$_internal = function(src) {
  return new $._GridTemplateParser(src, 0);
};

$._GridTemplateParser_parseCell = function(str) {
  if (str == null)
    return;
  var p = $._GridTemplateParser$_internal(str);
  var result = p._maybeEatString$0();
  p._eatEnd$0();
  return result;
};

$._GridTemplateParser_parse = function(str) {
  if (str == null)
    return;
  var p = $._GridTemplateParser$_internal(str);
  var result = p._parseTemplate$0();
  p._eatEnd$0();
  return result;
};

$.SyntaxErrorException$ = function(_message, _source, _offset) {
  return new $.SyntaxErrorException(_message, _offset, _source);
};

$._WebSocketEventsImpl$ = function(_ptr) {
  return new $._WebSocketEventsImpl(_ptr);
};

$._GridTrackParser_parse = function(str) {
  if (str == null)
    return;
  var p = $._GridTrackParser$_internal(str);
  var result = p._parseTrackList$0();
  p._eatEnd$0();
  return result;
};

$._GridTrackParser_parseTrackSizing = function(str) {
  if (str == null)
    str = 'auto';
  var p = $._GridTrackParser$_internal(str);
  var result = p._parseTrackMinmax$0();
  p._eatEnd$0();
  return result;
};

$._GridTrackParser$_internal = function(src) {
  return new $._GridTrackParser($.ListImplementation_List(null), $.HashMapImplementation$(), src, 0);
};

$._RTCDataChannelEventsImpl$ = function(_ptr) {
  return new $._RTCDataChannelEventsImpl(_ptr);
};

$.FractionSizing$ = function(fractionValue) {
  return new $.FractionSizing(fractionValue);
};

$.FixedSizing$ = function(length$, units) {
  var t1 = new $.FixedSizing(units, length$, false);
  t1.FixedSizing$2(length$, units);
  return t1;
};

$._GridTemplateRect$ = function(_char, row, column) {
  return new $._GridTemplateRect(row, column, 1, 1, 1, _char);
};

$._DOMApplicationCacheEventsImpl$ = function(_ptr) {
  return new $._DOMApplicationCacheEventsImpl(_ptr);
};

$._ElementRectImpl$ = function(element) {
  return new $._ElementRectImpl($._SimpleClientRect$(element.get$clientLeft(), element.get$clientTop(), element.get$clientWidth(), element.get$clientHeight()), $._SimpleClientRect$(element.get$offsetLeft(), element.get$offsetTop(), element.get$offsetWidth(), element.get$offsetHeight()), $._SimpleClientRect$(element.get$scrollLeft(), element.get$scrollTop(), element.get$scrollWidth(), element.get$scrollHeight()), element.getBoundingClientRect$0(), element.getClientRects$0());
};

$._SimpleClientRect$ = function(left, top$, width, height) {
  return new $._SimpleClientRect(left, top$, width, height);
};

$.ChangeEvent$property = function(target, propertyName, newValue, oldValue) {
  return new $.ChangeEvent(target, 0, newValue, oldValue, propertyName, null);
};

$.ChangeEvent$list = function(target, type, index, newValue, oldValue) {
  return new $.ChangeEvent(target, type, newValue, oldValue, null, index);
};

$.ChangeEvent$global = function(target) {
  return new $.ChangeEvent(target, 3, null, null, null, null);
};

$._PeerConnection00EventsImpl$ = function(_ptr) {
  return new $._PeerConnection00EventsImpl(_ptr);
};

$.TouchHandler$ = function(touchable, element) {
  var t1 = new $.TouchHandler(touchable, null, 0, 0, $.ListImplementation_List(null), $.ListImplementation_List(null), null, false, false, false, null, null, null, null, null, null, null, null, null, null, null);
  t1.TouchHandler$2(touchable, element);
  return t1;
};

$.TouchHandler__removeFirstN = function(list, n) {
  return $.getRange(list, n, $.sub($.get$length(list), n));
};

$.TouchHandler__xor = function(a, b) {
  var t1 = a === true;
  if (t1 || b === true)
    t1 = !(t1 && b === true);
  else
    t1 = false;
  return t1;
};

$.TimeoutMomentum$ = function(_delegate, defaultDecelerationFactor) {
  var t1 = $.Queue_Queue();
  return new $.TimeoutMomentum($.SingleDimensionPhysics$(), $.SingleDimensionPhysics$(), null, t1, null, false, _delegate, null, null, null, null, null, defaultDecelerationFactor);
};

$._SpeechRecognitionEventsImpl$ = function(_ptr) {
  return new $._SpeechRecognitionEventsImpl(_ptr);
};

$.Coordinate$ = function(x, y) {
  return new $.Coordinate(x, y);
};

$.Coordinate$fromClient = function(input) {
  return new $.Coordinate(input.get$clientX(), input.get$clientY());
};

$.ScrollWatcher$ = function(scroller) {
  return new $.ScrollWatcher(scroller, $.ListImplementation_List(null), null);
};

$.Device_userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$.Device_isMobileSafari = function() {
  return $.CTC20.hasMatch$1($.Device_userAgent());
};

$.Device_isAndroid = function() {
  return $.contains$2($.Device_userAgent(), 'Android', 0);
};

$.Device_supportsTouch = function() {
  if ($.Device__supportsTouch == null)
    $.Device__supportsTouch = $.Device_isMobileSafari() === true || $.Device_isAndroid() === true;
  return $.Device__supportsTouch;
};

$.SimpleEventListenerList$ = function() {
  return new $.SimpleEventListenerList($.ListImplementation_List(null));
};

$.MockTouch$ = function(wrapped) {
  return new $.MockTouch(wrapped);
};

$.MockTouchEvent$ = function(wrapped, touches, targetTouches, changedTouches) {
  return new $.MockTouchEvent(wrapped, touches, targetTouches, changedTouches);
};

$._EventFactoryProvider_createEvent = function(type, canBubble, cancelable) {
  var e = $._document().$dom_createEvent$1('Event');
  e.$dom_initEvent$3(type, canBubble, cancelable);
  return e;
};

$._NotificationEventsImpl$ = function(_ptr) {
  return new $._NotificationEventsImpl(_ptr);
};

$._SharedWorkerContextEventsImpl$ = function(_ptr) {
  return new $._SharedWorkerContextEventsImpl(_ptr);
};

$.Strings_join = function(strings, separator) {
  return $.StringImplementation_join(strings, separator);
};

$.HashSetImplementation$ = function() {
  var t1 = new $.HashSetImplementation(null);
  t1.HashSetImplementation$0();
  return t1;
};

$.HashSetIterator$ = function(set_) {
  var t1 = new $.HashSetIterator(set_._backingMap._keys, -1);
  t1.HashSetIterator$1(set_);
  return t1;
};

$._AttributeClassSet$ = function(element) {
  return new $._AttributeClassSet(element);
};

$._FrozenCSSClassSet$ = function() {
  return new $._FrozenCSSClassSet(null);
};

$._ChildrenElementList$_wrap = function(element) {
  return new $._ChildrenElementList(element, element.get$$$dom_children());
};

$._FrozenElementList$_wrap = function(_nodeList) {
  return new $._FrozenElementList(_nodeList);
};

$.MutationObserver_MutationObserver = function(callback) {
  return $._MutationObserverFactoryProvider_createMutationObserver(callback);
};

$._FrozenElementListIterator$ = function(_list) {
  return new $._FrozenElementListIterator(_list, 0);
};

$._FilteredElementList$ = function(node) {
  return new $._FilteredElementList(node, node.get$nodes());
};

$._MessagePortEventsImpl$ = function(_ptr) {
  return new $._MessagePortEventsImpl(_ptr);
};

$.SingleDimensionPhysics$ = function() {
  return new $.SingleDimensionPhysics(1, null, null, 0, null, null);
};

$._Move$ = function(x, y, vx, vy, time) {
  return new $._Move(x, y, vx, vy, time);
};

$._MediaStreamTrackListEventsImpl$ = function(_ptr) {
  return new $._MediaStreamTrackListEventsImpl(_ptr);
};

$.Env_requestAnimationFrame = function(callback, element, minTime) {
  if ($.Env__animationScheduler == null)
    $.Env__animationScheduler = $.AnimationScheduler$();
  return $.Env__animationScheduler.requestAnimationFrame$3(callback, element, minTime);
};

$.Env_cancelRequestAnimationFrame = function(id) {
  $.window().clearTimeout$1(id);
  $.Env__animationScheduler.cancelRequestAnimationFrame$1(id);
};

$._MediaStreamTrackEventsImpl$ = function(_ptr) {
  return new $._MediaStreamTrackEventsImpl(_ptr);
};

$.AnimationScheduler$ = function() {
  var t1 = new $.AnimationScheduler($.ListImplementation_List(null), null, false, null, 0, true);
  t1.AnimationScheduler$0();
  return t1;
};

$.CallbackData$ = function(callback, minTime) {
  var t1 = new $.CallbackData(callback, minTime, null);
  t1.CallbackData$2(callback, minTime);
  return t1;
};

$._MediaStreamEventsImpl$ = function(_ptr) {
  return new $._MediaStreamEventsImpl(_ptr);
};

$._DateImpl$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  var t1 = new $._DateImpl(millisecondsSinceEpoch, isUtc);
  t1._DateImpl$fromMillisecondsSinceEpoch$2(millisecondsSinceEpoch, isUtc);
  return t1;
};

$._DateImpl$now = function() {
  var t1 = new $._DateImpl($.Primitives_dateNow(), false);
  t1._DateImpl$now$0();
  return t1;
};

$.ClickBuster__onTouchStart = function(e) {
  var coord = $.Coordinate$fromClient($.index(e.get$touches(), 0));
  $.add$1($.ClickBuster__coordinates, coord.x);
  $.add$1($.ClickBuster__coordinates, coord.y);
  $.window().setTimeout$2(new $.ClickBuster__onTouchStart_anon(coord), 2500);
  $.ClickBuster__toggleTapHighlights(true);
};

$.ClickBuster__hitTest = function(x, y, eventX, eventY) {
  return $.ltB($.abs($.sub(eventX, x)), 25) && $.ltB($.abs($.sub(eventY, y)), 25);
};

$.ClickBuster__removeCoordinate = function(x, y) {
  var entry = $.ClickBuster__coordinates.firstEntry$0();
  for (; !(entry == null);) {
    if ($.eqB(entry.get$element(), x) && $.eqB(entry.nextEntry$0().get$element(), y)) {
      entry.nextEntry$0().remove$0();
      entry.remove$0();
      return;
    } else
      var entry0 = entry.nextEntry$0().nextEntry$0();
    entry = entry0;
  }
};

$.ClickBuster__toggleTapHighlights = function(enable) {
  var t1 = $.document().get$body().get$style();
  t1.setProperty$3('-webkit-tap-highlight-color', enable ? '' : 'rgba(0,0,0,0)', '');
};

$.ClickBuster_preventGhostClick = function(x, y) {
  if ($.ClickBuster__coordinates == null) {
    $.document().get$on().get$click().add$2(new $.ClickBuster_preventGhostClick_anon(), true);
    $.document().get$on().get$focus().add$2(new $.ClickBuster_preventGhostClick_anon0(), true);
    var startFn = new $.ClickBuster_preventGhostClick_anon1();
    if ($.Device_supportsTouch() !== true)
      startFn = $.mouseToTouchCallback(startFn);
    var t1 = $.document();
    var t2 = $.Device_supportsTouch() === true;
    var t3 = $.document;
    $.EventUtil_observe(t1, t2 ? t3().get$on().get$touchStart() : t3().get$on().get$mouseDown(), startFn, true, true);
    $.ClickBuster__coordinates = $.DoubleLinkedQueue$();
  }
  $.ClickBuster__toggleTapHighlights(false);
  $.ClickBuster__lastPreventedTime = $.Date_Date$now().get$millisecondsSinceEpoch();
  var entry = $.ClickBuster__coordinates.firstEntry$0();
  for (; !(entry == null);) {
    if ($.ClickBuster__hitTest(entry.get$element(), entry.nextEntry$0().get$element(), x, y)) {
      entry.nextEntry$0().remove$0();
      entry.remove$0();
      return;
    } else
      var entry0 = entry.nextEntry$0().nextEntry$0();
    entry = entry0;
  }
};

$.ClickBuster__onClick = function(e) {
  if ($.gtB($.sub($.Date_Date$now().get$millisecondsSinceEpoch(), $.ClickBuster__lastPreventedTime), 2500))
    return;
  var coord = $.Coordinate$fromClient(e);
  var entry = $.ClickBuster__coordinates.firstEntry$0();
  for (; !(entry == null);) {
    if ($.ClickBuster__hitTest(entry.get$element(), entry.nextEntry$0().get$element(), coord.x, coord.y)) {
      entry.nextEntry$0().remove$0();
      entry.remove$0();
      return;
    } else
      var entry0 = entry.nextEntry$0().nextEntry$0();
    entry = entry0;
  }
  e.stopPropagation$0();
  e.preventDefault$0();
};

$.EventUtil_observe = function(element, listenerList, handler, capture, removeHandlerOnFocus) {
  listenerList.add$2(handler, capture);
  if (removeHandlerOnFocus === true) {
    $.add$1(element.get$on().get$focus(), new $.EventUtil_observe_anon(capture, handler, listenerList));
    $.add$1(element.get$on().get$blur(), new $.EventUtil_observe_anon0(capture, handler, listenerList));
  }
};

$._LocalWindowEventsImpl$ = function(_ptr) {
  return new $._LocalWindowEventsImpl(_ptr);
};

$.FxUtil_setTranslate = function(el, x, y, z) {
  var t1 = 'translate3d(' + $.S(x) + 'px,' + $.S(y) + 'px,' + $.S(z) + 'px)';
  el.get$style().set$transform(t1);
};

$.FxUtil_setLeftAndTop = function(el, x, y) {
  var style = el.get$style();
  style.set$left($.S(x) + 'px');
  style.set$top($.S(y) + 'px');
};

$.FxUtil_setWebkitTransform = function(el, x, y, originX, originY, rotation, scale, z) {
  var style = el.get$style();
  var transform = 'translate3d(' + $.S(x) + 'px,' + $.S(y) + 'px,' + $.S(z) + 'px)';
  if (!(rotation == null))
    transform += ' rotate(' + $.S(rotation) + 'deg)';
  style.set$transform(!(scale == null) ? $.concat(transform, ' scale(' + $.S(scale) + ')') : transform);
  if (!(originX == null) || !(originY == null))
    style.set$transformOrigin($.S(originX) + 'px ' + $.S(originY) + 'px');
};

$.Solver_solve = function(fn, targetY, startX, maxIterations) {
  if (typeof targetY !== 'number')
    return $.Solver_solve$bailout(1, fn, targetY, startX, maxIterations, 0);
  if (startX !== (startX | 0))
    return $.Solver_solve$bailout(1, fn, targetY, startX, maxIterations, 0);
  if (typeof maxIterations !== 'number')
    return $.Solver_solve$bailout(1, fn, targetY, startX, maxIterations, 0);
  var lastY = fn.call$1(0);
  if (typeof lastY !== 'number')
    return $.Solver_solve$bailout(2, fn, targetY, startX, maxIterations, lastY);
  for (var delta = startX, x = delta, deltaX = null, deltaY = null, minX = null, maxX = null, i = 0, lastX = 0; i < maxIterations; ++i) {
    var y = fn.call$1(x);
    if ($.eqB($.round(y), $.round(targetY)))
      return x;
    if ($.gtB(y, targetY))
      maxX = x;
    else
      minX = x;
    if (typeof y !== 'number')
      throw $.iae(y);
    var errorY = targetY - y;
    deltaX = $.sub(x, lastX);
    if (typeof lastY !== 'number')
      throw $.iae(lastY);
    deltaY = y - lastY;
    if (!(deltaY === 0)) {
      if (typeof deltaX !== 'number')
        throw $.iae(deltaX);
      delta = errorY * deltaX / deltaY;
    }
    var x0 = $.add(x, delta);
    if (!(minX == null))
      if (!(maxX == null))
        var t1 = $.gtB(x0, minX) || $.ltB(x0, maxX);
      else
        t1 = false;
    else
      t1 = false;
    if (t1)
      x0 = $.div($.add(minX, maxX), 2);
    lastX = x;
    x = x0;
    lastY = y;
  }
  $.window().get$console().warn$1('Could not find an exact solution. LastY=' + $.S(lastY) + ',\n        targetY=' + $.S(targetY) + ' lastX=' + $.S(lastX) + ' delta=' + $.S(delta) + '  deltaX=' + $.S(deltaX) + '\n        deltaY=' + $.S(deltaY));
  return x;
};

$.SliderMenu$ = function(_menuItems, onSelect) {
  return new $.SliderMenu(null, null, onSelect, _menuItems, null, null, null, $.HashMapImplementation$());
};

$.LoginState$ = function() {
  return new $.LoginState($.ObservableValue$(null, null), null);
};

$.ObservableValue$ = function(value, parent$) {
  return new $.ObservableValue(value, $.EventBatch_genUid(), parent$, $.ListImplementation_List(null));
};

$.LoginView$ = function(_udjApp, _state) {
  var t1 = $.HashMapImplementation$();
  t1 = new $.LoginView(_udjApp, _state, null, null, $.ListImplementation_List(null), null, null, null, 'login-box', false, false, false, false, null, null, null, t1);
  t1.LoginView$2(_udjApp, _state);
  return t1;
};

$.RequestHelper_encodeMap = function(data) {
  return $.Strings_join($.map(data.get$keys(), new $.RequestHelper_encodeMap_anon(data)), '&');
};

$.JSON_parse = function(json) {
  return $._JsonParser$(json).parseToplevel$0();
};

$.Session$ = function(ticket_hash, user_id, username) {
  return new $.Session(ticket_hash, user_id, username);
};

$._JsonParser$ = function(json) {
  var t1 = new $._JsonParser(json, $.get$length(json), 0);
  t1._JsonParser$1(json);
  return t1;
};

$._ListRange$ = function(source, offset, length$) {
  var t1 = length$ == null ? $.sub($.get$length(source), offset) : length$;
  t1 = new $._ListRange(source, offset, t1);
  t1._ListRange$3(source, offset, length$);
  return t1;
};

$._ListRangeIteratorImpl$ = function(_source, _offset, _end) {
  return new $._ListRangeIteratorImpl(_source, _offset, _end);
};

$._BodyElementEventsImpl$ = function(_ptr) {
  return new $._BodyElementEventsImpl(_ptr);
};

$._LocationWrapper$ = function(_ptr) {
  return new $._LocationWrapper(_ptr);
};

$._BatteryManagerEventsImpl$ = function(_ptr) {
  return new $._BatteryManagerEventsImpl(_ptr);
};

$._LocationCrossFrameImpl$ = function(_location) {
  return new $._LocationCrossFrameImpl(_location);
};

$._LocationCrossFrameImpl__createSafe = function(location$) {
  var t1 = $.window().get$location();
  if (location$ == null ? t1 == null : location$ === t1)
    return location$;
  else
    return $._LocationCrossFrameImpl$(location$);
};

$.ObservableList$ = function(parent$) {
  var t1 = $.EventBatch_genUid();
  var t2 = $.ListImplementation_List(null);
  return new $.ObservableList($.ListImplementation_List(null), t1, parent$, t2);
};

$._Sort_insertionSort_$bailout = function(state0, a, left, right, compare) {
  for (var i = left + 1; $.leB(i, right); ++i) {
    var el = $.index(a, i);
    var j = i;
    while (true) {
      if (!(j > left && $.gtB(compare.call$2($.index(a, j - 1), el), 0)))
        break;
      var j0 = j - 1;
      $.indexSet(a, j, $.index(a, j0));
      j = j0;
    }
    $.indexSet(a, j, el);
  }
};

$._Sort__dualPivotQuicksort$bailout = function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13) {
  switch (state0) {
    case 1:
      var a = env0;
      var left = env1;
      var right = env2;
      var compare = env3;
      break;
    case 2:
      a = env0;
      left = env1;
      less = env2;
      compare = env3;
      great = env4;
      right = env5;
      k = env6;
      index1 = env7;
      index5 = env8;
      el2 = env9;
      pivots_are_equal = env10;
      ak = env11;
      comp = env12;
      el4 = env13;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      var sixth = $.tdiv($.add($.sub(right, left), 1), 6);
      if (typeof sixth !== 'number')
        throw $.iae(sixth);
      var index1 = left + sixth;
      var index5 = $.sub(right, sixth);
      if (typeof right !== 'number')
        throw $.iae(right);
      var index3 = $.tdiv(left + right, 2);
      var index2 = index3 - sixth;
      var index4 = index3 + sixth;
      var el1 = $.index(a, index1);
      var el2 = $.index(a, index2);
      var el3 = $.index(a, index3);
      var el4 = $.index(a, index4);
      var el5 = $.index(a, index5);
      if ($.gtB(compare.call$2(el1, el2), 0)) {
        var t0 = el2;
        el2 = el1;
        el1 = t0;
      }
      if ($.gtB(compare.call$2(el4, el5), 0)) {
        t0 = el5;
        el5 = el4;
        el4 = t0;
      }
      if ($.gtB(compare.call$2(el1, el3), 0)) {
        t0 = el3;
        el3 = el1;
        el1 = t0;
      }
      if ($.gtB(compare.call$2(el2, el3), 0)) {
        t0 = el3;
        el3 = el2;
        el2 = t0;
      }
      if ($.gtB(compare.call$2(el1, el4), 0)) {
        t0 = el4;
        el4 = el1;
        el1 = t0;
      }
      if ($.gtB(compare.call$2(el3, el4), 0)) {
        t0 = el4;
        el4 = el3;
        el3 = t0;
      }
      if ($.gtB(compare.call$2(el2, el5), 0)) {
        t0 = el5;
        el5 = el2;
        el2 = t0;
      }
      if ($.gtB(compare.call$2(el2, el3), 0)) {
        t0 = el3;
        el3 = el2;
        el2 = t0;
      }
      if ($.gtB(compare.call$2(el4, el5), 0)) {
        t0 = el5;
        el5 = el4;
        el4 = t0;
      }
      $.indexSet(a, index1, el1);
      $.indexSet(a, index3, el3);
      $.indexSet(a, index5, el5);
      $.indexSet(a, index2, $.index(a, left));
      $.indexSet(a, index4, $.index(a, right));
      var less = left + 1;
      var great = right - 1;
      var pivots_are_equal = $.eqB(compare.call$2(el2, el4), 0);
    case 2:
      if (state0 === 2 || state0 === 0 && pivots_are_equal)
        switch (state0) {
          case 0:
            var k = less;
          case 2:
            L0:
              while (true)
                switch (state0) {
                  case 0:
                    if (!(k <= great))
                      break L0;
                  case 2:
                    c$0: {
                      switch (state0) {
                        case 0:
                          var ak = $.index(a, k);
                          var comp = compare.call$2(ak, el2);
                        case 2:
                          state0 = 0;
                          if ($.eqB(comp, 0))
                            break c$0;
                          if ($.ltB(comp, 0)) {
                            if (!(k === less)) {
                              $.indexSet(a, k, $.index(a, less));
                              $.indexSet(a, less, ak);
                            }
                            ++less;
                          } else
                            for (var less0 = less + 1; true;) {
                              comp = compare.call$2($.index(a, great), el2);
                              if ($.gtB(comp, 0)) {
                                --great;
                                continue;
                              } else if ($.ltB(comp, 0)) {
                                $.indexSet(a, k, $.index(a, less));
                                $.indexSet(a, less, $.index(a, great));
                                var great0 = great - 1;
                                $.indexSet(a, great, ak);
                                great = great0;
                                less = less0;
                                break;
                              } else {
                                $.indexSet(a, k, $.index(a, great));
                                great0 = great - 1;
                                $.indexSet(a, great, ak);
                                great = great0;
                                break;
                              }
                            }
                      }
                    }
                    ++k;
                }
        }
      else
        for (k = less; k <= great; ++k) {
          ak = $.index(a, k);
          if ($.ltB(compare.call$2(ak, el2), 0)) {
            if (!(k === less)) {
              $.indexSet(a, k, $.index(a, less));
              $.indexSet(a, less, ak);
            }
            ++less;
          } else if ($.gtB(compare.call$2(ak, el4), 0))
            for (less0 = less + 1; true;)
              if ($.gtB(compare.call$2($.index(a, great), el4), 0)) {
                --great;
                if (great < k)
                  break;
                continue;
              } else {
                if ($.ltB(compare.call$2($.index(a, great), el2), 0)) {
                  $.indexSet(a, k, $.index(a, less));
                  $.indexSet(a, less, $.index(a, great));
                  great0 = great - 1;
                  $.indexSet(a, great, ak);
                  great = great0;
                  less = less0;
                } else {
                  $.indexSet(a, k, $.index(a, great));
                  great0 = great - 1;
                  $.indexSet(a, great, ak);
                  great = great0;
                }
                break;
              }
        }
      var t1 = less - 1;
      $.indexSet(a, left, $.index(a, t1));
      $.indexSet(a, t1, el2);
      $.indexSet(a, right, $.index(a, great + 1));
      $.indexSet(a, great + 1, el4);
      $._Sort__doSort(a, left, less - 2, compare);
      $._Sort__doSort(a, great + 2, right, compare);
      if (pivots_are_equal)
        return;
      if (less < index1 && $.gtB(great, index5)) {
        for (; $.eqB(compare.call$2($.index(a, less), el2), 0);)
          ++less;
        for (; $.eqB(compare.call$2($.index(a, great), el4), 0);)
          --great;
        for (k = less; k <= great; ++k) {
          ak = $.index(a, k);
          if ($.eqB(compare.call$2(ak, el2), 0)) {
            if (!(k === less)) {
              $.indexSet(a, k, $.index(a, less));
              $.indexSet(a, less, ak);
            }
            ++less;
          } else if ($.eqB(compare.call$2(ak, el4), 0))
            for (less0 = less + 1; true;)
              if ($.eqB(compare.call$2($.index(a, great), el4), 0)) {
                --great;
                if (great < k)
                  break;
                continue;
              } else {
                if ($.ltB(compare.call$2($.index(a, great), el2), 0)) {
                  $.indexSet(a, k, $.index(a, less));
                  $.indexSet(a, less, $.index(a, great));
                  great0 = great - 1;
                  $.indexSet(a, great, ak);
                  great = great0;
                  less = less0;
                } else {
                  $.indexSet(a, k, $.index(a, great));
                  great0 = great - 1;
                  $.indexSet(a, great, ak);
                  great = great0;
                }
                break;
              }
        }
        $._Sort__doSort(a, less, great, compare);
      } else
        $._Sort__doSort(a, less, great, compare);
  }
};

$.Futures_wait$bailout = function(state0, futures, t1) {
  if ($.get$isEmpty(futures) === true)
    return $.Future_Future$immediate($.CTC0);
  var completer = $.Completer_Completer();
  var result = completer.get$future();
  t1.remaining_1 = $.get$length(futures);
  var values = $.ListImplementation_List($.get$length(futures));
  for (var i = 0; $.ltB(i, $.get$length(futures)); ++i) {
    var future = $.index(futures, i);
    future.then$1(new $.Futures_wait_anon(i, t1, completer, values, result));
    future.handleException$1(new $.Futures_wait_anon0(result, completer, future));
  }
  return result;
};

$._addToEncoding$bailout = function(state0, offset, bytes, value, buffer) {
  for (var t1 = buffer.length; bytes > 0;) {
    var t2 = offset + bytes;
    var t3 = $.and(value, 63);
    if (typeof t3 !== 'number')
      throw $.iae(t3);
    t3 = (128 | t3) >>> 0;
    if (t2 < 0 || t2 >= t1)
      throw $.ioore(t2);
    buffer[t2] = t3;
    value = $.shr(value, 6);
    --bytes;
  }
  return value;
};

$._uriEncode$bailout = function(state0, canonical, text) {
  var byteToHex = new $._uriEncode_anon('0123456789ABCDEF');
  var result = $.StringBuffer_StringBuffer('');
  for (var i = 0; $.ltB(i, $.get$length(text)); ++i)
    if ($.geB($.indexOf$1(canonical, $.index(text, i)), 0))
      $.add$1(result, $.index(text, i));
    else {
      var ch = $.charCodeAt(text, i);
      if ($.geB(ch, 55296) && $.ltB(ch, 56320)) {
        ++i;
        var nextCh = $.eqB($.get$length(text), i) ? 0 : $.charCodeAt(text, i);
        if ($.geB(nextCh, 56320) && $.ltB(nextCh, 57344)) {
          var t1 = $.shl($.sub(ch, 55296), 10);
          if (typeof t1 !== 'number')
            throw $.iae(t1);
          t1 = 65536 + t1;
          var t2 = $.sub(nextCh, 56320);
          if (typeof t2 !== 'number')
            throw $.iae(t2);
          var ch0 = t1 + t2;
        } else
          throw $.$$throw($.ArgumentError$('Malformed URI'));
        ch = ch0;
      }
      for (t1 = $.iterator($.codepointsToUtf8([ch], 0, null)); t1.get$hasNext() === true;)
        $.add$1(result, byteToHex.call$1(t1.next$0()));
    }
  return $.toString(result);
};

$._Lists_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  if ($.geB(startIndex, $.get$length(a)))
    return -1;
  if ($.ltB(startIndex, 0))
    startIndex = 0;
  for (var i = startIndex; $.ltB(i, endIndex); i = $.add(i, 1))
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$._Lists_getRange$bailout = function(state0, a, start, length$, accumulator) {
  if ($.ltB(length$, 0))
    throw $.$$throw($.ArgumentError$('length'));
  if ($.ltB(start, 0))
    throw $.$$throw($.IndexOutOfRangeException$(start));
  var end = $.add(start, length$);
  if ($.gtB(end, $.get$length(a)))
    throw $.$$throw($.IndexOutOfRangeException$(end));
  for (var i = start; $.ltB(i, end); i = $.add(i, 1))
    accumulator.push($.index(a, i));
  return accumulator;
};

$.StringImplementation__toJsStringArray$bailout = function(state0, strings) {
  $.checkNull(strings);
  var length$ = $.get$length(strings);
  if ($.isJsArray(strings)) {
    for (var i = 0; $.ltB(i, length$); ++i) {
      var string = $.index(strings, i);
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    var array = strings;
  } else {
    array = $.ListImplementation_List(length$);
    for (i = 0; $.ltB(i, length$); ++i) {
      string = $.index(strings, i);
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      if (i >= array.length)
        throw $.ioore(i);
      array[i] = string;
    }
  }
  return array;
};

$.Arrays_copy$bailout = function(state0, src, srcStart, dst, dstStart, count) {
  if (srcStart < dstStart)
    for (var i = srcStart + count - 1, j = dstStart + count - 1; i >= srcStart; --i, --j)
      $.indexSet(dst, j, $.index(src, i));
  else
    for (var t1 = srcStart + count, j = dstStart, i = srcStart; i < t1; ++i, ++j)
      $.indexSet(dst, j, $.index(src, i));
};

$.Arrays_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  if ($.geB(startIndex, $.get$length(a)))
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (var i = startIndex; i < endIndex; ++i)
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$.Solver_solve$bailout = function(state0, env0, env1, env2, env3, env4) {
  switch (state0) {
    case 1:
      var fn = env0;
      var targetY = env1;
      var startX = env2;
      var maxIterations = env3;
      break;
    case 2:
      fn = env0;
      targetY = env1;
      startX = env2;
      maxIterations = env3;
      lastY = env4;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      var lastY = fn.call$1(0);
    case 2:
      state0 = 0;
      for (var delta = startX, x = delta, deltaX = null, deltaY = null, minX = null, maxX = null, i = 0, lastX = 0; $.ltB(i, maxIterations); ++i) {
        var y = fn.call$1(x);
        if ($.eqB($.round(y), $.round(targetY)))
          return x;
        if ($.gtB(y, targetY))
          maxX = x;
        else
          minX = x;
        var errorY = $.sub(targetY, y);
        deltaX = $.sub(x, lastX);
        deltaY = $.sub(y, lastY);
        if (!$.eqB(deltaY, 0))
          delta = $.div($.mul(errorY, deltaX), deltaY);
        var x0 = $.add(x, delta);
        if (!(minX == null))
          if (!(maxX == null))
            var t1 = $.gtB(x0, minX) || $.ltB(x0, maxX);
          else
            t1 = false;
        else
          t1 = false;
        if (t1)
          x0 = $.div($.add(minX, maxX), 2);
        lastX = x;
        x = x0;
        lastY = y;
      }
      $.window().get$console().warn$1('Could not find an exact solution. LastY=' + $.S(lastY) + ',\n        targetY=' + $.S(targetY) + ' lastX=' + $.S(lastX) + ' delta=' + $.S(delta) + '  deltaX=' + $.S(deltaX) + '\n        deltaY=' + $.S(deltaY));
      return x;
  }
};

$.contains$1$bailout = function(state0, receiver, other) {
  if (typeof receiver === 'string')
    return $.contains$2(receiver, other, 0);
  else if ($.isJsArray(receiver)) {
    for (var i = 0; $.ltB(i, $.get$length(receiver)); ++i)
      if ($.eqB(other, $.index(receiver, i)))
        return true;
    return false;
  }
  return receiver.contains$1(other);
};

$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.Comparable_compare.call$2 = $.Comparable_compare;
$.Comparable_compare.$name = "Comparable_compare";
$._timerFactory.call$3 = $._timerFactory;
$._timerFactory.$name = "_timerFactory";
$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
$._completeMeasurementFutures.call$0 = $._completeMeasurementFutures;
$._completeMeasurementFutures.$name = "_completeMeasurementFutures";
$.toStringWrapper.call$0 = $.toStringWrapper;
$.toStringWrapper.$name = "toStringWrapper";
Isolate.$finishClasses($$);
$$ = {};
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CTC0 = Isolate.makeConstantList([]);
$.CTC33 = Isolate.makeConstantList(['childList', 'attributes', 'characterData', 'subtree', 'attributeOldValue', 'characterDataOldValue']);
$.CTC16 = new Isolate.$isolateProperties.ConstantMap(6, {'childList': true, 'attributes': true, 'characterData': true, 'subtree': true, 'attributeOldValue': true, 'characterDataOldValue': true}, Isolate.$isolateProperties.CTC33);
$.CTC11 = new Isolate.$isolateProperties.JSSyntaxRegExp('[-[\\]{}()*+?.,\\\\^$|#\\s]', false, false);
$.CTC6 = new Isolate.$isolateProperties.NotImplementedException('structured clone of ArrayBuffer');
$.CTC9 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CTC19 = new Isolate.$isolateProperties.ConstantMap(0, {}, Isolate.$isolateProperties.CTC0);
$.CTC26 = new Isolate.$isolateProperties.ContentSizeMode('min');
$.CTC32 = new Isolate.$isolateProperties.Object();
$.CTC7 = new Isolate.$isolateProperties.NotImplementedException('structured clone of ArrayBufferView');
$.CTC20 = new Isolate.$isolateProperties.JSSyntaxRegExp('iPhone|iPod|iPad', false, false);
$.CTC4 = new Isolate.$isolateProperties.NotImplementedException('structured clone of Blob');
$.CTC34 = Isolate.makeConstantList(['body', 'head', 'caption', 'td', 'colgroup', 'col', 'tr', 'tbody', 'tfoot', 'thead', 'track']);
$.CTC35 = new Isolate.$isolateProperties._SimpleClientRect(0, 0, 0, 0);
$.CTC18 = new Isolate.$isolateProperties.EmptyElementRect(Isolate.$isolateProperties.CTC35, Isolate.$isolateProperties.CTC35, Isolate.$isolateProperties.CTC35, Isolate.$isolateProperties.CTC35, Isolate.$isolateProperties.CTC0);
$.CTC14 = new Isolate.$isolateProperties.NotImplementedException('IDBKey containing Date');
$.CTC13 = new Isolate.$isolateProperties.ConstantMap(11, {'body': 'html', 'head': 'html', 'caption': 'table', 'td': 'tr', 'colgroup': 'table', 'col': 'colgroup', 'tr': 'tbody', 'tbody': 'table', 'tfoot': 'table', 'thead': 'table', 'track': 'audio'}, Isolate.$isolateProperties.CTC34);
$.CTC1 = new Isolate.$isolateProperties.NotImplementedException('structured clone of Date');
$.CTC10 = new Isolate.$isolateProperties.JSSyntaxRegExp('^#[_a-zA-Z]\\w*$', false, false);
$.CTC22 = new Isolate.$isolateProperties.MinContentSizing();
$.CTC23 = new Isolate.$isolateProperties.MaxContentSizing();
$.CTC21 = new Isolate.$isolateProperties.TrackSizing(Isolate.$isolateProperties.CTC22, Isolate.$isolateProperties.CTC23);
$.CTC12 = new Isolate.$isolateProperties.JSSyntaxRegExp('<(\\w+)', false, false);
$.CTC24 = new Isolate.$isolateProperties.Dimension('width');
$.CTC25 = new Isolate.$isolateProperties.Dimension('height');
$.CTC27 = new Isolate.$isolateProperties._UsedBreadthAccumulator();
$.CTC29 = new Isolate.$isolateProperties._MaxBreadthAccumulator();
$.CTC2 = new Isolate.$isolateProperties.NotImplementedException('structured clone of RegExp');
$.CTC31 = new Isolate.$isolateProperties.JSSyntaxRegExp('^[*a-zA-Z0-9]+$', false, false);
$.CTC17 = new Isolate.$isolateProperties._ExceptionImplementation('Incorrect number or type of arguments');
$.CTC15 = new Isolate.$isolateProperties.NotImplementedException(null);
$.CTC = new Isolate.$isolateProperties.NullPointerException(null, Isolate.$isolateProperties.CTC0);
$.CTC8 = new Isolate.$isolateProperties.NotImplementedException('structured clone of other type');
$.CTC3 = new Isolate.$isolateProperties.NotImplementedException('structured clone of File');
$.CTC5 = new Isolate.$isolateProperties.NotImplementedException('structured clone of ImageData');
$.CTC30 = new Isolate.$isolateProperties.JSSyntaxRegExp('^\\[name=["\'][^\'"]+[\'"]\\]$', false, false);
$.CTC28 = new Isolate.$isolateProperties.ContentSizeMode('max');
$._getTypeNameOf = null;
$._cachedBrowserPrefix = null;
$.EventBatch_current = null;
$.EventBatch_nextUid = null;
$.Primitives_hashCodeSeed = 0;
$.Primitives_DOLLAR_CHAR_VALUE = 36;
$._TimerFactory__factory = null;
$._pendingRequests = null;
$._pendingMeasurementFrameCallbacks = null;
$._measurementScheduler = null;
$.UNICODE_VALID_RANGE_MAX = 1114111;
$._UTF8_ONE_BYTE_MAX = 127;
$._UTF8_TWO_BYTE_MAX = 2047;
$._UTF8_THREE_BYTE_MAX = 65535;
$._UTF8_LO_SIX_BIT_MASK = 63;
$._UTF8_FIRST_BYTE_OF_TWO_BASE = 192;
$._UTF8_FIRST_BYTE_OF_THREE_BASE = 224;
$._UTF8_FIRST_BYTE_OF_FOUR_BASE = 240;
$._UTF8_FIRST_BYTE_OF_TWO_MASK = 31;
$._UTF8_FIRST_BYTE_OF_THREE_MASK = 15;
$._UTF8_FIRST_BYTE_OF_FOUR_MASK = 7;
$._UTF8_SUBSEQUENT_BYTE_BASE = 128;
$._ReceivePortImpl__nextFreeId = 1;
$.HashMapImplementation__DELETED_KEY = Isolate.$isolateProperties.CTC9;
$.HashMapImplementation__INITIAL_CAPACITY = 8;
$.Scroller_FAST_SNAP_DECELERATION_FACTOR = 0.84;
$.Scroller_PAGE_KEY_SCROLL_FRACTION = 0.85;
$.Scroller__dragInProgress = false;
$.Scrollbar__MIN_SIZE = 30;
$.Scrollbar__MIN_COMPRESSED_SIZE = 8;
$.Scrollbar__PADDING_LENGTH = 10;
$.Scrollbar__DISPLAY_TIME = 300;
$.Scrollbar_DRAG_CLASS_NAME = 'drag';
$.Dimension_WIDTH = Isolate.$isolateProperties.CTC24;
$.Dimension_HEIGHT = Isolate.$isolateProperties.CTC25;
$.ContentSizeMode_MIN = Isolate.$isolateProperties.CTC26;
$.ContentSizeMode_MAX = Isolate.$isolateProperties.CTC28;
$._Sort__INSERTION_SORT_THRESHOLD = 32;
$._Parser_A_BIG = 65;
$._Parser_Z_BIG = 90;
$._Parser_A_SMALL = 97;
$._Parser_Z_SMALL = 122;
$._Parser_TAB = 9;
$._Parser_NEW_LINE = 10;
$._Parser_LINE_FEED = 13;
$._Parser_SPACE = 32;
$._Parser_ZERO = 48;
$._Parser_NINE = 57;
$._Parser_DOT = 46;
$._Parser_R_PAREN = 41;
$.ChangeEvent_UPDATE = 0;
$.ChangeEvent_INSERT = 1;
$.ChangeEvent_REMOVE = 2;
$.ChangeEvent_GLOBAL = 3;
$.TouchHandler__MIN_TRACKING_FOR_DRAG = 2;
$.TouchHandler__MAX_TRACKING_TIME = 250;
$.TouchHandler__MAX_TRACKING_TOUCHES = 5;
$.TouchHandler__MAXIMUM_VELOCITY = 5;
$.TouchHandler__VELOCITY_FOR_INCORRECT_EVENTS = 1;
$.Device__MOBILE_SAFARI_REGEX = Isolate.$isolateProperties.CTC20;
$.Device__supportsTouch = null;
$.ScrollerEventType_SCROLLER_START = 'scroller:scroll_start';
$.ScrollerEventType_SCROLLER_END = 'scroller:scroll_end';
$.ScrollerEventType_DRAG_END = 'scroller:drag_end';
$.ScrollerEventType_CONTENT_MOVED = 'scroller:content_moved';
$.ScrollerEventType_DECEL_START = 'scroller:decel_start';
$.ScrollerScrollTechnique_TRANSFORM_3D = 1;
$.ScrollerScrollTechnique_RELATIVE_POSITIONING = 2;
$.SingleDimensionPhysics__FRAMES_PER_SECOND = 60;
$.SingleDimensionPhysics__PRE_BOUNCE_COEFFICIENT = 0.11666666666666667;
$.SingleDimensionPhysics__POST_BOUNCE_COEFFICIENT = 0.11666666666666667;
$.SingleDimensionPhysics__MS_PER_FRAME = 16.666666666666668;
$.SingleDimensionPhysics__DECELERATION_FACTOR = 0.97;
$.SingleDimensionPhysics__MAX_VELOCITY_STATIC_FRICTION = 1.3333333333333335;
$.SingleDimensionPhysics__DECELERATION_FACTOR_STATIC_FRICTION = 0.92;
$.SingleDimensionPhysics__MIN_VELOCITY = 4.166666666666667;
$.SingleDimensionPhysics__MIN_STEP_VELOCITY = 0.16666666666666669;
$.SingleDimensionPhysics__INITIAL_VELOCITY_BOOST_FACTOR = 1.25;
$.SingleDimensionPhysics__VELOCITY_GUESS = 20;
$.Env__animationScheduler = null;
$.AnimationScheduler_FRAMES_PER_SECOND = 60;
$.AnimationScheduler_MS_PER_FRAME = 16;
$.AnimationScheduler_USE_INTERVALS = false;
$.CallbackData__nextId = null;
$._DateImpl__MAX_MILLISECONDS_SINCE_EPOCH = 8640000000000000;
$.ClickBuster__TIME_THRESHOLD = 2500;
$.ClickBuster__DISTANCE_THRESHOLD = 25;
$.ClickBuster__coordinates = null;
$.ClickBuster__lastPreventedTime = null;
$.FxUtil_TRANSLATE_3D = 'translate3d';
$.FxUtil_ROTATE = 'rotate';
$.FxUtil_SCALE = 'scale';
$.BouncingState_NOT_BOUNCING = 0;
$.BouncingState_BOUNCING_AWAY = 1;
$.BouncingState_BOUNCING_BACK = 2;
$.SliderMenu_TRIANGLE_WIDTH = 24;
$.Constants_API_URL = 'https://www.udjplayer.com/udj/0_6';
$._JsonParser_BACKSPACE = 8;
$._JsonParser_TAB = 9;
$._JsonParser_NEW_LINE = 10;
$._JsonParser_FORM_FEED = 12;
$._JsonParser_CARRIAGE_RETURN = 13;
$._JsonParser_SPACE = 32;
$._JsonParser_PLUS = 43;
$._JsonParser_COMMA = 44;
$._JsonParser_DOT = 46;
$._JsonParser_QUOTE = 34;
$._JsonParser_SLASH = 47;
$._JsonParser_CHAR_0 = 48;
$._JsonParser_CHAR_1 = 49;
$._JsonParser_MINUS = 45;
$._JsonParser_CHAR_2 = 50;
$._JsonParser_CHAR_3 = 51;
$._JsonParser_CHAR_4 = 52;
$._JsonParser_CHAR_5 = 53;
$._JsonParser_CHAR_6 = 54;
$.DOMApplicationCache_UPDATEREADY = 4;
$._JsonParser_CHAR_7 = 55;
$._JsonParser_CHAR_8 = 56;
$._JsonParser_CHAR_9 = 57;
$._JsonParser_COLON = 58;
$._JsonParser_CHAR_CAPITAL_E = 69;
$._JsonParser_LBRACKET = 91;
$._JsonParser_BACKSLASH = 92;
$._JsonParser_RBRACKET = 93;
$._JsonParser_CHAR_B = 98;
$._JsonParser_CHAR_E = 101;
$._JsonParser_CHAR_F = 102;
$._JsonParser_CHAR_N = 110;
$._JsonParser_CHAR_R = 114;
$._JsonParser_CHAR_T = 116;
$._JsonParser_CHAR_U = 117;
$._JsonParser_LBRACE = 123;
$._JsonParser_RBRACE = 125;
$._JsonParser_STRING_LITERAL = 34;
$._JsonParser_NUMBER_LITERAL = 45;
$._JsonParser_NULL_LITERAL = 110;
$._JsonParser_FALSE_LITERAL = 102;
$._JsonParser_TRUE_LITERAL = 116;
$._JsonParser_WHITESPACE = 32;
$._JsonParser_LAST_ASCII = 125;
$._JsonParser_NULL_STRING = 'null';
$._JsonParser_TRUE_STRING = 'true';
$._JsonParser_FALSE_STRING = 'false';
$._JsonParser_tokens = null;
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, desc) {
  var fields = desc[''] || [];
  var generateGetterSetter =   function(field, prototype) {
    var len = field.length;
    var lastChar = field[len - 1];
    var needsGetter = lastChar == '?' || lastChar == '=';
    var needsSetter = lastChar == '!' || lastChar == '=';
    if (needsGetter || needsSetter) field = field.substring(0, len - 1);
    if (needsGetter) {
      var getterString = "return this." + field + ";";
        prototype["get$" + field] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + field] = new Function("v", setterString);
    }
    return field;
  };
  for (var i = 0; i < fields.length; i++) {
    generateGetterSetter(fields[i], desc);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var method in desc) {
    if (method !== '') {
      if (hasOwnProperty.call(desc, method)) {
        $.dynamicFunction(method)[cls] = desc[method];
      }
    }
  }
};

(function(table) {
  for (var key in table) {
    $.defineProperty(Object.prototype, key, table[key]);
  }
})({
 is$JavaScriptIndexingBehavior: function() { return false; },
 is$ArrayBufferView: function() { return false; },
 is$_FileListImpl: function() { return false; },
 is$ArrayBuffer: function() { return false; },
 is$_ImageDataImpl: function() { return false; },
 is$_ArrayBufferViewImpl: function() { return false; },
 is$_FileImpl: function() { return false; },
 is$Blob: function() { return false; },
 is$File: function() { return false; },
 toString$0: function() { return $.toStringForNativeObject(this); },
 is$BodyElement: function() { return false; },
 is$_BlobImpl: function() { return false; },
 is$DivElement: function() { return false; },
 is$Collection: function() { return false; },
 is$List: function() { return false; },
 is$_ArrayBufferImpl: function() { return false; },
 is$Map: function() { return false; },
 is$Location: function() { return false; },
 is$ImageData: function() { return false; },
 get$hashCode: function() { return $.hashCodeForNativeObject(this); },
 is$Element: function() { return false; }
});

$.$defineNativeClass('HTMLElement', {"": []
});

$.$defineNativeClass('AbstractWorker', {"": [],
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $._AbstractWorkerEventsImpl$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLAnchorElement', {"": ["name?", "target?", "type?"],
 toString$0: function() {
  return this.toString();
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('WebKitAnimationEvent', {"": []
});

$.$defineNativeClass('WebKitAnimation', {"": ["name?"]
});

$.$defineNativeClass('HTMLAppletElement', {"": ["height=", "name?", "width="],
 align$2: function(arg0, arg1) { return this.align.call$2(arg0, arg1); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLAreaElement', {"": ["target?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ArrayBuffer', {"": [],
 is$_ArrayBufferImpl: function() { return true; },
 is$ArrayBuffer: function() { return true; }
});

$.$defineNativeClass('ArrayBufferView', {"": [],
 is$_ArrayBufferViewImpl: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Attr', {"": ["name?", "value="]
});

$.$defineNativeClass('AudioBuffer', {"": ["length?"]
});

$.$defineNativeClass('AudioBufferSourceNode', {"": [],
 start$3: function(when, grainOffset, grainDuration) {
  var t1 = $ === grainOffset;
  if (t1)
    grainOffset = null;
  t1 = !t1;
  var t2 = $ === grainDuration;
  if (t2)
    grainDuration = null;
  t2 = !t2;
  if (!!this.start)
    if (t2)
      this.start(when, grainOffset, grainDuration);
    else if (t1)
      this.start(when, grainOffset);
    else
      this.start(when);
  else if (t2)
    this.noteOn(when, grainOffset, grainDuration);
  else if (t1)
    this.noteOn(when, grainOffset);
  else
    this.noteOn(when);
},
 get$start: function() { return new $.BoundClosure(this, 'start$3'); }
});

$.$defineNativeClass('AudioChannelMerger', {"": []
});

$.$defineNativeClass('AudioChannelSplitter', {"": []
});

$.$defineNativeClass('AudioContext', {"": ["destination?"],
 get$on: function() {
  return $._AudioContextEventsImpl$(this);
}
});

$.$defineNativeClass('AudioDestinationNode', {"": []
});

$.$defineNativeClass('HTMLAudioElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('AudioGain', {"": []
});

$.$defineNativeClass('AudioGainNode', {"": []
});

$.$defineNativeClass('AudioListener', {"": []
});

$.$defineNativeClass('AudioNode', {"": []
});

$.$defineNativeClass('AudioPannerNode', {"": []
});

$.$defineNativeClass('AudioParam', {"": ["name?", "value="]
});

$.$defineNativeClass('AudioProcessingEvent', {"": []
});

$.$defineNativeClass('AudioSourceNode', {"": []
});

$.$defineNativeClass('HTMLBRElement', {"": [],
 clear$0: function() { return this.clear.call$0(); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('BarInfo', {"": []
});

$.$defineNativeClass('HTMLBaseElement', {"": ["target?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLBaseFontElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('BatteryManager', {"": [],
 get$on: function() {
  return $._BatteryManagerEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('BeforeLoadEvent', {"": []
});

$.$defineNativeClass('BiquadFilterNode', {"": ["type?"]
});

$.$defineNativeClass('Blob', {"": ["type?"],
 is$_BlobImpl: function() { return true; },
 is$Blob: function() { return true; }
});

$.$defineNativeClass('HTMLBodyElement', {"": [],
 get$on: function() {
  return $._BodyElementEventsImpl$(this);
},
 is$BodyElement: function() { return true; },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLButtonElement', {"": ["name?", "type?", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('CDATASection', {"": []
});

$.$defineNativeClass('CSSCharsetRule', {"": []
});

$.$defineNativeClass('CSSFontFaceRule', {"": ["style?"]
});

$.$defineNativeClass('CSSImportRule', {"": []
});

$.$defineNativeClass('WebKitCSSKeyframeRule', {"": ["style?"]
});

$.$defineNativeClass('WebKitCSSKeyframesRule', {"": ["name?"]
});

$.$defineNativeClass('WebKitCSSMatrix', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('CSSMediaRule', {"": []
});

$.$defineNativeClass('CSSPageRule', {"": ["style?"]
});

$.$defineNativeClass('CSSPrimitiveValue', {"": []
});

$.$defineNativeClass('CSSRule', {"": ["type?"]
});

$.$defineNativeClass('CSSRuleList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('CSSStyleDeclaration', {"": ["length?"],
 _getPropertyValue$1: function(propertyName) {
  return this.getPropertyValue(propertyName);
},
 removeProperty$1: function(propertyName) {
  return this.removeProperty(propertyName);
},
 getPropertyValue$1: function(propertyName) {
  var propValue = this._getPropertyValue$1(propertyName);
  return !(propValue == null) ? propValue : '';
},
 setProperty$3: function(propertyName, value, priority) {
  this.setProperty(propertyName, value, priority);
  if (!!this.setAttribute)
    this.setAttribute(propertyName, value);
},
 get$borderBottomWidth: function() {
  return this.getPropertyValue$1('border-bottom-width');
},
 get$borderLeftWidth: function() {
  return this.getPropertyValue$1('border-left-width');
},
 get$borderRightWidth: function() {
  return this.getPropertyValue$1('border-right-width');
},
 get$borderTopWidth: function() {
  return this.getPropertyValue$1('border-top-width');
},
 get$clear: function() {
  return this.getPropertyValue$1('clear');
},
 clear$0: function() { return this.get$clear().call$0(); },
 get$columnSpan: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + 'column-span');
},
 get$columns: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + 'columns');
},
 get$display: function() {
  return this.getPropertyValue$1('display');
},
 set$display: function(value) {
  this.setProperty$3('display', value, '');
},
 get$filter: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + 'filter');
},
 filter$1: function(arg0) { return this.get$filter().call$1(arg0); },
 get$height: function() {
  return this.getPropertyValue$1('height');
},
 set$height: function(value) {
  this.setProperty$3('height', value, '');
},
 get$left: function() {
  return this.getPropertyValue$1('left');
},
 set$left: function(value) {
  this.setProperty$3('left', value, '');
},
 get$maxHeight: function() {
  return this.getPropertyValue$1('max-height');
},
 get$maxWidth: function() {
  return this.getPropertyValue$1('max-width');
},
 get$minHeight: function() {
  return this.getPropertyValue$1('min-height');
},
 get$minWidth: function() {
  return this.getPropertyValue$1('min-width');
},
 set$opacity: function(value) {
  this.setProperty$3('opacity', value, '');
},
 set$position: function(value) {
  this.setProperty$3('position', value, '');
},
 get$resize: function() {
  return this.getPropertyValue$1('resize');
},
 get$top: function() {
  return this.getPropertyValue$1('top');
},
 set$top: function(value) {
  this.setProperty$3('top', value, '');
},
 set$transform: function(value) {
  this.setProperty$3($.S($._browserPrefix()) + 'transform', value, '');
},
 set$transformOrigin: function(value) {
  this.setProperty$3($.S($._browserPrefix()) + 'transform-origin', value, '');
},
 set$transitionDuration: function(value) {
  this.setProperty$3($.S($._browserPrefix()) + 'transition-duration', value, '');
},
 get$width: function() {
  return this.getPropertyValue$1('width');
},
 set$width: function(value) {
  this.setProperty$3('width', value, '');
},
 set$zIndex: function(value) {
  this.setProperty$3('z-index', value, '');
}
});

$.$defineNativeClass('CSSStyleRule', {"": ["style?"]
});

$.$defineNativeClass('CSSStyleSheet', {"": []
});

$.$defineNativeClass('WebKitCSSTransformValue', {"": [],
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('CSSUnknownRule', {"": []
});

$.$defineNativeClass('CSSValue', {"": []
});

$.$defineNativeClass('CSSValueList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLCanvasElement', {"": ["height=", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('CanvasGradient', {"": []
});

$.$defineNativeClass('CanvasPattern', {"": []
});

$.$defineNativeClass('CanvasRenderingContext2D', {"": [],
 rect$4: function(x, y, width, height) {
  return this.rect(x,y,width,height);
},
 get$rect: function() { return new $.BoundClosure0(this, 'rect$4'); }
});

$.$defineNativeClass('CanvasRenderingContext', {"": []
});

$.$defineNativeClass('CharacterData', {"": ["length?"],
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('ClientRect', {"": ["height?", "left?", "top?", "width?"]
});

$.$defineNativeClass('ClientRectList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('Clipboard', {"": []
});

$.$defineNativeClass('CloseEvent', {"": []
});

$.$defineNativeClass('Comment', {"": []
});

$.$defineNativeClass('CompositionEvent', {"": []
});

_ConsoleImpl = (typeof console == 'undefined' ? {} : console);
_ConsoleImpl.group$1 = function(arg) {
  return this.group(arg);
};
_ConsoleImpl.time$1 = function(title) {
  return this.time(title);
};
_ConsoleImpl.get$time = function() { return new $.BoundClosure1(this, 'time$1'); };
_ConsoleImpl.timeStamp$1 = function(arg) {
  return this.timeStamp(arg);
};
_ConsoleImpl.get$timeStamp = function() { return new $.BoundClosure1(this, 'timeStamp$1'); };
_ConsoleImpl.warn$1 = function(arg) {
  return this.warn(arg);
};
$.$defineNativeClass('HTMLContentElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ConvolverNode', {"": []
});

$.$defineNativeClass('Coordinates', {"": []
});

$.$defineNativeClass('Counter', {"": []
});

$.$defineNativeClass('Crypto', {"": []
});

$.$defineNativeClass('CustomEvent', {"": []
});

$.$defineNativeClass('HTMLDListElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('DOMApplicationCache', {"": ["status?"],
 get$on: function() {
  return $._DOMApplicationCacheEventsImpl$(this);
},
 abort$0: function() {
  return this.abort();
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 swapCache$0: function() {
  return this.swapCache();
}
});

$.$defineNativeClass('DOMError', {"": ["name?"]
});

$.$defineNativeClass('DOMException', {"": ["message?", "name?"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('DOMFileSystem', {"": ["name?"]
});

$.$defineNativeClass('DOMFileSystemSync', {"": ["name?"]
});

$.$defineNativeClass('DOMImplementation', {"": []
});

$.$defineNativeClass('MimeTypeArray', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('MimeType', {"": ["type?"]
});

$.$defineNativeClass('DOMParser', {"": []
});

$.$defineNativeClass('PluginArray', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('Plugin', {"": ["length?", "name?"]
});

$.$defineNativeClass('Selection', {"": ["type?"],
 setPosition$2: function(node, offset) {
  return this.setPosition(node,offset);
},
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('DOMSettableTokenList', {"": ["value="]
});

$.$defineNativeClass('DOMStringList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 contains$1: function(string) {
  return this.contains(string);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('DOMTokenList', {"": ["length?"],
 contains$1: function(token) {
  return this.contains(token);
},
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('URL', {"": []
});

$.$defineNativeClass('HTMLDataListElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('DataTransferItem', {"": ["type?"]
});

$.$defineNativeClass('DataTransferItemList', {"": ["length?"],
 add$2: function(data_OR_file, type) {
  return this.add(data_OR_file,type);
},
 add$1: function(data_OR_file) {
  return this.add(data_OR_file);
},
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('DataView', {"": [],
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Database', {"": []
});

$.$defineNativeClass('DatabaseSync', {"": []
});

$.$defineNativeClass('DedicatedWorkerContext', {"": [],
 get$on: function() {
  return $._DedicatedWorkerContextEventsImpl$(this);
},
 postMessage$2: function(message, messagePorts) {
  var t1 = $ === messagePorts;
  if (t1)
    messagePorts = null;
  if (!t1) {
    this._postMessage_1$2($._convertDartToNative_SerializedScriptValue(message), messagePorts);
    return;
  }
  this._postMessage_2$1($._convertDartToNative_SerializedScriptValue(message));
  return;
},
 postMessage$1: function(message) {
  return this.postMessage$2(message,$)
},
 _postMessage_1$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 _postMessage_2$1: function(message) {
  return this.postMessage(message);
}
});

$.$defineNativeClass('DelayNode', {"": []
});

$.$defineNativeClass('HTMLDetailsElement', {"": [],
 open$3: function(arg0, arg1, arg2) { return this.open.call$3(arg0, arg1, arg2); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('DeviceMotionEvent', {"": []
});

$.$defineNativeClass('DeviceOrientationEvent', {"": []
});

$.$defineNativeClass('HTMLDirectoryElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('DirectoryEntry', {"": []
});

$.$defineNativeClass('DirectoryEntrySync', {"": []
});

$.$defineNativeClass('DirectoryReader', {"": []
});

$.$defineNativeClass('DirectoryReaderSync', {"": []
});

$.$defineNativeClass('HTMLDivElement', {"": [],
 align$2: function(arg0, arg1) { return this.align.call$2(arg0, arg1); },
 is$DivElement: function() { return true; },
 is$Element: function() { return true; }
});

$.$defineNativeClass('DocumentFragment', {"": [],
 get$elements: function() {
  if (this._elements == null)
    this._elements = $._FilteredElementList$(this);
  return this._elements;
},
 query$1: function(selectors) {
  return this.$dom_querySelector$1(selectors);
},
 queryAll$1: function(selectors) {
  return $._FrozenElementList$_wrap(this.$dom_querySelectorAll$1(selectors));
},
 set$innerHTML: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$innerHTML')) {
  {
  $.clear(this.get$nodes());
  var e = $.Element_Element$tag('div');
  e.set$innerHTML(value);
  var nodes = $.ListImplementation_List$from(e.get$nodes());
  $.addAll(this.get$nodes(), nodes);
}
  } else {
    return Object.prototype.set$innerHTML.call(this, value);
  }

},
 get$rect: function() {
  return $._createMeasurementFuture(new $._DocumentFragmentImpl_rect_anon(), $.Completer_Completer());
},
 get$hidden: function() {
  return false;
},
 get$id: function() {
  return '';
},
 get$parent: function() {
  return;
},
 get$attributes: function() {
  return $.CTC19;
},
 get$classes: function() {
  return $._FrozenCSSClassSet$();
},
 get$style: function() {
  return $.Element_Element$tag('div').get$style();
},
 get$computedStyle: function() {
  return $._emptyStyleFuture();
},
 blur$0: function() {
},
 get$blur: function() { return new $.BoundClosure2(this, 'blur$0'); },
 focus$0: function() {
},
 get$focus: function() { return new $.BoundClosure2(this, 'focus$0'); },
 click$0: function() {
},
 get$click: function() { return new $.BoundClosure2(this, 'click$0'); },
 set$hidden: function(value) {
  throw $.$$throw($.UnsupportedError$('Hidden can\'t be set for document fragments.'));
},
 get$on: function() {
  return $._ElementEventsImpl$(this);
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 $dom_querySelectorAll$1: function(selectors) {
  return this.querySelectorAll(selectors);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLDocument', {"": ["activeElement?", "body?", "readyState?"],
 get$on: function() {
  return $._DocumentEventsImpl$(this);
},
 $dom_createElement$1: function(tagName) {
  return this.createElement(tagName);
},
 $dom_createEvent$1: function(eventType) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_createEvent$1')) {
  {
  return this.createEvent(eventType);
}
  } else {
    return Object.prototype.$dom_createEvent$1.call(this, eventType);
  }

},
 $dom_getElementById$1: function(elementId) {
  return this.getElementById(elementId);
},
 $dom_getElementsByName$1: function(elementName) {
  return this.getElementsByName(elementName);
},
 $dom_getElementsByTagName$1: function(tagname) {
  return this.getElementsByTagName(tagname);
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 $dom_querySelectorAll$1: function(selectors) {
  return this.querySelectorAll(selectors);
},
 query$1: function(selectors) {
  if ($.CTC10.hasMatch$1(selectors) === true)
    return this.$dom_getElementById$1($.substring$1(selectors, 1));
  return this.$dom_querySelector$1(selectors);
},
 queryAll$1: function(selectors) {
  if ($.CTC30.hasMatch$1(selectors) === true) {
    var mutableMatches = this.$dom_getElementsByName$1($.substring$2(selectors, 7, selectors.length - 2));
    if (typeof mutableMatches !== 'string' && (typeof mutableMatches !== 'object' || mutableMatches === null || mutableMatches.constructor !== Array && !mutableMatches.is$JavaScriptIndexingBehavior()))
      return this.queryAll$1$bailout(1, mutableMatches);
    var len = mutableMatches.length;
    var copyOfMatches = $.ListImplementation_List(len);
    for (var t1 = mutableMatches.length, i = 0; i < len; ++i) {
      if (i >= t1)
        throw $.ioore(i);
      copyOfMatches[i] = mutableMatches[i];
    }
    return $._FrozenElementList$_wrap(copyOfMatches);
  } else if ($.CTC31.hasMatch$1(selectors) === true) {
    mutableMatches = this.$dom_getElementsByTagName$1(selectors);
    if (typeof mutableMatches !== 'string' && (typeof mutableMatches !== 'object' || mutableMatches === null || mutableMatches.constructor !== Array && !mutableMatches.is$JavaScriptIndexingBehavior()))
      return this.queryAll$1$bailout(2, mutableMatches);
    len = mutableMatches.length;
    copyOfMatches = $.ListImplementation_List(len);
    for (t1 = mutableMatches.length, i = 0; i < len; ++i) {
      if (i >= t1)
        throw $.ioore(i);
      copyOfMatches[i] = mutableMatches[i];
    }
    return $._FrozenElementList$_wrap(copyOfMatches);
  } else
    return $._FrozenElementList$_wrap(this.$dom_querySelectorAll$1(selectors));
},
 queryAll$1$bailout: function(state0, env0) {
  switch (state0) {
    case 1:
      mutableMatches = env0;
      break;
    case 2:
      mutableMatches = env0;
      break;
  }
  switch (state0) {
    case 0:
    default:
      if (state0 === 1 || state0 === 0 && $.CTC30.hasMatch$1(selectors) === true)
        switch (state0) {
          case 0:
            var mutableMatches = this.$dom_getElementsByName$1($.substring$2(selectors, 7, selectors.length - 2));
          case 1:
            state0 = 0;
            var len = $.get$length(mutableMatches);
            var copyOfMatches = $.ListImplementation_List(len);
            for (var i = 0; $.ltB(i, len); ++i) {
              var t1 = $.index(mutableMatches, i);
              if (i >= copyOfMatches.length)
                throw $.ioore(i);
              copyOfMatches[i] = t1;
            }
            return $._FrozenElementList$_wrap(copyOfMatches);
        }
      else
        switch (state0) {
          case 0:
          case 2:
            if (state0 === 2 || state0 === 0 && $.CTC31.hasMatch$1(selectors) === true)
              switch (state0) {
                case 0:
                  mutableMatches = this.$dom_getElementsByTagName$1(selectors);
                case 2:
                  state0 = 0;
                  len = $.get$length(mutableMatches);
                  copyOfMatches = $.ListImplementation_List(len);
                  for (i = 0; $.ltB(i, len); ++i) {
                    t1 = $.index(mutableMatches, i);
                    if (i >= copyOfMatches.length)
                      throw $.ioore(i);
                    copyOfMatches[i] = t1;
                  }
                  return $._FrozenElementList$_wrap(copyOfMatches);
              }
            else
              return $._FrozenElementList$_wrap(this.$dom_querySelectorAll$1(selectors));
        }
  }
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('DocumentType', {"": ["name?"],
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('DynamicsCompressorNode', {"": []
});

$.$defineNativeClass('EXTTextureFilterAnisotropic', {"": []
});

$.$defineNativeClass('Element', {"": ["hidden=", "id?", "innerHTML!", "clientHeight?", "clientLeft?", "clientTop?", "clientWidth?", "offsetHeight?", "offsetLeft?", "offsetTop?", "offsetWidth?", "scrollHeight?", "scrollLeft?", "scrollTop?", "scrollWidth?", "style?"],
 get$attributes: function() {
  return $._ElementAttributeMap$(this);
},
 set$elements: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$elements')) {
  {
  var elements = this.get$elements();
  $.clear(elements);
  $.addAll(elements, value);
}
  } else {
    return Object.prototype.set$elements.call(this, value);
  }

},
 get$elements: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$elements')) {
  {
  return $._ChildrenElementList$_wrap(this);
}
  } else {
    return Object.prototype.get$elements.call(this);
  }

},
 query$1: function(selectors) {
  return this.$dom_querySelector$1(selectors);
},
 queryAll$1: function(selectors) {
  return $._FrozenElementList$_wrap(this.$dom_querySelectorAll$1(selectors));
},
 get$classes: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$classes')) {
  {
  return $._CssClassSet$(this);
}
  } else {
    return Object.prototype.get$classes.call(this);
  }

},
 get$rect: function() {
  return $._createMeasurementFuture(new $._ElementImpl_rect_anon(this), $.Completer_Completer());
},
 get$computedStyle: function() {
  return this.getComputedStyle$1('');
},
 getComputedStyle$1: function(pseudoElement) {
  return $._createMeasurementFuture(new $._ElementImpl_getComputedStyle_anon(pseudoElement, this), $.Completer_Completer());
},
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $._ElementEventsImpl$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 get$$$dom_children: function() {
  return this.children;
},
 click$0: function() {
  return this.click();
},
 get$click: function() { return new $.BoundClosure2(this, 'click$0'); },
 get$$$dom_className: function() {
  return this.className;
},
 set$$$dom_className: function(value) {
  this.className = value;
},
 get$$$dom_firstElementChild: function() {
  return this.firstElementChild;
},
 get$$$dom_lastElementChild: function() {
  return this.lastElementChild;
},
 blur$0: function() {
  return this.blur();
},
 get$blur: function() { return new $.BoundClosure2(this, 'blur$0'); },
 focus$0: function() {
  return this.focus();
},
 get$focus: function() { return new $.BoundClosure2(this, 'focus$0'); },
 $dom_getAttribute$1: function(name) {
  return this.getAttribute(name);
},
 getBoundingClientRect$0: function() {
  return this.getBoundingClientRect();
},
 getClientRects$0: function() {
  return this.getClientRects();
},
 $dom_hasAttribute$1: function(name) {
  return this.hasAttribute(name);
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 $dom_querySelectorAll$1: function(selectors) {
  return this.querySelectorAll(selectors);
},
 $dom_removeAttribute$1: function(name) {
  return this.removeAttribute(name);
},
 $dom_setAttribute$2: function(name, value) {
  return this.setAttribute(name,value);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLEmbedElement', {"": ["height=", "name?", "type?", "width="],
 align$2: function(arg0, arg1) { return this.align.call$2(arg0, arg1); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('EntityReference', {"": []
});

$.$defineNativeClass('EntryArray', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('EntryArraySync', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('Entry', {"": ["name?"],
 remove$2: function(successCallback, errorCallback) {
  return this.remove($.convertDartClosureToJS(successCallback, 0),$.convertDartClosureToJS(errorCallback, 1));
},
 remove$1: function(successCallback) {
  successCallback = $.convertDartClosureToJS(successCallback, 0);
  return this.remove(successCallback);
}
});

$.$defineNativeClass('EntrySync', {"": ["name?"],
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('ErrorEvent', {"": ["message?"]
});

$.$defineNativeClass('EventException', {"": ["message?", "name?"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Event', {"": ["timeStamp?", "type?"],
 get$currentTarget: function() {
  return $._convertNativeToDart_EventTarget(this.get$_currentTarget());
},
 get$_currentTarget: function() {
  return this.currentTarget;
},
 get$target: function() {
  return $._convertNativeToDart_EventTarget(this.get$_target());
},
 get$_target: function() {
  return this.target;
},
 $dom_initEvent$3: function(eventTypeArg, canBubbleArg, cancelableArg) {
  return this.initEvent(eventTypeArg,canBubbleArg,cancelableArg);
},
 preventDefault$0: function() {
  return this.preventDefault();
},
 stopPropagation$0: function() {
  return this.stopPropagation();
}
});

$.$defineNativeClass('EventSource', {"": ["readyState?"],
 get$on: function() {
  return $._EventSourceEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('EventTarget', {"": [],
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $._EventsImpl$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_addEventListener$3')) {
  {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_addEventListener$3.call(this, type, listener, useCapture);
  }

},
 $dom_dispatchEvent$1: function(event) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_dispatchEvent$1')) {
  {
  return this.dispatchEvent(event);
}
  } else {
    return Object.prototype.$dom_dispatchEvent$1.call(this, event);
  }

},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_removeEventListener$3')) {
  {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }

}
});

$.$defineNativeClass('HTMLFieldSetElement', {"": ["elements?", "name?", "type?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('FileEntry', {"": []
});

$.$defineNativeClass('FileEntrySync', {"": []
});

$.$defineNativeClass('FileError', {"": []
});

$.$defineNativeClass('FileException', {"": ["message?", "name?"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('File', {"": ["name?"],
 is$_FileImpl: function() { return true; },
 is$File: function() { return true; },
 is$Blob: function() { return true; }
});

$.$defineNativeClass('FileList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$_FileListImpl: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('FileReader', {"": ["readyState?"],
 get$on: function() {
  return $._FileReaderEventsImpl$(this);
},
 abort$0: function() {
  return this.abort();
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('FileReaderSync', {"": []
});

$.$defineNativeClass('FileWriter', {"": ["length?", "readyState?"],
 get$on: function() {
  return $._FileWriterEventsImpl$(this);
},
 abort$0: function() {
  return this.abort();
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('FileWriterSync', {"": ["length?"]
});

$.$defineNativeClass('Float32Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Float64Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('HTMLFontElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('FormData', {"": []
});

$.$defineNativeClass('HTMLFormElement', {"": ["length?", "name?", "target?"],
 reset$0: function() {
  return this.reset();
},
 submit$0: function() {
  return this.submit();
},
 get$submit: function() { return new $.BoundClosure2(this, 'submit$0'); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLFrameElement', {"": ["height?", "location?", "name?", "width?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLFrameSetElement', {"": ["rows?"],
 get$on: function() {
  return $._FrameSetElementEventsImpl$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('Gamepad', {"": ["id?"]
});

$.$defineNativeClass('GamepadList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('Geolocation', {"": []
});

$.$defineNativeClass('Geoposition', {"": []
});

$.$defineNativeClass('HTMLHRElement', {"": ["width="],
 align$2: function(arg0, arg1) { return this.align.call$2(arg0, arg1); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLAllCollection', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLCollection', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLOptionsCollection', {"": [],
 get$length: function() {
  return this.length;
},
 set$length: function(value) {
  this.length = value;
},
 remove$1: function(index) {
  return this.remove(index);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HashChangeEvent', {"": []
});

$.$defineNativeClass('HTMLHeadElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLHeadingElement', {"": [],
 align$2: function(arg0, arg1) { return this.align.call$2(arg0, arg1); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLHtmlElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('XMLHttpRequestException', {"": ["message?", "name?"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XMLHttpRequest', {"": ["readyState?", "responseText?", "status?"],
 get$on: function() {
  return $._HttpRequestEventsImpl$(this);
},
 abort$0: function() {
  return this.abort();
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 open$5: function(method, url, async, user, password) {
  return this.open(method,url,async,user,password);
},
 open$3: function(method,url,async) {
  return this.open(method,url,async);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 send$1: function(data) {
  return this.send(data);
},
 setRequestHeader$2: function(header, value) {
  return this.setRequestHeader(header,value);
}
});

$.$defineNativeClass('XMLHttpRequestProgressEvent', {"": []
});

$.$defineNativeClass('XMLHttpRequestUpload', {"": [],
 get$on: function() {
  return $._HttpRequestUploadEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBAny', {"": []
});

$.$defineNativeClass('IDBCursor', {"": [],
 get$key: function() {
  return $._convertNativeToDart_IDBKey(this.get$_key());
},
 get$_key: function() {
  return this.key;
}
});

$.$defineNativeClass('IDBCursorWithValue', {"": [],
 get$value: function() {
  return $._convertNativeToDart_IDBAny(this.get$_lib_value());
},
 get$_lib_value: function() {
  return this.value;
}
});

$.$defineNativeClass('IDBDatabaseException', {"": ["message?", "name?"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('IDBDatabase', {"": ["name?"],
 get$on: function() {
  return $._IDBDatabaseEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBFactory', {"": []
});

$.$defineNativeClass('IDBIndex', {"": ["name?"]
});

$.$defineNativeClass('IDBKey', {"": []
});

$.$defineNativeClass('IDBKeyRange', {"": []
});

$.$defineNativeClass('IDBObjectStore', {"": ["name?"],
 add$2: function(value, key) {
  var t1 = $ === key;
  if (t1)
    key = null;
  if (!t1)
    return this._add_1$2($._convertDartToNative_SerializedScriptValue(value), key);
  return this._add_2$1($._convertDartToNative_SerializedScriptValue(value));
},
 add$1: function(value) {
  return this.add$2(value,$)
},
 _add_1$2: function(value, key) {
  return this.add(value,key);
},
 _add_2$1: function(value) {
  return this.add(value);
},
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('IDBOpenDBRequest', {"": [],
 get$on: function() {
  return $._IDBOpenDBRequestEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBRequest', {"": ["readyState?"],
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $._IDBRequestEventsImpl$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_addEventListener$3')) {
  {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_addEventListener$3.call(this, type, listener, useCapture);
  }

},
 $dom_dispatchEvent$1: function(evt) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_dispatchEvent$1')) {
  {
  return this.dispatchEvent(evt);
}
  } else {
    return Object.prototype.$dom_dispatchEvent$1.call(this, evt);
  }

},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_removeEventListener$3')) {
  {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }

}
});

$.$defineNativeClass('IDBTransaction', {"": [],
 get$on: function() {
  return $._IDBTransactionEventsImpl$(this);
},
 abort$0: function() {
  return this.abort();
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBVersionChangeEvent', {"": []
});

$.$defineNativeClass('IDBVersionChangeEvent', {"": []
});

$.$defineNativeClass('IDBVersionChangeRequest', {"": [],
 get$on: function() {
  return $._IDBVersionChangeRequestEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLIFrameElement', {"": ["height=", "name?", "width="],
 align$2: function(arg0, arg1) { return this.align.call$2(arg0, arg1); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('IceCandidate', {"": []
});

$.$defineNativeClass('ImageData', {"": ["height?", "width?"],
 is$_ImageDataImpl: function() { return true; },
 is$ImageData: function() { return true; }
});

$.$defineNativeClass('HTMLImageElement', {"": ["height=", "name?", "width=", "x?", "y?"],
 align$2: function(arg0, arg1) { return this.align.call$2(arg0, arg1); },
 complete$1: function(arg0) { return this.complete.call$1(arg0); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLInputElement', {"": ["height=", "max?", "min?", "name?", "pattern?", "type?", "value=", "width="],
 get$on: function() {
  return $._InputElementEventsImpl$(this);
},
 align$2: function(arg0, arg1) { return this.align.call$2(arg0, arg1); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('Int16Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Int32Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Int8Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('JavaScriptAudioNode', {"": [],
 get$on: function() {
  return $._JavaScriptAudioNodeEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('JavaScriptCallFrame', {"": ["column?", "type?"]
});

$.$defineNativeClass('KeyboardEvent', {"": []
});

$.$defineNativeClass('HTMLKeygenElement', {"": ["name?", "type?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLIElement', {"": ["type?", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLabelElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLegendElement', {"": [],
 align$2: function(arg0, arg1) { return this.align.call$2(arg0, arg1); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLinkElement', {"": ["target?", "type?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('History', {"": ["length?", "state?"]
});

$.$defineNativeClass('Location', {"": [],
 reload$0: function() {
  return this.reload();
},
 toString$0: function() {
  return this.toString();
},
 is$Location: function() { return true; }
});

$.$defineNativeClass('LocalMediaStream', {"": [],
 stop$0: function() {
  return this.stop();
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('DOMWindow', {"": ["applicationCache?", "console?", "name?", "navigator?", "status?"],
 get$document: function() {
  return this.document;
},
 _open2$2: function(url, name$) {
  return this.open(url,name$);
},
 _open3$3: function(url, name$, options) {
  return this.open(url,name$,options);
},
 open$3: function(url, name$, options) {
  if (options == null)
    return $._DOMWindowCrossFrameImpl__createSafe(this._open2$2(url, name$));
  else
    return $._DOMWindowCrossFrameImpl__createSafe(this._open3$3(url, name$, options));
},
 get$location: function() {
  return this._get_location$0();
},
 _get_location$0: function() {
  var result = this.get$_location();
  if ($._LocalWindowImpl__isDartLocation(result) === true)
    return result;
  if (null == this._location_wrapper)
    this._location_wrapper = $._LocationWrapper$(result);
  return this._location_wrapper;
},
 get$_location: function() {
  return this.location;
},
 requestLayoutFrame$1: function(callback) {
  $._addMeasurementFrameCallback(callback);
},
 get$on: function() {
  return $._LocalWindowEventsImpl$(this);
},
 get$parent: function() {
  return $._convertNativeToDart_Window(this.get$_parent());
},
 get$_parent: function() {
  return this.parent;
},
 get$top: function() {
  return $._convertNativeToDart_Window(this.get$_top());
},
 get$_top: function() {
  return this.top;
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 blur$0: function() {
  return this.blur();
},
 get$blur: function() { return new $.BoundClosure2(this, 'blur$0'); },
 clearTimeout$1: function(handle) {
  return this.clearTimeout(handle);
},
 close$0: function() {
  return this.close();
},
 $dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 focus$0: function() {
  return this.focus();
},
 get$focus: function() { return new $.BoundClosure2(this, 'focus$0'); },
 $dom_getComputedStyle$2: function(element, pseudoElement) {
  return this.getComputedStyle(element,pseudoElement);
},
 postMessage$3: function(message, targetOrigin, messagePorts) {
  var t1 = $ === message;
  if (t1)
    message = null;
  t1 = !t1;
  var t2 = $ === messagePorts;
  if (t2)
    messagePorts = null;
  if (t1 && t2) {
    this._postMessage_1$2($._convertDartToNative_SerializedScriptValue(message), targetOrigin);
    return;
  }
  if (t1)
    t1 = typeof messagePorts === 'object' && messagePorts !== null && (messagePorts.constructor === Array || messagePorts.is$List()) || messagePorts == null;
  else
    t1 = false;
  if (t1) {
    this._postMessage_2$3($._convertDartToNative_SerializedScriptValue(message), targetOrigin, messagePorts);
    return;
  }
  throw $.$$throw($.CTC17);
},
 postMessage$2: function(message,targetOrigin) {
  return this.postMessage$3(message,targetOrigin,$)
},
 _postMessage_1$2: function(message, targetOrigin) {
  return this.postMessage(message,targetOrigin);
},
 _postMessage_2$3: function(message, targetOrigin, messagePorts) {
  return this.postMessage(message,targetOrigin,messagePorts);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 scroll$2: function(x, y) {
  return this.scroll(x,y);
},
 get$scroll: function() { return new $.BoundClosure3(this, 'scroll$2'); },
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
},
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
},
 stop$0: function() {
  return this.stop();
}
});

$.$defineNativeClass('HTMLMapElement', {"": ["name?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLMarqueeElement', {"": ["height=", "width="],
 start$0: function() {
  return this.start();
},
 get$start: function() { return new $.BoundClosure2(this, 'start$0'); },
 stop$0: function() {
  return this.stop();
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('MediaController', {"": [],
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaElementAudioSourceNode', {"": []
});

$.$defineNativeClass('HTMLMediaElement', {"": ["readyState?"],
 get$on: function() {
  return $._MediaElementEventsImpl$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('MediaError', {"": []
});

$.$defineNativeClass('MediaKeyError', {"": []
});

$.$defineNativeClass('MediaKeyEvent', {"": ["message?"]
});

$.$defineNativeClass('MediaList', {"": ["length?"]
});

$.$defineNativeClass('MediaQueryList', {"": [],
 addListener$1: function(listener) {
  return this.addListener(listener);
}
});

$.$defineNativeClass('MediaSource', {"": ["readyState?"],
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStreamAudioSourceNode', {"": []
});

$.$defineNativeClass('MediaStreamEvent', {"": []
});

$.$defineNativeClass('MediaStream', {"": ["readyState?"],
 get$on: function() {
  return $._MediaStreamEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_addEventListener$3')) {
  {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_addEventListener$3.call(this, type, listener, useCapture);
  }

},
 $dom_dispatchEvent$1: function(event) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_dispatchEvent$1')) {
  {
  return this.dispatchEvent(event);
}
  } else {
    return Object.prototype.$dom_dispatchEvent$1.call(this, event);
  }

},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_removeEventListener$3')) {
  {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }

}
});

$.$defineNativeClass('MediaStreamList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('MediaStreamTrackEvent', {"": []
});

$.$defineNativeClass('MediaStreamTrack', {"": ["readyState?"],
 get$on: function() {
  return $._MediaStreamTrackEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStreamTrackList', {"": ["length?"],
 get$on: function() {
  return $._MediaStreamTrackListEventsImpl$(this);
},
 add$1: function(track) {
  return this.add(track);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 remove$1: function(track) {
  return this.remove(track);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MemoryInfo', {"": []
});

$.$defineNativeClass('HTMLMenuElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('MessageChannel', {"": []
});

$.$defineNativeClass('MessageEvent', {"": ["ports?"]
});

$.$defineNativeClass('MessagePort', {"": [],
 get$on: function() {
  return $._MessagePortEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 postMessage$2: function(message, messagePorts) {
  var t1 = $ === messagePorts;
  if (t1)
    messagePorts = null;
  if (!t1) {
    this._postMessage_1$2($._convertDartToNative_SerializedScriptValue(message), messagePorts);
    return;
  }
  this._postMessage_2$1($._convertDartToNative_SerializedScriptValue(message));
  return;
},
 postMessage$1: function(message) {
  return this.postMessage$2(message,$)
},
 _postMessage_1$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 _postMessage_2$1: function(message) {
  return this.postMessage(message);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 start$0: function() {
  return this.start();
},
 get$start: function() { return new $.BoundClosure2(this, 'start$0'); }
});

$.$defineNativeClass('HTMLMetaElement', {"": ["name?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('Metadata', {"": []
});

$.$defineNativeClass('HTMLMeterElement', {"": ["max?", "min?", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLModElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('MouseEvent', {"": ["clientX?", "clientY?", "x?", "y?"]
});

$.$defineNativeClass('MutationEvent', {"": []
});

$.$defineNativeClass('MutationObserver', {"": [],
 observe$9$attributeFilter$attributeOldValue$attributes$characterData$characterDataOldValue$childList$options$subtree: function(target, attributeFilter, attributeOldValue, attributes, characterData, characterDataOldValue, childList, options, subtree) {
  var parsedOptions = {};
  if (!(options == null))
    $.forEach(options, new $._MutationObserverImpl_observe_anon(parsedOptions));
  var t1 = new $._MutationObserverImpl_observe_override(parsedOptions);
  t1.call$2('childList', childList);
  t1.call$2('attributes', attributes);
  t1.call$2('characterData', characterData);
  t1.call$2('subtree', subtree);
  t1.call$2('attributeOldValue', attributeOldValue);
  t1.call$2('characterDataOldValue', characterDataOldValue);
  if (!(attributeFilter == null))
    t1.call$2('attributeFilter', attributeFilter);
  this._call$2(target, parsedOptions);
},
 observe$2$attributes: function(target,attributes) {
  return this.observe$9$attributeFilter$attributeOldValue$attributes$characterData$characterDataOldValue$childList$options$subtree(target,null,null,attributes,null,null,null,null,null)
},
 _call$2: function(target, options) {
  return this.observe(target,options);
}
});

$.$defineNativeClass('MutationRecord', {"": ["target?", "type?"]
});

$.$defineNativeClass('NamedNodeMap', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('Navigator', {"": ["userAgent?"]
});

$.$defineNativeClass('NavigatorUserMediaError', {"": []
});

$.$defineNativeClass('NodeFilter', {"": []
});

$.$defineNativeClass('Node', {"": [],
 get$nodes: function() {
  return $._ChildNodeListLazy$(this);
},
 remove$0: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('remove$0')) {
  {
  if (!(this.get$parent() == null))
    this.get$parent().$dom_removeChild$1(this);
}
  } else {
    return Object.prototype.remove$0.call(this);
  }

},
 replaceWith$1: function(otherNode) {
  try {
    var parent$ = this.get$parent();
    parent$.$dom_replaceChild$2(otherNode, this);
  } catch (exception) {
    $.unwrapException(exception);
  }

  return this;
},
 get$$$dom_attributes: function() {
  return this.attributes;
},
 get$$$dom_childNodes: function() {
  return this.childNodes;
},
 get$document: function() {
  return this.ownerDocument;
},
 get$parent: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$parent')) {
  {
  return this.parentNode;
}
  } else {
    return Object.prototype.get$parent.call(this);
  }

},
 get$text: function() {
  return this.textContent;
},
 set$text: function(value) {
  this.textContent = value;
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_appendChild$1: function(newChild) {
  return this.appendChild(newChild);
},
 contains$1: function(other) {
  return this.contains(other);
},
 $dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $dom_removeChild$1: function(oldChild) {
  return this.removeChild(oldChild);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_replaceChild$2: function(newChild, oldChild) {
  return this.replaceChild(newChild,oldChild);
}
});

$.$defineNativeClass('NodeIterator', {"": [],
 filter$1: function(arg0) { return this.filter.call$1(arg0); }
});

$.$defineNativeClass('NodeList', {"": ["_parent?", "length?"],
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  this._parent.$dom_appendChild$1(value);
},
 addLast$1: function(value) {
  this._parent.$dom_appendChild$1(value);
},
 addAll$1: function(collection) {
  for (var t1 = $.iterator(collection), t2 = this._parent; t1.get$hasNext() === true;)
    t2.$dom_appendChild$1(t1.next$0());
},
 removeLast$0: function() {
  var result = $.get$last(this);
  if (!(result == null))
    this._parent.$dom_removeChild$1(result);
  return result;
},
 clear$0: function() {
  this._parent.set$text('');
},
 operator$indexSet$2: function(index, value) {
  this._parent.$dom_replaceChild$2(value, this.operator$index$1(index));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._NodeListWrapper$($._Collections_filter(this, [], f));
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 get$first: function() {
  return this.operator$index$1(0);
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._NodeListWrapper$($._Lists_getRange(this, start, rangeLength, []));
},
 operator$index$1: function(index) {
  return this[index];
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('Notation', {"": []
});

$.$defineNativeClass('NotificationCenter', {"": []
});

$.$defineNativeClass('Notification', {"": [],
 get$on: function() {
  return $._NotificationEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('OESStandardDerivatives', {"": []
});

$.$defineNativeClass('OESTextureFloat', {"": []
});

$.$defineNativeClass('OESVertexArrayObject', {"": []
});

$.$defineNativeClass('HTMLOListElement', {"": ["start=", "type?"],
 start$5: function(arg0, arg1, arg2, arg3, arg4) { return this.start.call$5(arg0, arg1, arg2, arg3, arg4); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLObjectElement', {"": ["height=", "name?", "type?", "width="],
 align$2: function(arg0, arg1) { return this.align.call$2(arg0, arg1); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('OfflineAudioCompletionEvent', {"": []
});

$.$defineNativeClass('HTMLOptGroupElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLOptionElement', {"": ["value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('Oscillator', {"": ["type?"],
 start$1: function(when) {
  return this.start(when);
},
 get$start: function() { return new $.BoundClosure1(this, 'start$1'); }
});

$.$defineNativeClass('HTMLOutputElement', {"": ["name?", "type?", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('OverflowEvent', {"": []
});

$.$defineNativeClass('PagePopupController', {"": []
});

$.$defineNativeClass('PageTransitionEvent', {"": []
});

$.$defineNativeClass('HTMLParagraphElement', {"": [],
 align$2: function(arg0, arg1) { return this.align.call$2(arg0, arg1); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLParamElement', {"": ["name?", "type?", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('PeerConnection00', {"": ["readyState?"],
 get$on: function() {
  return $._PeerConnection00EventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('Performance', {"": []
});

$.$defineNativeClass('PerformanceNavigation', {"": ["type?"]
});

$.$defineNativeClass('PerformanceTiming', {"": []
});

$.$defineNativeClass('WebKitPoint', {"": ["x=", "y="]
});

$.$defineNativeClass('PopStateEvent', {"": ["state?"]
});

$.$defineNativeClass('PositionError', {"": ["message?"]
});

$.$defineNativeClass('HTMLPreElement', {"": ["width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ProcessingInstruction', {"": ["target?"]
});

$.$defineNativeClass('HTMLProgressElement', {"": ["max?", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ProgressEvent', {"": []
});

$.$defineNativeClass('HTMLQuoteElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('RGBColor', {"": []
});

$.$defineNativeClass('RTCDataChannelEvent', {"": []
});

$.$defineNativeClass('RTCDataChannel', {"": ["readyState?"],
 get$on: function() {
  return $._RTCDataChannelEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 send$1: function(data) {
  return this.send(data);
}
});

$.$defineNativeClass('RTCIceCandidateEvent', {"": []
});

$.$defineNativeClass('RTCIceCandidate', {"": []
});

$.$defineNativeClass('RTCPeerConnection', {"": ["readyState?"],
 get$on: function() {
  return $._RTCPeerConnectionEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('RTCSessionDescription', {"": ["type?"]
});

$.$defineNativeClass('RTCStatsElement', {"": []
});

$.$defineNativeClass('RTCStatsReport', {"": []
});

$.$defineNativeClass('RTCStatsResponse', {"": []
});

$.$defineNativeClass('RadioNodeList', {"": ["value="],
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('RangeException', {"": ["message?", "name?"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Range', {"": [],
 getBoundingClientRect$0: function() {
  return this.getBoundingClientRect();
},
 getClientRects$0: function() {
  return this.getClientRects();
},
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('RealtimeAnalyserNode', {"": []
});

$.$defineNativeClass('Rect', {"": ["left?", "top?"]
});

$.$defineNativeClass('SQLError', {"": ["message?"]
});

$.$defineNativeClass('SQLException', {"": ["message?"]
});

$.$defineNativeClass('SQLResultSet', {"": ["rows?"]
});

$.$defineNativeClass('SQLResultSetRowList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SQLTransaction', {"": []
});

$.$defineNativeClass('SQLTransactionSync', {"": []
});

$.$defineNativeClass('SVGAElement', {"": ["target?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAltGlyphDefElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAltGlyphElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAltGlyphItemElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAngle', {"": ["value="]
});

$.$defineNativeClass('SVGAnimateColorElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAnimateElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAnimateMotionElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAnimateTransformElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAnimatedAngle', {"": []
});

$.$defineNativeClass('SVGAnimatedBoolean', {"": []
});

$.$defineNativeClass('SVGAnimatedEnumeration', {"": []
});

$.$defineNativeClass('SVGAnimatedInteger', {"": []
});

$.$defineNativeClass('SVGAnimatedLength', {"": []
});

$.$defineNativeClass('SVGAnimatedLengthList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGAnimatedNumber', {"": []
});

$.$defineNativeClass('SVGAnimatedNumberList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGAnimatedPreserveAspectRatio', {"": []
});

$.$defineNativeClass('SVGAnimatedRect', {"": []
});

$.$defineNativeClass('SVGAnimatedString', {"": []
});

$.$defineNativeClass('SVGAnimatedTransformList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGAnimationElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGCircleElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGClipPathElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGColor', {"": []
});

$.$defineNativeClass('SVGComponentTransferFunctionElement', {"": ["offset?", "type?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGCursorElement', {"": ["x?", "y?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGDefsElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGDescElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGDocument', {"": [],
 $dom_createEvent$1: function(eventType) {
  return this.createEvent(eventType);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGElement', {"": [],
 get$classes: function() {
  if (this.get$_cssClassSet() == null)
    this.set$_cssClassSet($._AttributeClassSet$(this.get$_ptr()));
  return this.get$_cssClassSet();
},
 get$elements: function() {
  return $._FilteredElementList$(this);
},
 set$elements: function(value) {
  var elements = this.get$elements();
  $.clear(elements);
  $.addAll(elements, value);
},
 set$innerHTML: function(svg) {
  var container = $.Element_Element$tag('div');
  container.set$innerHTML('<svg version="1.1">' + $.S(svg) + '</svg>');
  this.set$elements($.index(container.get$elements(), 0).get$elements());
},
 get$id: function() {
  return this.id;
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGElementInstance', {"": [],
 get$on: function() {
  return $._SVGElementInstanceEventsImpl$(this);
}
});

$.$defineNativeClass('SVGElementInstanceList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGEllipseElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGException', {"": ["message?", "name?"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('SVGFEBlendElement', {"": ["height?", "width?", "x?", "y?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEColorMatrixElement', {"": ["type?", "values?", "height?", "width?", "x?", "y?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEComponentTransferElement', {"": ["height?", "width?", "x?", "y?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFECompositeElement', {"": ["height?", "width?", "x?", "y?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEConvolveMatrixElement', {"": ["height?", "width?", "x?", "y?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEDiffuseLightingElement', {"": ["height?", "width?", "x?", "y?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEDisplacementMapElement', {"": ["height?", "width?", "x?", "y?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEDistantLightElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEDropShadowElement', {"": ["height?", "width?", "x?", "y?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEFloodElement', {"": ["height?", "width?", "x?", "y?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEFuncAElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEFuncBElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEFuncGElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEFuncRElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEGaussianBlurElement', {"": ["height?", "width?", "x?", "y?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEImageElement', {"": ["height?", "width?", "x?", "y?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEMergeElement', {"": ["height?", "width?", "x?", "y?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEMergeNodeElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEMorphologyElement', {"": ["height?", "width?", "x?", "y?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEOffsetElement', {"": ["height?", "width?", "x?", "y?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEPointLightElement', {"": ["x?", "y?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFESpecularLightingElement', {"": ["height?", "width?", "x?", "y?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFESpotLightElement', {"": ["x?", "y?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFETileElement', {"": ["height?", "width?", "x?", "y?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFETurbulenceElement', {"": ["type?", "height?", "width?", "x?", "y?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFilterElement', {"": ["height?", "width?", "x?", "y?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontFaceElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontFaceFormatElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontFaceNameElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontFaceSrcElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontFaceUriElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGForeignObjectElement', {"": ["height?", "width?", "x?", "y?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGGElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGGlyphElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGGlyphRefElement', {"": ["x=", "y="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGGradientElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGHKernElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGImageElement', {"": ["height?", "width?", "x?", "y?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGLength', {"": ["value="]
});

$.$defineNativeClass('SVGLengthList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGLineElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGLinearGradientElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGMPathElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGMarkerElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGMaskElement', {"": ["height?", "width?", "x?", "y?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGMatrix', {"": []
});

$.$defineNativeClass('SVGMetadataElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGMissingGlyphElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGNumber', {"": ["value="]
});

$.$defineNativeClass('SVGNumberList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGPaint', {"": []
});

$.$defineNativeClass('SVGPathElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGPathSegArcAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegArcRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegClosePath', {"": []
});

$.$defineNativeClass('SVGPathSegCurvetoCubicAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoCubicRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoCubicSmoothAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoCubicSmoothRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticSmoothAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticSmoothRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSeg', {"": []
});

$.$defineNativeClass('SVGPathSegLinetoAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegLinetoHorizontalAbs', {"": ["x="]
});

$.$defineNativeClass('SVGPathSegLinetoHorizontalRel', {"": ["x="]
});

$.$defineNativeClass('SVGPathSegLinetoRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegLinetoVerticalAbs', {"": ["y="]
});

$.$defineNativeClass('SVGPathSegLinetoVerticalRel', {"": ["y="]
});

$.$defineNativeClass('SVGPathSegList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGPathSegMovetoAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegMovetoRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPatternElement', {"": ["height?", "width?", "x?", "y?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGPoint', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPointList', {"": [],
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('SVGPolygonElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGPolylineElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGPreserveAspectRatio', {"": [],
 align$2: function(arg0, arg1) { return this.align.call$2(arg0, arg1); }
});

$.$defineNativeClass('SVGRadialGradientElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGRectElement', {"": ["height?", "width?", "x?", "y?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGRect', {"": ["height=", "width=", "x=", "y="]
});

$.$defineNativeClass('SVGRenderingIntent', {"": []
});

$.$defineNativeClass('SVGSVGElement', {"": ["height?", "width?", "x?", "y?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGScriptElement', {"": ["type?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGSetElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGStopElement', {"": ["offset?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGStringList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGStyleElement', {"": ["type?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGSwitchElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGSymbolElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTRefElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTSpanElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTextContentElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTextElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTextPathElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTextPositioningElement', {"": ["x?", "y?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTitleElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTransform', {"": ["type?"]
});

$.$defineNativeClass('SVGTransformList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGUnitTypes', {"": []
});

$.$defineNativeClass('SVGUseElement', {"": ["height?", "width?", "x?", "y?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGVKernElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGViewElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGViewSpec', {"": []
});

$.$defineNativeClass('SVGZoomEvent', {"": []
});

$.$defineNativeClass('Screen', {"": ["height?", "width?"]
});

$.$defineNativeClass('HTMLScriptElement', {"": ["type?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ScriptProfile', {"": []
});

$.$defineNativeClass('ScriptProfileNode', {"": []
});

$.$defineNativeClass('HTMLSelectElement', {"": ["length=", "name?", "type?", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SessionDescription', {"": []
});

$.$defineNativeClass('HTMLShadowElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ShadowRoot', {"": ["activeElement?", "innerHTML!"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SharedWorkerContext', {"": ["name?"],
 get$on: function() {
  return $._SharedWorkerContextEventsImpl$(this);
}
});

$.$defineNativeClass('SharedWorker', {"": []
});

$.$defineNativeClass('SourceBuffer', {"": [],
 abort$0: function() {
  return this.abort();
}
});

$.$defineNativeClass('SourceBufferList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLSourceElement', {"": ["type?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLSpanElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SpeechGrammar', {"": []
});

$.$defineNativeClass('SpeechGrammarList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SpeechInputEvent', {"": []
});

$.$defineNativeClass('SpeechInputResult', {"": []
});

$.$defineNativeClass('SpeechInputResultList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SpeechRecognitionAlternative', {"": []
});

$.$defineNativeClass('SpeechRecognitionError', {"": ["message?"]
});

$.$defineNativeClass('SpeechRecognitionEvent', {"": []
});

$.$defineNativeClass('SpeechRecognition', {"": [],
 get$on: function() {
  return $._SpeechRecognitionEventsImpl$(this);
},
 abort$0: function() {
  return this.abort();
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 start$0: function() {
  return this.start();
},
 get$start: function() { return new $.BoundClosure2(this, 'start$0'); },
 stop$0: function() {
  return this.stop();
}
});

$.$defineNativeClass('SpeechRecognitionResult', {"": ["length?"]
});

$.$defineNativeClass('SpeechRecognitionResultList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('StorageEvent', {"": ["key?"]
});

$.$defineNativeClass('Storage', {"": [],
 containsKey$1: function(key) {
  return !(this.$dom_getItem$1(key) == null);
},
 operator$index$1: function(key) {
  return this.$dom_getItem$1(key);
},
 operator$indexSet$2: function(key, value) {
  return this.$dom_setItem$2(key, value);
},
 remove$1: function(key) {
  var value = this.operator$index$1(key);
  this.$dom_removeItem$1(key);
  return value;
},
 clear$0: function() {
  return this.$dom_clear$0();
},
 forEach$1: function(f) {
  for (var i = 0; true; ++i) {
    var key = this.$dom_key$1(i);
    if (key == null)
      return;
    f.call$2(key, this.operator$index$1(key));
  }
},
 get$keys: function() {
  var keys = [];
  this.forEach$1(new $._StorageImpl_keys_anon(keys));
  return keys;
},
 get$values: function() {
  var values = [];
  this.forEach$1(new $._StorageImpl_values_anon(values));
  return values;
},
 get$length: function() {
  return this.get$$$dom_length();
},
 get$isEmpty: function() {
  return this.$dom_key$1(0) == null;
},
 get$$$dom_length: function() {
  return this.length;
},
 $dom_clear$0: function() {
  return this.clear();
},
 $dom_getItem$1: function(key) {
  return this.getItem(key);
},
 $dom_key$1: function(index) {
  return this.key(index);
},
 $dom_removeItem$1: function(key) {
  return this.removeItem(key);
},
 $dom_setItem$2: function(key, data) {
  return this.setItem(key,data);
},
 is$Map: function() { return true; }
});

$.$defineNativeClass('StorageInfo', {"": []
});

$.$defineNativeClass('HTMLStyleElement', {"": ["type?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('StyleMedia', {"": ["type?"]
});

$.$defineNativeClass('StyleSheet', {"": ["type?"]
});

$.$defineNativeClass('StyleSheetList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLTableCaptionElement', {"": [],
 align$2: function(arg0, arg1) { return this.align.call$2(arg0, arg1); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableCellElement', {"": ["height=", "rowSpan?", "width="],
 align$2: function(arg0, arg1) { return this.align.call$2(arg0, arg1); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableColElement', {"": ["width="],
 align$2: function(arg0, arg1) { return this.align.call$2(arg0, arg1); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableElement', {"": ["rows?", "width="],
 align$2: function(arg0, arg1) { return this.align.call$2(arg0, arg1); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableRowElement', {"": [],
 align$2: function(arg0, arg1) { return this.align.call$2(arg0, arg1); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableSectionElement', {"": ["rows?"],
 align$2: function(arg0, arg1) { return this.align.call$2(arg0, arg1); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTextAreaElement', {"": ["name?", "rows?", "type?", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('TextEvent', {"": []
});

$.$defineNativeClass('Text', {"": []
});

$.$defineNativeClass('TextMetrics', {"": ["width?"]
});

$.$defineNativeClass('TextTrackCue', {"": ["id?", "position!", "text="],
 get$on: function() {
  return $._TextTrackCueEventsImpl$(this);
},
 align$2: function(arg0, arg1) { return this.align.call$2(arg0, arg1); },
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('TextTrackCueList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('TextTrack', {"": [],
 get$on: function() {
  return $._TextTrackEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('TextTrackList', {"": ["length?"],
 get$on: function() {
  return $._TextTrackListEventsImpl$(this);
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('TimeRanges', {"": ["length?"],
 end$1: function(index) {
  return this.end(index);
},
 get$end: function() { return new $.BoundClosure1(this, 'end$1'); },
 start$1: function(index) {
  return this.start(index);
},
 get$start: function() { return new $.BoundClosure1(this, 'start$1'); }
});

$.$defineNativeClass('HTMLTitleElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('TouchEvent', {"": ["changedTouches?", "touches?"]
});

$.$defineNativeClass('Touch', {"": ["clientX?", "clientY?", "pageX?", "pageY?"],
 get$target: function() {
  return $._convertNativeToDart_EventTarget(this.get$_target());
},
 get$_target: function() {
  return this.target;
}
});

$.$defineNativeClass('TouchList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLTrackElement', {"": ["readyState?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('TrackEvent', {"": []
});

$.$defineNativeClass('WebKitTransitionEvent', {"": []
});

$.$defineNativeClass('TreeWalker', {"": [],
 filter$1: function(arg0) { return this.filter.call$1(arg0); }
});

$.$defineNativeClass('UIEvent', {"": ["keyCode?", "pageX?", "pageY?"],
 get$view: function() {
  return $._convertNativeToDart_Window(this.get$_view());
},
 get$_view: function() {
  return this.view;
}
});

$.$defineNativeClass('HTMLUListElement', {"": ["type?"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('Uint16Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Uint32Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Uint8Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Uint8ClampedArray', {"": [],
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('HTMLUnknownElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ValidityState', {"": []
});

$.$defineNativeClass('HTMLVideoElement', {"": ["height=", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('WaveShaperNode', {"": []
});

$.$defineNativeClass('WaveTable', {"": []
});

$.$defineNativeClass('WebGLActiveInfo', {"": ["name?", "type?"]
});

$.$defineNativeClass('WebGLBuffer', {"": []
});

$.$defineNativeClass('WebGLCompressedTextureS3TC', {"": []
});

$.$defineNativeClass('WebGLContextAttributes', {"": []
});

$.$defineNativeClass('WebGLContextEvent', {"": []
});

$.$defineNativeClass('WebGLDebugRendererInfo', {"": []
});

$.$defineNativeClass('WebGLDebugShaders', {"": []
});

$.$defineNativeClass('WebGLDepthTexture', {"": []
});

$.$defineNativeClass('WebGLFramebuffer', {"": []
});

$.$defineNativeClass('WebGLLoseContext', {"": []
});

$.$defineNativeClass('WebGLProgram', {"": []
});

$.$defineNativeClass('WebGLRenderbuffer', {"": []
});

$.$defineNativeClass('WebGLRenderingContext', {"": [],
 enable$1: function(cap) {
  return this.enable(cap);
}
});

$.$defineNativeClass('WebGLShader', {"": []
});

$.$defineNativeClass('WebGLShaderPrecisionFormat', {"": []
});

$.$defineNativeClass('WebGLTexture', {"": []
});

$.$defineNativeClass('WebGLUniformLocation', {"": []
});

$.$defineNativeClass('WebGLVertexArrayObjectOES', {"": []
});

$.$defineNativeClass('WebKitAnimationList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 some$1: function(f) {
  return $._Collections_some(this, f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 setRange$4: function(start, rangeLength, from, startFrom) {
  throw $.$$throw($.UnsupportedError$('Cannot setRange on immutable List.'));
},
 setRange$3: function(start,rangeLength,from) {
  return this.setRange$4(start,rangeLength,from,null)
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('WebKitCSSFilterValue', {"": [],
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('WebKitNamedFlow', {"": ["name?"],
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_dispatchEvent$1: function(event) {
  return this.dispatchEvent(event);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('WebSocket', {"": ["readyState?"],
 get$on: function() {
  return $._WebSocketEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$2: function(code, reason) {
  return this.close(code,reason);
},
 close$0: function() {
  return this.close();
},
 $dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 send$1: function(data) {
  return this.send(data);
}
});

$.$defineNativeClass('WheelEvent', {"": [],
 get$deltaY: function() {
  if (this.deltaY !== undefined)
    return this.get$_deltaY();
  else if (this.wheelDelta !== undefined)
    return this.get$_wheelDelta();
  else if (this.detail !== undefined) {
    if (this.axis == MouseScrollEvent.VERTICAL_AXIS) {
      var detail = this.get$_detail();
      if ($.ltB(detail, 100))
        return $.mul(detail, 40);
      return detail;
    }
    return 0;
  }
  throw $.$$throw($.UnsupportedError$('deltaY is not supported'));
},
 get$deltaX: function() {
  if (this.deltaX !== undefined)
    return this.get$_deltaX();
  else if (this.wheelDeltaX !== undefined)
    return this.get$_wheelDeltaX();
  else if (this.detail !== undefined) {
    if (this.axis !== undefined && this.axis == MouseScrollEvent.HORIZONTAL_AXIS) {
      var detail = this.get$_detail();
      if ($.ltB(detail, 100))
        return $.mul(detail, 40);
      return detail;
    }
    return 0;
  }
  throw $.$$throw($.UnsupportedError$('deltaX is not supported'));
},
 get$_deltaY: function() {
  return this.deltaY;
},
 get$_deltaX: function() {
  return this.deltaX;
},
 get$_wheelDelta: function() {
  return this.wheelDelta;
},
 get$_wheelDeltaX: function() {
  return this.wheelDeltaX;
},
 get$_detail: function() {
  return this.detail;
}
});

$.$defineNativeClass('WorkerContext', {"": ["location?", "navigator?"],
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $._WorkerContextEventsImpl$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 clearTimeout$1: function(handle) {
  return this.clearTimeout(handle);
},
 close$0: function() {
  return this.close();
},
 $dom_dispatchEvent$1: function(evt) {
  return this.dispatchEvent(evt);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
},
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
}
});

$.$defineNativeClass('Worker', {"": [],
 get$on: function() {
  return $._WorkerEventsImpl$(this);
},
 postMessage$2: function(message, messagePorts) {
  var t1 = $ === messagePorts;
  if (t1)
    messagePorts = null;
  if (!t1) {
    this._postMessage_1$2($._convertDartToNative_SerializedScriptValue(message), messagePorts);
    return;
  }
  this._postMessage_2$1($._convertDartToNative_SerializedScriptValue(message));
  return;
},
 postMessage$1: function(message) {
  return this.postMessage$2(message,$)
},
 _postMessage_1$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 _postMessage_2$1: function(message) {
  return this.postMessage(message);
}
});

$.$defineNativeClass('WorkerLocation', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('WorkerNavigator', {"": ["userAgent?"]
});

$.$defineNativeClass('XMLSerializer', {"": []
});

$.$defineNativeClass('XPathEvaluator', {"": []
});

$.$defineNativeClass('XPathException', {"": ["message?", "name?"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XPathExpression', {"": []
});

$.$defineNativeClass('XPathNSResolver', {"": []
});

$.$defineNativeClass('XPathResult', {"": []
});

$.$defineNativeClass('XSLTProcessor', {"": [],
 reset$0: function() {
  return this.reset();
}
});

$.$defineNativeClass('Worker', {"": [],
 get$id: function() {
  return this.id;
},
 postMessage$1: function(msg) {
  return this.postMessage(msg);
}
});

$.$defineNativeClass('DOMWindow', {"": [],
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
},
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
},
 clearTimeout$1: function(handle) {
  return this.clearTimeout(handle);
}
});

// 526 dynamic classes.
// 526 classes
// 41 !leaf
(function(){
  var v0/*class(_SVGTextPositioningElementImpl)*/ = 'SVGTextPositioningElement|SVGTextElement|SVGTSpanElement|SVGTRefElement|SVGAltGlyphElement|SVGTextElement|SVGTSpanElement|SVGTRefElement|SVGAltGlyphElement';
  var v1/*class(_Uint8ArrayImpl)*/ = 'Uint8Array|Uint8ClampedArray|Uint8ClampedArray';
  var v2/*class(_MouseEventImpl)*/ = 'MouseEvent|WheelEvent|WheelEvent';
  var v3/*class(_AudioSourceNodeImpl)*/ = 'AudioSourceNode|Oscillator|MediaStreamAudioSourceNode|MediaElementAudioSourceNode|AudioBufferSourceNode|Oscillator|MediaStreamAudioSourceNode|MediaElementAudioSourceNode|AudioBufferSourceNode';
  var v4/*class(_SVGColorImpl)*/ = 'SVGColor|SVGPaint|SVGPaint';
  var v5/*class(_CSSValueListImpl)*/ = 'CSSValueList|WebKitCSSFilterValue|WebKitCSSTransformValue|WebKitCSSFilterValue|WebKitCSSTransformValue';
  var v6/*class(_TextImpl)*/ = 'Text|CDATASection|CDATASection';
  var v7/*class(_SVGTextContentElementImpl)*/ = [v0/*class(_SVGTextPositioningElementImpl)*/,v0/*class(_SVGTextPositioningElementImpl)*/,'SVGTextContentElement|SVGTextPathElement|SVGTextPathElement'].join('|');
  var v8/*class(_SVGGradientElementImpl)*/ = 'SVGGradientElement|SVGRadialGradientElement|SVGLinearGradientElement|SVGRadialGradientElement|SVGLinearGradientElement';
  var v9/*class(_SVGComponentTransferFunctionElementImpl)*/ = 'SVGComponentTransferFunctionElement|SVGFEFuncRElement|SVGFEFuncGElement|SVGFEFuncBElement|SVGFEFuncAElement|SVGFEFuncRElement|SVGFEFuncGElement|SVGFEFuncBElement|SVGFEFuncAElement';
  var v10/*class(_SVGAnimationElementImpl)*/ = 'SVGAnimationElement|SVGSetElement|SVGAnimateTransformElement|SVGAnimateMotionElement|SVGAnimateElement|SVGAnimateColorElement|SVGSetElement|SVGAnimateTransformElement|SVGAnimateMotionElement|SVGAnimateElement|SVGAnimateColorElement';
  var v11/*class(_SVGElementImpl)*/ = [v7/*class(_SVGTextContentElementImpl)*/,v8/*class(_SVGGradientElementImpl)*/,v9/*class(_SVGComponentTransferFunctionElementImpl)*/,v10/*class(_SVGAnimationElementImpl)*/,v7/*class(_SVGTextContentElementImpl)*/,v8/*class(_SVGGradientElementImpl)*/,v9/*class(_SVGComponentTransferFunctionElementImpl)*/,v10/*class(_SVGAnimationElementImpl)*/,'SVGElement|SVGViewElement|SVGVKernElement|SVGUseElement|SVGTitleElement|SVGSymbolElement|SVGSwitchElement|SVGStyleElement|SVGStopElement|SVGScriptElement|SVGSVGElement|SVGRectElement|SVGPolylineElement|SVGPolygonElement|SVGPatternElement|SVGPathElement|SVGMissingGlyphElement|SVGMetadataElement|SVGMaskElement|SVGMarkerElement|SVGMPathElement|SVGLineElement|SVGImageElement|SVGHKernElement|SVGGlyphRefElement|SVGGlyphElement|SVGGElement|SVGForeignObjectElement|SVGFontFaceUriElement|SVGFontFaceSrcElement|SVGFontFaceNameElement|SVGFontFaceFormatElement|SVGFontFaceElement|SVGFontElement|SVGFilterElement|SVGFETurbulenceElement|SVGFETileElement|SVGFESpotLightElement|SVGFESpecularLightingElement|SVGFEPointLightElement|SVGFEOffsetElement|SVGFEMorphologyElement|SVGFEMergeNodeElement|SVGFEMergeElement|SVGFEImageElement|SVGFEGaussianBlurElement|SVGFEFloodElement|SVGFEDropShadowElement|SVGFEDistantLightElement|SVGFEDisplacementMapElement|SVGFEDiffuseLightingElement|SVGFEConvolveMatrixElement|SVGFECompositeElement|SVGFEComponentTransferElement|SVGFEColorMatrixElement|SVGFEBlendElement|SVGEllipseElement|SVGDescElement|SVGDefsElement|SVGCursorElement|SVGClipPathElement|SVGCircleElement|SVGAltGlyphItemElement|SVGAltGlyphDefElement|SVGAElement|SVGViewElement|SVGVKernElement|SVGUseElement|SVGTitleElement|SVGSymbolElement|SVGSwitchElement|SVGStyleElement|SVGStopElement|SVGScriptElement|SVGSVGElement|SVGRectElement|SVGPolylineElement|SVGPolygonElement|SVGPatternElement|SVGPathElement|SVGMissingGlyphElement|SVGMetadataElement|SVGMaskElement|SVGMarkerElement|SVGMPathElement|SVGLineElement|SVGImageElement|SVGHKernElement|SVGGlyphRefElement|SVGGlyphElement|SVGGElement|SVGForeignObjectElement|SVGFontFaceUriElement|SVGFontFaceSrcElement|SVGFontFaceNameElement|SVGFontFaceFormatElement|SVGFontFaceElement|SVGFontElement|SVGFilterElement|SVGFETurbulenceElement|SVGFETileElement|SVGFESpotLightElement|SVGFESpecularLightingElement|SVGFEPointLightElement|SVGFEOffsetElement|SVGFEMorphologyElement|SVGFEMergeNodeElement|SVGFEMergeElement|SVGFEImageElement|SVGFEGaussianBlurElement|SVGFEFloodElement|SVGFEDropShadowElement|SVGFEDistantLightElement|SVGFEDisplacementMapElement|SVGFEDiffuseLightingElement|SVGFEConvolveMatrixElement|SVGFECompositeElement|SVGFEComponentTransferElement|SVGFEColorMatrixElement|SVGFEBlendElement|SVGEllipseElement|SVGDescElement|SVGDefsElement|SVGCursorElement|SVGClipPathElement|SVGCircleElement|SVGAltGlyphItemElement|SVGAltGlyphDefElement|SVGAElement'].join('|');
  var v12/*class(_MediaElementImpl)*/ = 'HTMLMediaElement|HTMLVideoElement|HTMLAudioElement|HTMLVideoElement|HTMLAudioElement';
  var v13/*class(_UIEventImpl)*/ = [v2/*class(_MouseEventImpl)*/,v2/*class(_MouseEventImpl)*/,'UIEvent|TouchEvent|TextEvent|SVGZoomEvent|KeyboardEvent|CompositionEvent|TouchEvent|TextEvent|SVGZoomEvent|KeyboardEvent|CompositionEvent'].join('|');
  var v14/*class(_ProgressEventImpl)*/ = 'ProgressEvent|XMLHttpRequestProgressEvent|XMLHttpRequestProgressEvent';
  var v15/*class(_ElementImpl)*/ = [v11/*class(_SVGElementImpl)*/,v12/*class(_MediaElementImpl)*/,v11/*class(_SVGElementImpl)*/,v12/*class(_MediaElementImpl)*/,'Element|HTMLUnknownElement|HTMLUListElement|HTMLTrackElement|HTMLTitleElement|HTMLTextAreaElement|HTMLTableSectionElement|HTMLTableRowElement|HTMLTableElement|HTMLTableColElement|HTMLTableCellElement|HTMLTableCaptionElement|HTMLStyleElement|HTMLSpanElement|HTMLSourceElement|HTMLShadowElement|HTMLSelectElement|HTMLScriptElement|HTMLQuoteElement|HTMLProgressElement|HTMLPreElement|HTMLParamElement|HTMLParagraphElement|HTMLOutputElement|HTMLOptionElement|HTMLOptGroupElement|HTMLObjectElement|HTMLOListElement|HTMLModElement|HTMLMeterElement|HTMLMetaElement|HTMLMenuElement|HTMLMarqueeElement|HTMLMapElement|HTMLLinkElement|HTMLLegendElement|HTMLLabelElement|HTMLLIElement|HTMLKeygenElement|HTMLInputElement|HTMLImageElement|HTMLIFrameElement|HTMLHtmlElement|HTMLHeadingElement|HTMLHeadElement|HTMLHRElement|HTMLFrameSetElement|HTMLFrameElement|HTMLFormElement|HTMLFontElement|HTMLFieldSetElement|HTMLEmbedElement|HTMLDivElement|HTMLDirectoryElement|HTMLDetailsElement|HTMLDataListElement|HTMLDListElement|HTMLContentElement|HTMLCanvasElement|HTMLButtonElement|HTMLBodyElement|HTMLBaseFontElement|HTMLBaseElement|HTMLBRElement|HTMLAreaElement|HTMLAppletElement|HTMLAnchorElement|HTMLElement|HTMLUnknownElement|HTMLUListElement|HTMLTrackElement|HTMLTitleElement|HTMLTextAreaElement|HTMLTableSectionElement|HTMLTableRowElement|HTMLTableElement|HTMLTableColElement|HTMLTableCellElement|HTMLTableCaptionElement|HTMLStyleElement|HTMLSpanElement|HTMLSourceElement|HTMLShadowElement|HTMLSelectElement|HTMLScriptElement|HTMLQuoteElement|HTMLProgressElement|HTMLPreElement|HTMLParamElement|HTMLParagraphElement|HTMLOutputElement|HTMLOptionElement|HTMLOptGroupElement|HTMLObjectElement|HTMLOListElement|HTMLModElement|HTMLMeterElement|HTMLMetaElement|HTMLMenuElement|HTMLMarqueeElement|HTMLMapElement|HTMLLinkElement|HTMLLegendElement|HTMLLabelElement|HTMLLIElement|HTMLKeygenElement|HTMLInputElement|HTMLImageElement|HTMLIFrameElement|HTMLHtmlElement|HTMLHeadingElement|HTMLHeadElement|HTMLHRElement|HTMLFrameSetElement|HTMLFrameElement|HTMLFormElement|HTMLFontElement|HTMLFieldSetElement|HTMLEmbedElement|HTMLDivElement|HTMLDirectoryElement|HTMLDetailsElement|HTMLDataListElement|HTMLDListElement|HTMLContentElement|HTMLCanvasElement|HTMLButtonElement|HTMLBodyElement|HTMLBaseFontElement|HTMLBaseElement|HTMLBRElement|HTMLAreaElement|HTMLAppletElement|HTMLAnchorElement|HTMLElement'].join('|');
  var v16/*class(_DocumentImpl)*/ = 'HTMLDocument|SVGDocument|SVGDocument';
  var v17/*class(_DocumentFragmentImpl)*/ = 'DocumentFragment|ShadowRoot|ShadowRoot';
  var v18/*class(_CharacterDataImpl)*/ = [v6/*class(_TextImpl)*/,v6/*class(_TextImpl)*/,'CharacterData|Comment|Comment'].join('|');
  var v19/*class(_WorkerContextImpl)*/ = 'WorkerContext|SharedWorkerContext|DedicatedWorkerContext|SharedWorkerContext|DedicatedWorkerContext';
  var v20/*class(_NodeImpl)*/ = [v15/*class(_ElementImpl)*/,v16/*class(_DocumentImpl)*/,v17/*class(_DocumentFragmentImpl)*/,v18/*class(_CharacterDataImpl)*/,v15/*class(_ElementImpl)*/,v16/*class(_DocumentImpl)*/,v17/*class(_DocumentFragmentImpl)*/,v18/*class(_CharacterDataImpl)*/,'Node|ProcessingInstruction|Notation|EntityReference|DocumentType|Attr|ProcessingInstruction|Notation|EntityReference|DocumentType|Attr'].join('|');
  var v21/*class(_MediaStreamImpl)*/ = 'MediaStream|LocalMediaStream|LocalMediaStream';
  var v22/*class(_IDBRequestImpl)*/ = 'IDBRequest|IDBVersionChangeRequest|IDBOpenDBRequest|IDBVersionChangeRequest|IDBOpenDBRequest';
  var v23/*class(_AbstractWorkerImpl)*/ = 'AbstractWorker|Worker|SharedWorker|Worker|SharedWorker';
  var table = [
    // [dynamic-dispatch-tag, tags of classes implementing dynamic-dispatch-tag]
    ['SVGTextPositioningElement', v0/*class(_SVGTextPositioningElementImpl)*/],
    ['SVGTextContentElement', v7/*class(_SVGTextContentElementImpl)*/],
    ['StyleSheet', 'StyleSheet|CSSStyleSheet|CSSStyleSheet'],
    ['Text', v6/*class(_TextImpl)*/],
    ['AbstractWorker', v23/*class(_AbstractWorkerImpl)*/],
    ['Uint8Array', v1/*class(_Uint8ArrayImpl)*/],
    ['ArrayBufferView', [v1/*class(_Uint8ArrayImpl)*/,v1/*class(_Uint8ArrayImpl)*/,'ArrayBufferView|Uint32Array|Uint16Array|Int8Array|Int32Array|Int16Array|Float64Array|Float32Array|DataView|Uint32Array|Uint16Array|Int8Array|Int32Array|Int16Array|Float64Array|Float32Array|DataView'].join('|')],
    ['MouseEvent', v2/*class(_MouseEventImpl)*/],
    ['UIEvent', v13/*class(_UIEventImpl)*/],
    ['AudioSourceNode', v3/*class(_AudioSourceNodeImpl)*/],
    ['AudioNode', [v3/*class(_AudioSourceNodeImpl)*/,v3/*class(_AudioSourceNodeImpl)*/,'AudioNode|WaveShaperNode|RealtimeAnalyserNode|JavaScriptAudioNode|DynamicsCompressorNode|DelayNode|ConvolverNode|BiquadFilterNode|AudioPannerNode|AudioGainNode|AudioDestinationNode|AudioChannelSplitter|AudioChannelMerger|WaveShaperNode|RealtimeAnalyserNode|JavaScriptAudioNode|DynamicsCompressorNode|DelayNode|ConvolverNode|BiquadFilterNode|AudioPannerNode|AudioGainNode|AudioDestinationNode|AudioChannelSplitter|AudioChannelMerger'].join('|')],
    ['AudioParam', 'AudioParam|AudioGain|AudioGain'],
    ['Blob', 'Blob|File|File'],
    ['CSSRule', 'CSSRule|CSSUnknownRule|CSSStyleRule|CSSPageRule|CSSMediaRule|WebKitCSSKeyframesRule|WebKitCSSKeyframeRule|CSSImportRule|CSSFontFaceRule|CSSCharsetRule|CSSUnknownRule|CSSStyleRule|CSSPageRule|CSSMediaRule|WebKitCSSKeyframesRule|WebKitCSSKeyframeRule|CSSImportRule|CSSFontFaceRule|CSSCharsetRule'],
    ['WorkerContext', v19/*class(_WorkerContextImpl)*/],
    ['SVGColor', v4/*class(_SVGColorImpl)*/],
    ['CSSValueList', v5/*class(_CSSValueListImpl)*/],
    ['CSSValue', [v4/*class(_SVGColorImpl)*/,v5/*class(_CSSValueListImpl)*/,v4/*class(_SVGColorImpl)*/,v5/*class(_CSSValueListImpl)*/,'CSSValue|CSSPrimitiveValue|CSSPrimitiveValue'].join('|')],
    ['CanvasRenderingContext', 'CanvasRenderingContext|WebGLRenderingContext|CanvasRenderingContext2D|WebGLRenderingContext|CanvasRenderingContext2D'],
    ['CharacterData', v18/*class(_CharacterDataImpl)*/],
    ['DOMTokenList', 'DOMTokenList|DOMSettableTokenList|DOMSettableTokenList'],
    ['DocumentFragment', v17/*class(_DocumentFragmentImpl)*/],
    ['HTMLDocument', v16/*class(_DocumentImpl)*/],
    ['SVGGradientElement', v8/*class(_SVGGradientElementImpl)*/],
    ['SVGComponentTransferFunctionElement', v9/*class(_SVGComponentTransferFunctionElementImpl)*/],
    ['SVGAnimationElement', v10/*class(_SVGAnimationElementImpl)*/],
    ['SVGElement', v11/*class(_SVGElementImpl)*/],
    ['HTMLMediaElement', v12/*class(_MediaElementImpl)*/],
    ['Element', v15/*class(_ElementImpl)*/],
    ['Entry', 'Entry|FileEntry|DirectoryEntry|FileEntry|DirectoryEntry'],
    ['EntrySync', 'EntrySync|FileEntrySync|DirectoryEntrySync|FileEntrySync|DirectoryEntrySync'],
    ['ProgressEvent', v14/*class(_ProgressEventImpl)*/],
    ['Event', [v13/*class(_UIEventImpl)*/,v14/*class(_ProgressEventImpl)*/,v13/*class(_UIEventImpl)*/,v14/*class(_ProgressEventImpl)*/,'Event|WebGLContextEvent|WebKitTransitionEvent|TrackEvent|StorageEvent|SpeechRecognitionEvent|SpeechRecognitionError|SpeechInputEvent|RTCIceCandidateEvent|RTCDataChannelEvent|PopStateEvent|PageTransitionEvent|OverflowEvent|OfflineAudioCompletionEvent|MutationEvent|MessageEvent|MediaStreamTrackEvent|MediaStreamEvent|MediaKeyEvent|IDBVersionChangeEvent|IDBVersionChangeEvent|HashChangeEvent|ErrorEvent|DeviceOrientationEvent|DeviceMotionEvent|CustomEvent|CloseEvent|BeforeLoadEvent|AudioProcessingEvent|WebKitAnimationEvent|WebGLContextEvent|WebKitTransitionEvent|TrackEvent|StorageEvent|SpeechRecognitionEvent|SpeechRecognitionError|SpeechInputEvent|RTCIceCandidateEvent|RTCDataChannelEvent|PopStateEvent|PageTransitionEvent|OverflowEvent|OfflineAudioCompletionEvent|MutationEvent|MessageEvent|MediaStreamTrackEvent|MediaStreamEvent|MediaKeyEvent|IDBVersionChangeEvent|IDBVersionChangeEvent|HashChangeEvent|ErrorEvent|DeviceOrientationEvent|DeviceMotionEvent|CustomEvent|CloseEvent|BeforeLoadEvent|AudioProcessingEvent|WebKitAnimationEvent'].join('|')],
    ['Node', v20/*class(_NodeImpl)*/],
    ['MediaStream', v21/*class(_MediaStreamImpl)*/],
    ['IDBRequest', v22/*class(_IDBRequestImpl)*/],
    ['EventTarget', [v19/*class(_WorkerContextImpl)*/,v20/*class(_NodeImpl)*/,v21/*class(_MediaStreamImpl)*/,v22/*class(_IDBRequestImpl)*/,v23/*class(_AbstractWorkerImpl)*/,v19/*class(_WorkerContextImpl)*/,v20/*class(_NodeImpl)*/,v21/*class(_MediaStreamImpl)*/,v22/*class(_IDBRequestImpl)*/,v23/*class(_AbstractWorkerImpl)*/,'EventTarget|WebSocket|WebKitNamedFlow|TextTrackList|TextTrack|TextTrackCue|SpeechRecognition|SourceBufferList|SVGElementInstance|RTCPeerConnection|RTCDataChannel|Performance|PeerConnection00|Notification|MessagePort|MediaStreamTrackList|MediaStreamTrack|MediaSource|MediaController|DOMWindow|IDBTransaction|IDBDatabase|XMLHttpRequestUpload|XMLHttpRequest|FileWriter|FileReader|EventSource|DOMApplicationCache|BatteryManager|AudioContext|WebSocket|WebKitNamedFlow|TextTrackList|TextTrack|TextTrackCue|SpeechRecognition|SourceBufferList|SVGElementInstance|RTCPeerConnection|RTCDataChannel|Performance|PeerConnection00|Notification|MessagePort|MediaStreamTrackList|MediaStreamTrack|MediaSource|MediaController|DOMWindow|IDBTransaction|IDBDatabase|XMLHttpRequestUpload|XMLHttpRequest|FileWriter|FileReader|EventSource|DOMApplicationCache|BatteryManager|AudioContext'].join('|')],
    ['HTMLCollection', 'HTMLCollection|HTMLOptionsCollection|HTMLOptionsCollection'],
    ['IDBCursor', 'IDBCursor|IDBCursorWithValue|IDBCursorWithValue'],
    ['NodeList', 'NodeList|RadioNodeList|RadioNodeList'],
    ['SVGPathSeg', 'SVGPathSeg|SVGPathSegMovetoRel|SVGPathSegMovetoAbs|SVGPathSegLinetoVerticalRel|SVGPathSegLinetoVerticalAbs|SVGPathSegLinetoRel|SVGPathSegLinetoHorizontalRel|SVGPathSegLinetoHorizontalAbs|SVGPathSegLinetoAbs|SVGPathSegCurvetoQuadraticSmoothRel|SVGPathSegCurvetoQuadraticSmoothAbs|SVGPathSegCurvetoQuadraticRel|SVGPathSegCurvetoQuadraticAbs|SVGPathSegCurvetoCubicSmoothRel|SVGPathSegCurvetoCubicSmoothAbs|SVGPathSegCurvetoCubicRel|SVGPathSegCurvetoCubicAbs|SVGPathSegClosePath|SVGPathSegArcRel|SVGPathSegArcAbs|SVGPathSegMovetoRel|SVGPathSegMovetoAbs|SVGPathSegLinetoVerticalRel|SVGPathSegLinetoVerticalAbs|SVGPathSegLinetoRel|SVGPathSegLinetoHorizontalRel|SVGPathSegLinetoHorizontalAbs|SVGPathSegLinetoAbs|SVGPathSegCurvetoQuadraticSmoothRel|SVGPathSegCurvetoQuadraticSmoothAbs|SVGPathSegCurvetoQuadraticRel|SVGPathSegCurvetoQuadraticAbs|SVGPathSegCurvetoCubicSmoothRel|SVGPathSegCurvetoCubicSmoothAbs|SVGPathSegCurvetoCubicRel|SVGPathSegCurvetoCubicAbs|SVGPathSegClosePath|SVGPathSegArcRel|SVGPathSegArcAbs']];
$.dynamicSetMetadata(table);
})();

var $globalThis = $;
var $globalState;
var $globals;
var $isWorker = false;
var $supportsWorkers = false;
var $thisScriptUrl;
function $static_init(){};

function $initGlobals(context) {
  context.isolateStatics = new Isolate();
}
function $setGlobals(context) {
  $ = context.isolateStatics;
  $globalThis = $;
}
$.main.call$0 = $.main

//
// BEGIN invoke [main].
//
if (typeof document != 'undefined' && document.readyState != 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner == 'function') {
        dartMainRunner(function() { $.startRootIsolate($.main); });
      } else {
        $.startRootIsolate($.main);
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner == 'function') {
    dartMainRunner(function() { $.startRootIsolate($.main); });
  } else {
    $.startRootIsolate($.main);
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
Isolate.$defineClass = function(cls, fields, prototype) {
  var generateGetterSetter =   function(field, prototype) {
    var len = field.length;
    var lastChar = field[len - 1];
    var needsGetter = lastChar == '?' || lastChar == '=';
    var needsSetter = lastChar == '!' || lastChar == '=';
    if (needsGetter || needsSetter) field = field.substring(0, len - 1);
    if (needsGetter) {
      var getterString = "return this." + field + ";";
        prototype["get$" + field] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + field] = new Function("v", setterString);
    }
    return field;
  };
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateGetterSetter(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== "undefined") supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var cls in collectedClasses) {
    if (hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, desc[''], desc);
      if (desc['super'] !== "") Isolate.$pendingClasses[cls] = desc['super'];
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (hasOwnProperty.call(finishedClasses, cls)) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      for (var member in prototype) {
        if (member == '' || member == 'super') continue;
        if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}

//@ sourceMappingURL=udj.dart.js.map